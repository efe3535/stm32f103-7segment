ARM GAS  /tmp/ccqasgHV.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.reset,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	reset:
  25              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stdio.h"
  22:Core/Src/main.c **** #include "stdlib.h"
  23:Core/Src/main.c **** uint8_t receive;
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccqasgHV.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim1_ch1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_DMA_Init(void);
  58:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  59:Core/Src/main.c **** static void MX_TIM1_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** static void reset() {
  26              		.loc 1 66 21 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  67:Core/Src/main.c **** 	receive = '\0'; // do not repeat.
  37              		.loc 1 67 2 view .LVU1
  38              		.loc 1 67 10 is_stmt 0 view .LVU2
  39 0002 0024     		movs	r4, #0
  40 0004 174B     		ldr	r3, .L3
  41 0006 1C70     		strb	r4, [r3]
  68:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_RESET);
  42              		.loc 1 68 2 is_stmt 1 view .LVU3
  43 0008 174E     		ldr	r6, .L3+4
  44 000a 2246     		mov	r2, r4
  45 000c 4FF48071 		mov	r1, #256
  46 0010 3046     		mov	r0, r6
  47 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccqasgHV.s 			page 3


  48              	.LVL0:
  69:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_RESET);
  49              		.loc 1 69 2 view .LVU4
  50 0016 2246     		mov	r2, r4
  51 0018 4021     		movs	r1, #64
  52 001a 3046     		mov	r0, r6
  53 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  54              	.LVL1:
  70:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_RESET);
  55              		.loc 1 70 2 view .LVU5
  56 0020 124D     		ldr	r5, .L3+8
  57 0022 2246     		mov	r2, r4
  58 0024 1021     		movs	r1, #16
  59 0026 2846     		mov	r0, r5
  60 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  61              	.LVL2:
  71:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_RESET);
  62              		.loc 1 71 2 view .LVU6
  63 002c 2246     		mov	r2, r4
  64 002e 0421     		movs	r1, #4
  65 0030 2846     		mov	r0, r5
  66 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  67              	.LVL3:
  72:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_RESET);
  68              		.loc 1 72 2 view .LVU7
  69 0036 2246     		mov	r2, r4
  70 0038 0221     		movs	r1, #2
  71 003a 2846     		mov	r0, r5
  72 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL4:
  73:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_RESET);
  74              		.loc 1 73 2 view .LVU8
  75 0040 2246     		mov	r2, r4
  76 0042 4FF48061 		mov	r1, #1024
  77 0046 3046     		mov	r0, r6
  78 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
  79              	.LVL5:
  74:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_RESET);
  80              		.loc 1 74 2 view .LVU9
  81 004c 2246     		mov	r2, r4
  82 004e 0221     		movs	r1, #2
  83 0050 3046     		mov	r0, r6
  84 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
  85              	.LVL6:
  75:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_RESET);
  86              		.loc 1 75 2 view .LVU10
  87 0056 2246     		mov	r2, r4
  88 0058 2021     		movs	r1, #32
  89 005a 2846     		mov	r0, r5
  90 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
  91              	.LVL7:
  76:Core/Src/main.c **** }
  92              		.loc 1 76 1 is_stmt 0 view .LVU11
  93 0060 70BD     		pop	{r4, r5, r6, pc}
  94              	.L4:
  95 0062 00BF     		.align	2
  96              	.L3:
ARM GAS  /tmp/ccqasgHV.s 			page 4


  97 0064 00000000 		.word	receive
  98 0068 000C0140 		.word	1073810432
  99 006c 00080140 		.word	1073809408
 100              		.cfi_endproc
 101              	.LFE68:
 103              		.section	.text.MX_GPIO_Init,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	MX_GPIO_Init:
 110              	.LFB75:
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** static void seg(int pin) {
  79:Core/Src/main.c **** 	switch(pin) {
  80:Core/Src/main.c **** 		case 1:
  81:Core/Src/main.c **** 			reset();
  82:Core/Src/main.c **** //			HAL_UART_Transmit(&huart1, (uint8_t)'q', 1,100);
  83:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  84:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
  85:Core/Src/main.c **** 			break;
  86:Core/Src/main.c **** 		case 2:
  87:Core/Src/main.c **** 			reset();
  88:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
  89:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  90:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
  91:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
  92:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 			break;
  95:Core/Src/main.c **** 		case 3:
  96:Core/Src/main.c **** 			reset();		
  97:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
  98:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  99:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 101:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 102:Core/Src/main.c **** 			break;
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** 		case 4:
 105:Core/Src/main.c **** 			reset();
 106:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 107:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 108:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 109:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 110:Core/Src/main.c **** 			break;
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 		case 5:
 113:Core/Src/main.c **** 			reset();
 114:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 115:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 116:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 117:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 118:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 			break;
 121:Core/Src/main.c **** 		case 6:
ARM GAS  /tmp/ccqasgHV.s 			page 5


 122:Core/Src/main.c **** 			reset();
 123:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 124:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 125:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 126:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 127:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 128:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 129:Core/Src/main.c **** 			break;
 130:Core/Src/main.c **** 		case 7:
 131:Core/Src/main.c **** 			reset();
 132:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 133:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 134:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 135:Core/Src/main.c **** 			break;
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 		case 8:
 138:Core/Src/main.c **** 			reset();
 139:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 141:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 142:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 143:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 144:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 145:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 146:Core/Src/main.c **** 			break;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 		case 9:
 149:Core/Src/main.c **** 			reset();	
 150:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 151:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 152:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 153:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 154:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 155:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 156:Core/Src/main.c **** 			break;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 		case 'l' - '0':
 159:Core/Src/main.c **** 			for(int i=1; i<10; i++) {
 160:Core/Src/main.c **** 				seg(i);
 161:Core/Src/main.c **** 				HAL_Delay(1000);
 162:Core/Src/main.c **** 			}
 163:Core/Src/main.c **** 			reset();
 164:Core/Src/main.c **** 		case 'r' - '0':
 165:Core/Src/main.c **** 			reset();
 166:Core/Src/main.c **** 			break;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 		case '.' - '0':
 169:Core/Src/main.c **** 			reset();
 170:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_SET);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 		default:
 173:Core/Src/main.c **** 			break;
 174:Core/Src/main.c **** 	}
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE END 0 */
 178:Core/Src/main.c **** 
ARM GAS  /tmp/ccqasgHV.s 			page 6


 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief  The application entry poinstm32 uart input poll to integert.
 181:Core/Src/main.c ****   * @retval int
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** int main(void)
 184:Core/Src/main.c **** {
 185:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END 1 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 192:Core/Src/main.c ****   HAL_Init();
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END Init */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* Configure the system clock */
 199:Core/Src/main.c ****   SystemClock_Config();
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END SysInit */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* Initialize all configured peripherals */
 206:Core/Src/main.c ****   MX_GPIO_Init();
 207:Core/Src/main.c ****   MX_DMA_Init();
 208:Core/Src/main.c ****   MX_USART1_UART_Init();
 209:Core/Src/main.c ****   MX_TIM1_Init();
 210:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 211:Core/Src/main.c ****   	TIM1->CCR1 = 100;
 212:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END 2 */
 215:Core/Src/main.c **** //	seg(2);
 216:Core/Src/main.c ****   /* Infinite loop */
 217:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 218:Core/Src/main.c ****   while (1)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     /* USER CODE END WHILE */
 221:Core/Src/main.c **** 	HAL_UART_Receive(&huart1, &receive, 1,100);
 222:Core/Src/main.c **** 	
 223:Core/Src/main.c **** 	seg(receive - '0');
 224:Core/Src/main.c **** 	/* USER CODE BEGIN 3 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE END 3 */
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief System Clock Configuration
 233:Core/Src/main.c ****   * @retval None
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  /tmp/ccqasgHV.s 			page 7


 236:Core/Src/main.c **** {
 237:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 241:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 246:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 250:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 258:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 259:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 260:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 261:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 262:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c **** }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 272:Core/Src/main.c ****   * @param None
 273:Core/Src/main.c ****   * @retval None
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c **** static void MX_TIM1_Init(void)
 276:Core/Src/main.c **** {
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 283:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 284:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 285:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 290:Core/Src/main.c ****   htim1.Instance = TIM1;
 291:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 292:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccqasgHV.s 			page 8


 293:Core/Src/main.c ****   htim1.Init.Period = 1023;
 294:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 295:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 296:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 297:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 302:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
 316:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 317:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 318:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 319:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 320:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 321:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 322:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 323:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     Error_Handler();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 328:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 329:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 330:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 331:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 332:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 333:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 334:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 341:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** /**
 346:Core/Src/main.c ****   * @brief USART1 Initialization Function
 347:Core/Src/main.c ****   * @param None
 348:Core/Src/main.c ****   * @retval None
 349:Core/Src/main.c ****   */
ARM GAS  /tmp/ccqasgHV.s 			page 9


 350:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 351:Core/Src/main.c **** {
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 360:Core/Src/main.c ****   huart1.Instance = USART1;
 361:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 362:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 363:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 364:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 365:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 366:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 367:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 368:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /**
 379:Core/Src/main.c ****   * Enable DMA controller clock
 380:Core/Src/main.c ****   */
 381:Core/Src/main.c **** static void MX_DMA_Init(void)
 382:Core/Src/main.c **** {
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* DMA controller clock enable */
 385:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* DMA interrupt init */
 388:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 389:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 390:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** }
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** /**
 395:Core/Src/main.c ****   * @brief GPIO Initialization Function
 396:Core/Src/main.c ****   * @param None
 397:Core/Src/main.c ****   * @retval None
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c **** static void MX_GPIO_Init(void)
 400:Core/Src/main.c **** {
 111              		.loc 1 400 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 32
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 116              	.LCFI1:
ARM GAS  /tmp/ccqasgHV.s 			page 10


 117              		.cfi_def_cfa_offset 24
 118              		.cfi_offset 4, -24
 119              		.cfi_offset 5, -20
 120              		.cfi_offset 6, -16
 121              		.cfi_offset 7, -12
 122              		.cfi_offset 8, -8
 123              		.cfi_offset 14, -4
 124 0004 88B0     		sub	sp, sp, #32
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 56
 401:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 127              		.loc 1 401 3 view .LVU13
 128              		.loc 1 401 20 is_stmt 0 view .LVU14
 129 0006 0024     		movs	r4, #0
 130 0008 0494     		str	r4, [sp, #16]
 131 000a 0594     		str	r4, [sp, #20]
 132 000c 0694     		str	r4, [sp, #24]
 133 000e 0794     		str	r4, [sp, #28]
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 404:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 134              		.loc 1 404 3 is_stmt 1 view .LVU15
 135              	.LBB4:
 136              		.loc 1 404 3 view .LVU16
 137              		.loc 1 404 3 view .LVU17
 138 0010 204B     		ldr	r3, .L7
 139 0012 9A69     		ldr	r2, [r3, #24]
 140 0014 42F02002 		orr	r2, r2, #32
 141 0018 9A61     		str	r2, [r3, #24]
 142              		.loc 1 404 3 view .LVU18
 143 001a 9A69     		ldr	r2, [r3, #24]
 144 001c 02F02002 		and	r2, r2, #32
 145 0020 0192     		str	r2, [sp, #4]
 146              		.loc 1 404 3 view .LVU19
 147 0022 019A     		ldr	r2, [sp, #4]
 148              	.LBE4:
 149              		.loc 1 404 3 view .LVU20
 405:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 150              		.loc 1 405 3 view .LVU21
 151              	.LBB5:
 152              		.loc 1 405 3 view .LVU22
 153              		.loc 1 405 3 view .LVU23
 154 0024 9A69     		ldr	r2, [r3, #24]
 155 0026 42F00402 		orr	r2, r2, #4
 156 002a 9A61     		str	r2, [r3, #24]
 157              		.loc 1 405 3 view .LVU24
 158 002c 9A69     		ldr	r2, [r3, #24]
 159 002e 02F00402 		and	r2, r2, #4
 160 0032 0292     		str	r2, [sp, #8]
 161              		.loc 1 405 3 view .LVU25
 162 0034 029A     		ldr	r2, [sp, #8]
 163              	.LBE5:
 164              		.loc 1 405 3 view .LVU26
 406:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 165              		.loc 1 406 3 view .LVU27
 166              	.LBB6:
 167              		.loc 1 406 3 view .LVU28
ARM GAS  /tmp/ccqasgHV.s 			page 11


 168              		.loc 1 406 3 view .LVU29
 169 0036 9A69     		ldr	r2, [r3, #24]
 170 0038 42F00802 		orr	r2, r2, #8
 171 003c 9A61     		str	r2, [r3, #24]
 172              		.loc 1 406 3 view .LVU30
 173 003e 9B69     		ldr	r3, [r3, #24]
 174 0040 03F00803 		and	r3, r3, #8
 175 0044 0393     		str	r3, [sp, #12]
 176              		.loc 1 406 3 view .LVU31
 177 0046 039B     		ldr	r3, [sp, #12]
 178              	.LBE6:
 179              		.loc 1 406 3 view .LVU32
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 409:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, seg_e_Pin|seg_d_Pin|seg_c_Pin|seg_dp_Pin, GPIO_PIN_RESET);
 180              		.loc 1 409 3 view .LVU33
 181 0048 DFF84C80 		ldr	r8, .L7+4
 182 004c 2246     		mov	r2, r4
 183 004e 3621     		movs	r1, #54
 184 0050 4046     		mov	r0, r8
 185 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 186              	.LVL8:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 412:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, seg_g_Pin|seg_f_Pin|seg_b_Pin|seg_a_Pin, GPIO_PIN_RESET);
 187              		.loc 1 412 3 view .LVU34
 188 0056 114D     		ldr	r5, .L7+8
 189 0058 2246     		mov	r2, r4
 190 005a 40F24251 		movw	r1, #1346
 191 005e 2846     		mov	r0, r5
 192 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 193              	.LVL9:
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /*Configure GPIO pins : seg_e_Pin seg_d_Pin seg_c_Pin seg_dp_Pin */
 415:Core/Src/main.c ****   GPIO_InitStruct.Pin = seg_e_Pin|seg_d_Pin|seg_c_Pin|seg_dp_Pin;
 194              		.loc 1 415 3 view .LVU35
 195              		.loc 1 415 23 is_stmt 0 view .LVU36
 196 0064 3623     		movs	r3, #54
 197 0066 0493     		str	r3, [sp, #16]
 416:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 198              		.loc 1 416 3 is_stmt 1 view .LVU37
 199              		.loc 1 416 24 is_stmt 0 view .LVU38
 200 0068 0127     		movs	r7, #1
 201 006a 0597     		str	r7, [sp, #20]
 417:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 202              		.loc 1 417 3 is_stmt 1 view .LVU39
 203              		.loc 1 417 24 is_stmt 0 view .LVU40
 204 006c 0694     		str	r4, [sp, #24]
 418:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 418 3 is_stmt 1 view .LVU41
 206              		.loc 1 418 25 is_stmt 0 view .LVU42
 207 006e 0226     		movs	r6, #2
 208 0070 0796     		str	r6, [sp, #28]
 419:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 209              		.loc 1 419 3 is_stmt 1 view .LVU43
 210 0072 04A9     		add	r1, sp, #16
 211 0074 4046     		mov	r0, r8
ARM GAS  /tmp/ccqasgHV.s 			page 12


 212 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL10:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /*Configure GPIO pins : seg_g_Pin seg_f_Pin seg_b_Pin seg_a_Pin */
 422:Core/Src/main.c ****   GPIO_InitStruct.Pin = seg_g_Pin|seg_f_Pin|seg_b_Pin|seg_a_Pin;
 214              		.loc 1 422 3 view .LVU44
 215              		.loc 1 422 23 is_stmt 0 view .LVU45
 216 007a 40F24253 		movw	r3, #1346
 217 007e 0493     		str	r3, [sp, #16]
 423:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 218              		.loc 1 423 3 is_stmt 1 view .LVU46
 219              		.loc 1 423 24 is_stmt 0 view .LVU47
 220 0080 0597     		str	r7, [sp, #20]
 424:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 221              		.loc 1 424 3 is_stmt 1 view .LVU48
 222              		.loc 1 424 24 is_stmt 0 view .LVU49
 223 0082 0694     		str	r4, [sp, #24]
 425:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 224              		.loc 1 425 3 is_stmt 1 view .LVU50
 225              		.loc 1 425 25 is_stmt 0 view .LVU51
 226 0084 0796     		str	r6, [sp, #28]
 426:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 227              		.loc 1 426 3 is_stmt 1 view .LVU52
 228 0086 04A9     		add	r1, sp, #16
 229 0088 2846     		mov	r0, r5
 230 008a FFF7FEFF 		bl	HAL_GPIO_Init
 231              	.LVL11:
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** }
 232              		.loc 1 428 1 is_stmt 0 view .LVU53
 233 008e 08B0     		add	sp, sp, #32
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 24
 236              		@ sp needed
 237 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 238              	.L8:
 239              		.align	2
 240              	.L7:
 241 0094 00100240 		.word	1073876992
 242 0098 00080140 		.word	1073809408
 243 009c 000C0140 		.word	1073810432
 244              		.cfi_endproc
 245              	.LFE75:
 247              		.section	.text.MX_DMA_Init,"ax",%progbits
 248              		.align	1
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	MX_DMA_Init:
 254              	.LFB74:
 382:Core/Src/main.c **** 
 255              		.loc 1 382 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 00B5     		push	{lr}
 260              	.LCFI4:
ARM GAS  /tmp/ccqasgHV.s 			page 13


 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 14, -4
 263 0002 83B0     		sub	sp, sp, #12
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 16
 385:Core/Src/main.c **** 
 266              		.loc 1 385 3 view .LVU55
 267              	.LBB7:
 385:Core/Src/main.c **** 
 268              		.loc 1 385 3 view .LVU56
 385:Core/Src/main.c **** 
 269              		.loc 1 385 3 view .LVU57
 270 0004 0A4B     		ldr	r3, .L11
 271 0006 5A69     		ldr	r2, [r3, #20]
 272 0008 42F00102 		orr	r2, r2, #1
 273 000c 5A61     		str	r2, [r3, #20]
 385:Core/Src/main.c **** 
 274              		.loc 1 385 3 view .LVU58
 275 000e 5B69     		ldr	r3, [r3, #20]
 276 0010 03F00103 		and	r3, r3, #1
 277 0014 0193     		str	r3, [sp, #4]
 385:Core/Src/main.c **** 
 278              		.loc 1 385 3 view .LVU59
 279 0016 019B     		ldr	r3, [sp, #4]
 280              	.LBE7:
 385:Core/Src/main.c **** 
 281              		.loc 1 385 3 view .LVU60
 389:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 282              		.loc 1 389 3 view .LVU61
 283 0018 0022     		movs	r2, #0
 284 001a 1146     		mov	r1, r2
 285 001c 0C20     		movs	r0, #12
 286 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 287              	.LVL12:
 390:Core/Src/main.c **** 
 288              		.loc 1 390 3 view .LVU62
 289 0022 0C20     		movs	r0, #12
 290 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 291              	.LVL13:
 392:Core/Src/main.c **** 
 292              		.loc 1 392 1 is_stmt 0 view .LVU63
 293 0028 03B0     		add	sp, sp, #12
 294              	.LCFI6:
 295              		.cfi_def_cfa_offset 4
 296              		@ sp needed
 297 002a 5DF804FB 		ldr	pc, [sp], #4
 298              	.L12:
 299 002e 00BF     		.align	2
 300              	.L11:
 301 0030 00100240 		.word	1073876992
 302              		.cfi_endproc
 303              	.LFE74:
 305              		.section	.text.seg,"ax",%progbits
 306              		.align	1
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
ARM GAS  /tmp/ccqasgHV.s 			page 14


 311              	seg:
 312              	.LVL14:
 313              	.LFB69:
  78:Core/Src/main.c **** 	switch(pin) {
 314              		.loc 1 78 26 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
  78:Core/Src/main.c **** 	switch(pin) {
 318              		.loc 1 78 26 is_stmt 0 view .LVU65
 319 0000 38B5     		push	{r3, r4, r5, lr}
 320              	.LCFI7:
 321              		.cfi_def_cfa_offset 16
 322              		.cfi_offset 3, -16
 323              		.cfi_offset 4, -12
 324              		.cfi_offset 5, -8
 325              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 		case 1:
 326              		.loc 1 79 2 is_stmt 1 view .LVU66
 327 0002 0230     		adds	r0, r0, #2
 328              	.LVL15:
  79:Core/Src/main.c **** 		case 1:
 329              		.loc 1 79 2 is_stmt 0 view .LVU67
 330 0004 4428     		cmp	r0, #68
 331 0006 00F26381 		bhi	.L13
 332 000a DFE810F0 		tbh	[pc, r0, lsl #1]
 333              	.L16:
 334 000e 6401     		.2byte	(.L27-.L16)/2
 335 0010 6101     		.2byte	(.L13-.L16)/2
 336 0012 6101     		.2byte	(.L13-.L16)/2
 337 0014 4500     		.2byte	(.L26-.L16)/2
 338 0016 5200     		.2byte	(.L25-.L16)/2
 339 0018 7200     		.2byte	(.L24-.L16)/2
 340 001a 9200     		.2byte	(.L23-.L16)/2
 341 001c AB00     		.2byte	(.L22-.L16)/2
 342 001e CB00     		.2byte	(.L21-.L16)/2
 343 0020 F000     		.2byte	(.L20-.L16)/2
 344 0022 0401     		.2byte	(.L19-.L16)/2
 345 0024 2E01     		.2byte	(.L18-.L16)/2
 346 0026 6101     		.2byte	(.L13-.L16)/2
 347 0028 6101     		.2byte	(.L13-.L16)/2
 348 002a 6101     		.2byte	(.L13-.L16)/2
 349 002c 6101     		.2byte	(.L13-.L16)/2
 350 002e 6101     		.2byte	(.L13-.L16)/2
 351 0030 6101     		.2byte	(.L13-.L16)/2
 352 0032 6101     		.2byte	(.L13-.L16)/2
 353 0034 6101     		.2byte	(.L13-.L16)/2
 354 0036 6101     		.2byte	(.L13-.L16)/2
 355 0038 6101     		.2byte	(.L13-.L16)/2
 356 003a 6101     		.2byte	(.L13-.L16)/2
 357 003c 6101     		.2byte	(.L13-.L16)/2
 358 003e 6101     		.2byte	(.L13-.L16)/2
 359 0040 6101     		.2byte	(.L13-.L16)/2
 360 0042 6101     		.2byte	(.L13-.L16)/2
 361 0044 6101     		.2byte	(.L13-.L16)/2
 362 0046 6101     		.2byte	(.L13-.L16)/2
 363 0048 6101     		.2byte	(.L13-.L16)/2
ARM GAS  /tmp/ccqasgHV.s 			page 15


 364 004a 6101     		.2byte	(.L13-.L16)/2
 365 004c 6101     		.2byte	(.L13-.L16)/2
 366 004e 6101     		.2byte	(.L13-.L16)/2
 367 0050 6101     		.2byte	(.L13-.L16)/2
 368 0052 6101     		.2byte	(.L13-.L16)/2
 369 0054 6101     		.2byte	(.L13-.L16)/2
 370 0056 6101     		.2byte	(.L13-.L16)/2
 371 0058 6101     		.2byte	(.L13-.L16)/2
 372 005a 6101     		.2byte	(.L13-.L16)/2
 373 005c 6101     		.2byte	(.L13-.L16)/2
 374 005e 6101     		.2byte	(.L13-.L16)/2
 375 0060 6101     		.2byte	(.L13-.L16)/2
 376 0062 6101     		.2byte	(.L13-.L16)/2
 377 0064 6101     		.2byte	(.L13-.L16)/2
 378 0066 6101     		.2byte	(.L13-.L16)/2
 379 0068 6101     		.2byte	(.L13-.L16)/2
 380 006a 6101     		.2byte	(.L13-.L16)/2
 381 006c 6101     		.2byte	(.L13-.L16)/2
 382 006e 6101     		.2byte	(.L13-.L16)/2
 383 0070 6101     		.2byte	(.L13-.L16)/2
 384 0072 6101     		.2byte	(.L13-.L16)/2
 385 0074 6101     		.2byte	(.L13-.L16)/2
 386 0076 6101     		.2byte	(.L13-.L16)/2
 387 0078 6101     		.2byte	(.L13-.L16)/2
 388 007a 6101     		.2byte	(.L13-.L16)/2
 389 007c 6101     		.2byte	(.L13-.L16)/2
 390 007e 6101     		.2byte	(.L13-.L16)/2
 391 0080 6101     		.2byte	(.L13-.L16)/2
 392 0082 6101     		.2byte	(.L13-.L16)/2
 393 0084 6101     		.2byte	(.L13-.L16)/2
 394 0086 6101     		.2byte	(.L13-.L16)/2
 395 0088 6101     		.2byte	(.L13-.L16)/2
 396 008a 6201     		.2byte	(.L29-.L16)/2
 397 008c 6101     		.2byte	(.L13-.L16)/2
 398 008e 6101     		.2byte	(.L13-.L16)/2
 399 0090 6101     		.2byte	(.L13-.L16)/2
 400 0092 6101     		.2byte	(.L13-.L16)/2
 401 0094 6101     		.2byte	(.L13-.L16)/2
 402 0096 5F01     		.2byte	(.L15-.L16)/2
 403              		.p2align 1
 404              	.L26:
  81:Core/Src/main.c **** //			HAL_UART_Transmit(&huart1, (uint8_t)'q', 1,100);
 405              		.loc 1 81 4 is_stmt 1 view .LVU68
 406 0098 FFF7FEFF 		bl	reset
 407              	.LVL16:
  83:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 408              		.loc 1 83 4 view .LVU69
 409 009c 0122     		movs	r2, #1
 410 009e 4021     		movs	r1, #64
 411 00a0 9148     		ldr	r0, .L33
 412 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 413              	.LVL17:
  84:Core/Src/main.c **** 			break;
 414              		.loc 1 84 4 view .LVU70
 415 00a6 0122     		movs	r2, #1
 416 00a8 1021     		movs	r1, #16
 417 00aa 9048     		ldr	r0, .L33+4
ARM GAS  /tmp/ccqasgHV.s 			page 16


 418 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 419              	.LVL18:
  85:Core/Src/main.c **** 		case 2:
 420              		.loc 1 85 4 view .LVU71
 421 00b0 0EE1     		b	.L13
 422              	.L25:
  87:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 423              		.loc 1 87 4 view .LVU72
 424 00b2 FFF7FEFF 		bl	reset
 425              	.LVL19:
  88:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 426              		.loc 1 88 4 view .LVU73
 427 00b6 8C4C     		ldr	r4, .L33
 428 00b8 0122     		movs	r2, #1
 429 00ba 4FF48071 		mov	r1, #256
 430 00be 2046     		mov	r0, r4
 431 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 432              	.LVL20:
  89:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 433              		.loc 1 89 4 view .LVU74
 434 00c4 0122     		movs	r2, #1
 435 00c6 4021     		movs	r1, #64
 436 00c8 2046     		mov	r0, r4
 437 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 438              	.LVL21:
  90:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 439              		.loc 1 90 4 view .LVU75
 440 00ce 0122     		movs	r2, #1
 441 00d0 0221     		movs	r1, #2
 442 00d2 2046     		mov	r0, r4
 443 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 444              	.LVL22:
  91:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 445              		.loc 1 91 4 view .LVU76
 446 00d8 A4F58064 		sub	r4, r4, #1024
 447 00dc 0122     		movs	r2, #1
 448 00de 0221     		movs	r1, #2
 449 00e0 2046     		mov	r0, r4
 450 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 451              	.LVL23:
  92:Core/Src/main.c **** 
 452              		.loc 1 92 4 view .LVU77
 453 00e6 0122     		movs	r2, #1
 454 00e8 0421     		movs	r1, #4
 455 00ea 2046     		mov	r0, r4
 456 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 457              	.LVL24:
  94:Core/Src/main.c **** 		case 3:
 458              		.loc 1 94 4 view .LVU78
 459 00f0 EEE0     		b	.L13
 460              	.L24:
  96:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 461              		.loc 1 96 4 view .LVU79
 462 00f2 FFF7FEFF 		bl	reset
 463              	.LVL25:
  97:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 464              		.loc 1 97 4 view .LVU80
ARM GAS  /tmp/ccqasgHV.s 			page 17


 465 00f6 7C4C     		ldr	r4, .L33
 466 00f8 0122     		movs	r2, #1
 467 00fa 4FF48071 		mov	r1, #256
 468 00fe 2046     		mov	r0, r4
 469 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 470              	.LVL26:
  98:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 471              		.loc 1 98 4 view .LVU81
 472 0104 0122     		movs	r2, #1
 473 0106 4021     		movs	r1, #64
 474 0108 2046     		mov	r0, r4
 475 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 476              	.LVL27:
  99:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 477              		.loc 1 99 4 view .LVU82
 478 010e 0122     		movs	r2, #1
 479 0110 0221     		movs	r1, #2
 480 0112 2046     		mov	r0, r4
 481 0114 FFF7FEFF 		bl	HAL_GPIO_WritePin
 482              	.LVL28:
 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 483              		.loc 1 100 4 view .LVU83
 484 0118 A4F58064 		sub	r4, r4, #1024
 485 011c 0122     		movs	r2, #1
 486 011e 1021     		movs	r1, #16
 487 0120 2046     		mov	r0, r4
 488 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
 489              	.LVL29:
 101:Core/Src/main.c **** 			break;
 490              		.loc 1 101 4 view .LVU84
 491 0126 0122     		movs	r2, #1
 492 0128 0421     		movs	r1, #4
 493 012a 2046     		mov	r0, r4
 494 012c FFF7FEFF 		bl	HAL_GPIO_WritePin
 495              	.LVL30:
 102:Core/Src/main.c **** 
 496              		.loc 1 102 4 view .LVU85
 497 0130 CEE0     		b	.L13
 498              	.L23:
 105:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 499              		.loc 1 105 4 view .LVU86
 500 0132 FFF7FEFF 		bl	reset
 501              	.LVL31:
 106:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 502              		.loc 1 106 4 view .LVU87
 503 0136 0122     		movs	r2, #1
 504 0138 1021     		movs	r1, #16
 505 013a 6C48     		ldr	r0, .L33+4
 506 013c FFF7FEFF 		bl	HAL_GPIO_WritePin
 507              	.LVL32:
 107:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 508              		.loc 1 107 4 view .LVU88
 509 0140 694C     		ldr	r4, .L33
 510 0142 0122     		movs	r2, #1
 511 0144 4021     		movs	r1, #64
 512 0146 2046     		mov	r0, r4
 513 0148 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccqasgHV.s 			page 18


 514              	.LVL33:
 108:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 515              		.loc 1 108 4 view .LVU89
 516 014c 0122     		movs	r2, #1
 517 014e 0221     		movs	r1, #2
 518 0150 2046     		mov	r0, r4
 519 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 520              	.LVL34:
 109:Core/Src/main.c **** 			break;
 521              		.loc 1 109 4 view .LVU90
 522 0156 0122     		movs	r2, #1
 523 0158 4FF48061 		mov	r1, #1024
 524 015c 2046     		mov	r0, r4
 525 015e FFF7FEFF 		bl	HAL_GPIO_WritePin
 526              	.LVL35:
 110:Core/Src/main.c **** 
 527              		.loc 1 110 4 view .LVU91
 528 0162 B5E0     		b	.L13
 529              	.L22:
 113:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 530              		.loc 1 113 4 view .LVU92
 531 0164 FFF7FEFF 		bl	reset
 532              	.LVL36:
 114:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 533              		.loc 1 114 4 view .LVU93
 534 0168 5F4C     		ldr	r4, .L33
 535 016a 0122     		movs	r2, #1
 536 016c 4FF48071 		mov	r1, #256
 537 0170 2046     		mov	r0, r4
 538 0172 FFF7FEFF 		bl	HAL_GPIO_WritePin
 539              	.LVL37:
 115:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 540              		.loc 1 115 4 view .LVU94
 541 0176 5D4D     		ldr	r5, .L33+4
 542 0178 0122     		movs	r2, #1
 543 017a 1021     		movs	r1, #16
 544 017c 2846     		mov	r0, r5
 545 017e FFF7FEFF 		bl	HAL_GPIO_WritePin
 546              	.LVL38:
 116:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 547              		.loc 1 116 4 view .LVU95
 548 0182 0122     		movs	r2, #1
 549 0184 0221     		movs	r1, #2
 550 0186 2046     		mov	r0, r4
 551 0188 FFF7FEFF 		bl	HAL_GPIO_WritePin
 552              	.LVL39:
 117:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 553              		.loc 1 117 4 view .LVU96
 554 018c 0122     		movs	r2, #1
 555 018e 4FF48061 		mov	r1, #1024
 556 0192 2046     		mov	r0, r4
 557 0194 FFF7FEFF 		bl	HAL_GPIO_WritePin
 558              	.LVL40:
 118:Core/Src/main.c **** 
 559              		.loc 1 118 4 view .LVU97
 560 0198 0122     		movs	r2, #1
 561 019a 0421     		movs	r1, #4
ARM GAS  /tmp/ccqasgHV.s 			page 19


 562 019c 2846     		mov	r0, r5
 563 019e FFF7FEFF 		bl	HAL_GPIO_WritePin
 564              	.LVL41:
 120:Core/Src/main.c **** 		case 6:
 565              		.loc 1 120 4 view .LVU98
 566 01a2 95E0     		b	.L13
 567              	.L21:
 122:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 568              		.loc 1 122 4 view .LVU99
 569 01a4 FFF7FEFF 		bl	reset
 570              	.LVL42:
 123:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 571              		.loc 1 123 4 view .LVU100
 572 01a8 4F4D     		ldr	r5, .L33
 573 01aa 0122     		movs	r2, #1
 574 01ac 4FF48071 		mov	r1, #256
 575 01b0 2846     		mov	r0, r5
 576 01b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 577              	.LVL43:
 124:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 578              		.loc 1 124 4 view .LVU101
 579 01b6 4D4C     		ldr	r4, .L33+4
 580 01b8 0122     		movs	r2, #1
 581 01ba 1021     		movs	r1, #16
 582 01bc 2046     		mov	r0, r4
 583 01be FFF7FEFF 		bl	HAL_GPIO_WritePin
 584              	.LVL44:
 125:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 585              		.loc 1 125 4 view .LVU102
 586 01c2 0122     		movs	r2, #1
 587 01c4 0221     		movs	r1, #2
 588 01c6 2846     		mov	r0, r5
 589 01c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 590              	.LVL45:
 126:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 591              		.loc 1 126 4 view .LVU103
 592 01cc 0122     		movs	r2, #1
 593 01ce 4FF48061 		mov	r1, #1024
 594 01d2 2846     		mov	r0, r5
 595 01d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 596              	.LVL46:
 127:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 597              		.loc 1 127 4 view .LVU104
 598 01d8 0122     		movs	r2, #1
 599 01da 0421     		movs	r1, #4
 600 01dc 2046     		mov	r0, r4
 601 01de FFF7FEFF 		bl	HAL_GPIO_WritePin
 602              	.LVL47:
 128:Core/Src/main.c **** 			break;
 603              		.loc 1 128 4 view .LVU105
 604 01e2 0122     		movs	r2, #1
 605 01e4 0221     		movs	r1, #2
 606 01e6 2046     		mov	r0, r4
 607 01e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL48:
 129:Core/Src/main.c **** 		case 7:
 609              		.loc 1 129 4 view .LVU106
ARM GAS  /tmp/ccqasgHV.s 			page 20


 610 01ec 70E0     		b	.L13
 611              	.L20:
 131:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 612              		.loc 1 131 4 view .LVU107
 613 01ee FFF7FEFF 		bl	reset
 614              	.LVL49:
 132:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 615              		.loc 1 132 4 view .LVU108
 616 01f2 3D4C     		ldr	r4, .L33
 617 01f4 0122     		movs	r2, #1
 618 01f6 4FF48071 		mov	r1, #256
 619 01fa 2046     		mov	r0, r4
 620 01fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 621              	.LVL50:
 133:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 622              		.loc 1 133 4 view .LVU109
 623 0200 0122     		movs	r2, #1
 624 0202 1021     		movs	r1, #16
 625 0204 3948     		ldr	r0, .L33+4
 626 0206 FFF7FEFF 		bl	HAL_GPIO_WritePin
 627              	.LVL51:
 134:Core/Src/main.c **** 			break;
 628              		.loc 1 134 4 view .LVU110
 629 020a 0122     		movs	r2, #1
 630 020c 4021     		movs	r1, #64
 631 020e 2046     		mov	r0, r4
 632 0210 FFF7FEFF 		bl	HAL_GPIO_WritePin
 633              	.LVL52:
 135:Core/Src/main.c **** 
 634              		.loc 1 135 4 view .LVU111
 635 0214 5CE0     		b	.L13
 636              	.L19:
 138:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 637              		.loc 1 138 4 view .LVU112
 638 0216 FFF7FEFF 		bl	reset
 639              	.LVL53:
 139:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 640              		.loc 1 139 4 view .LVU113
 641 021a 334C     		ldr	r4, .L33
 642 021c 0122     		movs	r2, #1
 643 021e 4FF48071 		mov	r1, #256
 644 0222 2046     		mov	r0, r4
 645 0224 FFF7FEFF 		bl	HAL_GPIO_WritePin
 646              	.LVL54:
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 647              		.loc 1 140 4 view .LVU114
 648 0228 304D     		ldr	r5, .L33+4
 649 022a 0122     		movs	r2, #1
 650 022c 1021     		movs	r1, #16
 651 022e 2846     		mov	r0, r5
 652 0230 FFF7FEFF 		bl	HAL_GPIO_WritePin
 653              	.LVL55:
 141:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 654              		.loc 1 141 4 view .LVU115
 655 0234 0122     		movs	r2, #1
 656 0236 0221     		movs	r1, #2
 657 0238 2046     		mov	r0, r4
ARM GAS  /tmp/ccqasgHV.s 			page 21


 658 023a FFF7FEFF 		bl	HAL_GPIO_WritePin
 659              	.LVL56:
 142:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 660              		.loc 1 142 4 view .LVU116
 661 023e 0122     		movs	r2, #1
 662 0240 4FF48061 		mov	r1, #1024
 663 0244 2046     		mov	r0, r4
 664 0246 FFF7FEFF 		bl	HAL_GPIO_WritePin
 665              	.LVL57:
 143:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 666              		.loc 1 143 4 view .LVU117
 667 024a 0122     		movs	r2, #1
 668 024c 0421     		movs	r1, #4
 669 024e 2846     		mov	r0, r5
 670 0250 FFF7FEFF 		bl	HAL_GPIO_WritePin
 671              	.LVL58:
 144:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 672              		.loc 1 144 4 view .LVU118
 673 0254 0122     		movs	r2, #1
 674 0256 0221     		movs	r1, #2
 675 0258 2846     		mov	r0, r5
 676 025a FFF7FEFF 		bl	HAL_GPIO_WritePin
 677              	.LVL59:
 145:Core/Src/main.c **** 			break;
 678              		.loc 1 145 4 view .LVU119
 679 025e 0122     		movs	r2, #1
 680 0260 4021     		movs	r1, #64
 681 0262 2046     		mov	r0, r4
 682 0264 FFF7FEFF 		bl	HAL_GPIO_WritePin
 683              	.LVL60:
 146:Core/Src/main.c **** 
 684              		.loc 1 146 4 view .LVU120
 685 0268 32E0     		b	.L13
 686              	.L18:
 149:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 687              		.loc 1 149 4 view .LVU121
 688 026a FFF7FEFF 		bl	reset
 689              	.LVL61:
 150:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 690              		.loc 1 150 4 view .LVU122
 691 026e 1E4C     		ldr	r4, .L33
 692 0270 0122     		movs	r2, #1
 693 0272 4FF48071 		mov	r1, #256
 694 0276 2046     		mov	r0, r4
 695 0278 FFF7FEFF 		bl	HAL_GPIO_WritePin
 696              	.LVL62:
 151:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 697              		.loc 1 151 4 view .LVU123
 698 027c 1B4D     		ldr	r5, .L33+4
 699 027e 0122     		movs	r2, #1
 700 0280 1021     		movs	r1, #16
 701 0282 2846     		mov	r0, r5
 702 0284 FFF7FEFF 		bl	HAL_GPIO_WritePin
 703              	.LVL63:
 152:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 704              		.loc 1 152 4 view .LVU124
 705 0288 0122     		movs	r2, #1
ARM GAS  /tmp/ccqasgHV.s 			page 22


 706 028a 0221     		movs	r1, #2
 707 028c 2046     		mov	r0, r4
 708 028e FFF7FEFF 		bl	HAL_GPIO_WritePin
 709              	.LVL64:
 153:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 710              		.loc 1 153 4 view .LVU125
 711 0292 0122     		movs	r2, #1
 712 0294 4FF48061 		mov	r1, #1024
 713 0298 2046     		mov	r0, r4
 714 029a FFF7FEFF 		bl	HAL_GPIO_WritePin
 715              	.LVL65:
 154:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 716              		.loc 1 154 4 view .LVU126
 717 029e 0122     		movs	r2, #1
 718 02a0 0421     		movs	r1, #4
 719 02a2 2846     		mov	r0, r5
 720 02a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 721              	.LVL66:
 155:Core/Src/main.c **** 			break;
 722              		.loc 1 155 4 view .LVU127
 723 02a8 0122     		movs	r2, #1
 724 02aa 4021     		movs	r1, #64
 725 02ac 2046     		mov	r0, r4
 726 02ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 727              	.LVL67:
 156:Core/Src/main.c **** 
 728              		.loc 1 156 4 view .LVU128
 729 02b2 0DE0     		b	.L13
 730              	.LVL68:
 731              	.L28:
 732              	.LBB8:
 160:Core/Src/main.c **** 				HAL_Delay(1000);
 733              		.loc 1 160 5 discriminator 3 view .LVU129
 734 02b4 2046     		mov	r0, r4
 735 02b6 FFF7A3FE 		bl	seg
 736              	.LVL69:
 161:Core/Src/main.c **** 			}
 737              		.loc 1 161 5 discriminator 3 view .LVU130
 738 02ba 4FF47A70 		mov	r0, #1000
 739 02be FFF7FEFF 		bl	HAL_Delay
 740              	.LVL70:
 159:Core/Src/main.c **** 				seg(i);
 741              		.loc 1 159 24 discriminator 3 view .LVU131
 742 02c2 0134     		adds	r4, r4, #1
 743              	.LVL71:
 744              	.L17:
 159:Core/Src/main.c **** 				seg(i);
 745              		.loc 1 159 18 discriminator 1 view .LVU132
 746 02c4 092C     		cmp	r4, #9
 747 02c6 F5DD     		ble	.L28
 748              	.LBE8:
 163:Core/Src/main.c **** 		case 'r' - '0':
 749              		.loc 1 163 4 view .LVU133
 750 02c8 FFF7FEFF 		bl	reset
 751              	.LVL72:
 752              	.L15:
 165:Core/Src/main.c **** 			break;
ARM GAS  /tmp/ccqasgHV.s 			page 23


 753              		.loc 1 165 4 view .LVU134
 754 02cc FFF7FEFF 		bl	reset
 755              	.LVL73:
 166:Core/Src/main.c **** 
 756              		.loc 1 166 4 view .LVU135
 757              	.L13:
 175:Core/Src/main.c **** 
 758              		.loc 1 175 1 is_stmt 0 view .LVU136
 759 02d0 38BD     		pop	{r3, r4, r5, pc}
 760              	.L29:
  79:Core/Src/main.c **** 		case 1:
 761              		.loc 1 79 2 view .LVU137
 762 02d2 0124     		movs	r4, #1
 763 02d4 F6E7     		b	.L17
 764              	.L27:
 169:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_SET);
 765              		.loc 1 169 4 is_stmt 1 view .LVU138
 766 02d6 FFF7FEFF 		bl	reset
 767              	.LVL74:
 170:Core/Src/main.c **** 
 768              		.loc 1 170 4 view .LVU139
 769 02da 0122     		movs	r2, #1
 770 02dc 2021     		movs	r1, #32
 771 02de 0348     		ldr	r0, .L33+4
 772 02e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 773              	.LVL75:
 175:Core/Src/main.c **** 
 774              		.loc 1 175 1 is_stmt 0 view .LVU140
 775 02e4 F4E7     		b	.L13
 776              	.L34:
 777 02e6 00BF     		.align	2
 778              	.L33:
 779 02e8 000C0140 		.word	1073810432
 780 02ec 00080140 		.word	1073809408
 781              		.cfi_endproc
 782              	.LFE69:
 784              		.section	.text.Error_Handler,"ax",%progbits
 785              		.align	1
 786              		.global	Error_Handler
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 791              	Error_Handler:
 792              	.LFB76:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** /* USER CODE END 4 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** /**
 435:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 436:Core/Src/main.c ****   * @retval None
 437:Core/Src/main.c ****   */
 438:Core/Src/main.c **** void Error_Handler(void)
 439:Core/Src/main.c **** {
 793              		.loc 1 439 1 is_stmt 1 view -0
 794              		.cfi_startproc
ARM GAS  /tmp/ccqasgHV.s 			page 24


 795              		@ Volatile: function does not return.
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 440:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 441:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 442:Core/Src/main.c ****   __disable_irq();
 799              		.loc 1 442 3 view .LVU142
 800              	.LBB9:
 801              	.LBI9:
 802              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccqasgHV.s 			page 25


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccqasgHV.s 			page 26


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 803              		.loc 2 140 27 view .LVU143
 804              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 805              		.loc 2 142 3 view .LVU144
 806              		.syntax unified
 807              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 808 0000 72B6     		cpsid i
 809              	@ 0 "" 2
 810              		.thumb
 811              		.syntax unified
 812              	.L36:
 813              	.LBE10:
 814              	.LBE9:
 443:Core/Src/main.c ****   while (1)
 815              		.loc 1 443 3 discriminator 1 view .LVU145
 444:Core/Src/main.c ****   {
 445:Core/Src/main.c ****   }
 816              		.loc 1 445 3 discriminator 1 view .LVU146
 443:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccqasgHV.s 			page 27


 817              		.loc 1 443 9 discriminator 1 view .LVU147
 818 0002 FEE7     		b	.L36
 819              		.cfi_endproc
 820              	.LFE76:
 822              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 823              		.align	1
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	MX_USART1_UART_Init:
 829              	.LFB73:
 351:Core/Src/main.c **** 
 830              		.loc 1 351 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834 0000 08B5     		push	{r3, lr}
 835              	.LCFI8:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 3, -8
 838              		.cfi_offset 14, -4
 360:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 839              		.loc 1 360 3 view .LVU149
 360:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 840              		.loc 1 360 19 is_stmt 0 view .LVU150
 841 0002 0A48     		ldr	r0, .L41
 842 0004 0A4B     		ldr	r3, .L41+4
 843 0006 0360     		str	r3, [r0]
 361:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 844              		.loc 1 361 3 is_stmt 1 view .LVU151
 361:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 845              		.loc 1 361 24 is_stmt 0 view .LVU152
 846 0008 4FF4E133 		mov	r3, #115200
 847 000c 4360     		str	r3, [r0, #4]
 362:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 848              		.loc 1 362 3 is_stmt 1 view .LVU153
 362:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 849              		.loc 1 362 26 is_stmt 0 view .LVU154
 850 000e 0023     		movs	r3, #0
 851 0010 8360     		str	r3, [r0, #8]
 363:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 852              		.loc 1 363 3 is_stmt 1 view .LVU155
 363:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 853              		.loc 1 363 24 is_stmt 0 view .LVU156
 854 0012 C360     		str	r3, [r0, #12]
 364:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 855              		.loc 1 364 3 is_stmt 1 view .LVU157
 364:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 856              		.loc 1 364 22 is_stmt 0 view .LVU158
 857 0014 0361     		str	r3, [r0, #16]
 365:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 858              		.loc 1 365 3 is_stmt 1 view .LVU159
 365:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 859              		.loc 1 365 20 is_stmt 0 view .LVU160
 860 0016 0C22     		movs	r2, #12
 861 0018 4261     		str	r2, [r0, #20]
 366:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccqasgHV.s 			page 28


 862              		.loc 1 366 3 is_stmt 1 view .LVU161
 366:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 863              		.loc 1 366 25 is_stmt 0 view .LVU162
 864 001a 8361     		str	r3, [r0, #24]
 367:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 865              		.loc 1 367 3 is_stmt 1 view .LVU163
 367:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 866              		.loc 1 367 28 is_stmt 0 view .LVU164
 867 001c C361     		str	r3, [r0, #28]
 368:Core/Src/main.c ****   {
 868              		.loc 1 368 3 is_stmt 1 view .LVU165
 368:Core/Src/main.c ****   {
 869              		.loc 1 368 7 is_stmt 0 view .LVU166
 870 001e FFF7FEFF 		bl	HAL_UART_Init
 871              	.LVL76:
 368:Core/Src/main.c ****   {
 872              		.loc 1 368 6 view .LVU167
 873 0022 00B9     		cbnz	r0, .L40
 376:Core/Src/main.c **** 
 874              		.loc 1 376 1 view .LVU168
 875 0024 08BD     		pop	{r3, pc}
 876              	.L40:
 370:Core/Src/main.c ****   }
 877              		.loc 1 370 5 is_stmt 1 view .LVU169
 878 0026 FFF7FEFF 		bl	Error_Handler
 879              	.LVL77:
 880              	.L42:
 881 002a 00BF     		.align	2
 882              	.L41:
 883 002c 00000000 		.word	huart1
 884 0030 00380140 		.word	1073821696
 885              		.cfi_endproc
 886              	.LFE73:
 888              		.section	.text.MX_TIM1_Init,"ax",%progbits
 889              		.align	1
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	MX_TIM1_Init:
 895              	.LFB72:
 276:Core/Src/main.c **** 
 896              		.loc 1 276 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 88
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900 0000 10B5     		push	{r4, lr}
 901              	.LCFI9:
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 4, -8
 904              		.cfi_offset 14, -4
 905 0002 96B0     		sub	sp, sp, #88
 906              	.LCFI10:
 907              		.cfi_def_cfa_offset 96
 282:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 908              		.loc 1 282 3 view .LVU171
 282:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 909              		.loc 1 282 26 is_stmt 0 view .LVU172
ARM GAS  /tmp/ccqasgHV.s 			page 29


 910 0004 0024     		movs	r4, #0
 911 0006 1294     		str	r4, [sp, #72]
 912 0008 1394     		str	r4, [sp, #76]
 913 000a 1494     		str	r4, [sp, #80]
 914 000c 1594     		str	r4, [sp, #84]
 283:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 915              		.loc 1 283 3 is_stmt 1 view .LVU173
 283:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 916              		.loc 1 283 27 is_stmt 0 view .LVU174
 917 000e 1094     		str	r4, [sp, #64]
 918 0010 1194     		str	r4, [sp, #68]
 284:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 919              		.loc 1 284 3 is_stmt 1 view .LVU175
 284:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 920              		.loc 1 284 22 is_stmt 0 view .LVU176
 921 0012 0994     		str	r4, [sp, #36]
 922 0014 0A94     		str	r4, [sp, #40]
 923 0016 0B94     		str	r4, [sp, #44]
 924 0018 0C94     		str	r4, [sp, #48]
 925 001a 0D94     		str	r4, [sp, #52]
 926 001c 0E94     		str	r4, [sp, #56]
 927 001e 0F94     		str	r4, [sp, #60]
 285:Core/Src/main.c **** 
 928              		.loc 1 285 3 is_stmt 1 view .LVU177
 285:Core/Src/main.c **** 
 929              		.loc 1 285 34 is_stmt 0 view .LVU178
 930 0020 2022     		movs	r2, #32
 931 0022 2146     		mov	r1, r4
 932 0024 01A8     		add	r0, sp, #4
 933 0026 FFF7FEFF 		bl	memset
 934              	.LVL78:
 290:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 935              		.loc 1 290 3 is_stmt 1 view .LVU179
 290:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 936              		.loc 1 290 18 is_stmt 0 view .LVU180
 937 002a 2948     		ldr	r0, .L57
 938 002c 294B     		ldr	r3, .L57+4
 939 002e 0360     		str	r3, [r0]
 291:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 940              		.loc 1 291 3 is_stmt 1 view .LVU181
 291:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 941              		.loc 1 291 24 is_stmt 0 view .LVU182
 942 0030 4460     		str	r4, [r0, #4]
 292:Core/Src/main.c ****   htim1.Init.Period = 1023;
 943              		.loc 1 292 3 is_stmt 1 view .LVU183
 292:Core/Src/main.c ****   htim1.Init.Period = 1023;
 944              		.loc 1 292 26 is_stmt 0 view .LVU184
 945 0032 8460     		str	r4, [r0, #8]
 293:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 946              		.loc 1 293 3 is_stmt 1 view .LVU185
 293:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 947              		.loc 1 293 21 is_stmt 0 view .LVU186
 948 0034 40F2FF33 		movw	r3, #1023
 949 0038 C360     		str	r3, [r0, #12]
 294:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 950              		.loc 1 294 3 is_stmt 1 view .LVU187
 294:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
ARM GAS  /tmp/ccqasgHV.s 			page 30


 951              		.loc 1 294 28 is_stmt 0 view .LVU188
 952 003a 0461     		str	r4, [r0, #16]
 295:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 953              		.loc 1 295 3 is_stmt 1 view .LVU189
 295:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 954              		.loc 1 295 32 is_stmt 0 view .LVU190
 955 003c 4461     		str	r4, [r0, #20]
 296:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 956              		.loc 1 296 3 is_stmt 1 view .LVU191
 296:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 957              		.loc 1 296 32 is_stmt 0 view .LVU192
 958 003e 8461     		str	r4, [r0, #24]
 297:Core/Src/main.c ****   {
 959              		.loc 1 297 3 is_stmt 1 view .LVU193
 297:Core/Src/main.c ****   {
 960              		.loc 1 297 7 is_stmt 0 view .LVU194
 961 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 962              	.LVL79:
 297:Core/Src/main.c ****   {
 963              		.loc 1 297 6 view .LVU195
 964 0044 0028     		cmp	r0, #0
 965 0046 37D1     		bne	.L51
 301:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 966              		.loc 1 301 3 is_stmt 1 view .LVU196
 301:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 967              		.loc 1 301 34 is_stmt 0 view .LVU197
 968 0048 4FF48053 		mov	r3, #4096
 969 004c 1293     		str	r3, [sp, #72]
 302:Core/Src/main.c ****   {
 970              		.loc 1 302 3 is_stmt 1 view .LVU198
 302:Core/Src/main.c ****   {
 971              		.loc 1 302 7 is_stmt 0 view .LVU199
 972 004e 12A9     		add	r1, sp, #72
 973 0050 1F48     		ldr	r0, .L57
 974 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 975              	.LVL80:
 302:Core/Src/main.c ****   {
 976              		.loc 1 302 6 view .LVU200
 977 0056 0028     		cmp	r0, #0
 978 0058 30D1     		bne	.L52
 306:Core/Src/main.c ****   {
 979              		.loc 1 306 3 is_stmt 1 view .LVU201
 306:Core/Src/main.c ****   {
 980              		.loc 1 306 7 is_stmt 0 view .LVU202
 981 005a 1D48     		ldr	r0, .L57
 982 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 983              	.LVL81:
 306:Core/Src/main.c ****   {
 984              		.loc 1 306 6 view .LVU203
 985 0060 0028     		cmp	r0, #0
 986 0062 2DD1     		bne	.L53
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 987              		.loc 1 310 3 is_stmt 1 view .LVU204
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 988              		.loc 1 310 37 is_stmt 0 view .LVU205
 989 0064 0023     		movs	r3, #0
 990 0066 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccqasgHV.s 			page 31


 311:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 991              		.loc 1 311 3 is_stmt 1 view .LVU206
 311:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 992              		.loc 1 311 33 is_stmt 0 view .LVU207
 993 0068 1193     		str	r3, [sp, #68]
 312:Core/Src/main.c ****   {
 994              		.loc 1 312 3 is_stmt 1 view .LVU208
 312:Core/Src/main.c ****   {
 995              		.loc 1 312 7 is_stmt 0 view .LVU209
 996 006a 10A9     		add	r1, sp, #64
 997 006c 1848     		ldr	r0, .L57
 998 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 999              	.LVL82:
 312:Core/Src/main.c ****   {
 1000              		.loc 1 312 6 view .LVU210
 1001 0072 38BB     		cbnz	r0, .L54
 316:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1002              		.loc 1 316 3 is_stmt 1 view .LVU211
 316:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1003              		.loc 1 316 20 is_stmt 0 view .LVU212
 1004 0074 6023     		movs	r3, #96
 1005 0076 0993     		str	r3, [sp, #36]
 317:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1006              		.loc 1 317 3 is_stmt 1 view .LVU213
 317:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1007              		.loc 1 317 19 is_stmt 0 view .LVU214
 1008 0078 0022     		movs	r2, #0
 1009 007a 0A92     		str	r2, [sp, #40]
 318:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1010              		.loc 1 318 3 is_stmt 1 view .LVU215
 318:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1011              		.loc 1 318 24 is_stmt 0 view .LVU216
 1012 007c 0B92     		str	r2, [sp, #44]
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1013              		.loc 1 319 3 is_stmt 1 view .LVU217
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1014              		.loc 1 319 25 is_stmt 0 view .LVU218
 1015 007e 0C92     		str	r2, [sp, #48]
 320:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1016              		.loc 1 320 3 is_stmt 1 view .LVU219
 320:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1017              		.loc 1 320 24 is_stmt 0 view .LVU220
 1018 0080 0D92     		str	r2, [sp, #52]
 321:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1019              		.loc 1 321 3 is_stmt 1 view .LVU221
 321:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1020              		.loc 1 321 25 is_stmt 0 view .LVU222
 1021 0082 0E92     		str	r2, [sp, #56]
 322:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1022              		.loc 1 322 3 is_stmt 1 view .LVU223
 322:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1023              		.loc 1 322 26 is_stmt 0 view .LVU224
 1024 0084 0F92     		str	r2, [sp, #60]
 323:Core/Src/main.c ****   {
 1025              		.loc 1 323 3 is_stmt 1 view .LVU225
 323:Core/Src/main.c ****   {
 1026              		.loc 1 323 7 is_stmt 0 view .LVU226
ARM GAS  /tmp/ccqasgHV.s 			page 32


 1027 0086 09A9     		add	r1, sp, #36
 1028 0088 1148     		ldr	r0, .L57
 1029 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1030              	.LVL83:
 323:Core/Src/main.c ****   {
 1031              		.loc 1 323 6 view .LVU227
 1032 008e D8B9     		cbnz	r0, .L55
 327:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1033              		.loc 1 327 3 is_stmt 1 view .LVU228
 327:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1034              		.loc 1 327 40 is_stmt 0 view .LVU229
 1035 0090 0023     		movs	r3, #0
 1036 0092 0193     		str	r3, [sp, #4]
 328:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1037              		.loc 1 328 3 is_stmt 1 view .LVU230
 328:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1038              		.loc 1 328 41 is_stmt 0 view .LVU231
 1039 0094 0293     		str	r3, [sp, #8]
 329:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1040              		.loc 1 329 3 is_stmt 1 view .LVU232
 329:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1041              		.loc 1 329 34 is_stmt 0 view .LVU233
 1042 0096 0393     		str	r3, [sp, #12]
 330:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1043              		.loc 1 330 3 is_stmt 1 view .LVU234
 330:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1044              		.loc 1 330 33 is_stmt 0 view .LVU235
 1045 0098 0493     		str	r3, [sp, #16]
 331:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1046              		.loc 1 331 3 is_stmt 1 view .LVU236
 331:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1047              		.loc 1 331 35 is_stmt 0 view .LVU237
 1048 009a 0593     		str	r3, [sp, #20]
 332:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1049              		.loc 1 332 3 is_stmt 1 view .LVU238
 332:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1050              		.loc 1 332 38 is_stmt 0 view .LVU239
 1051 009c 4FF40052 		mov	r2, #8192
 1052 00a0 0692     		str	r2, [sp, #24]
 333:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1053              		.loc 1 333 3 is_stmt 1 view .LVU240
 333:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1054              		.loc 1 333 40 is_stmt 0 view .LVU241
 1055 00a2 0893     		str	r3, [sp, #32]
 334:Core/Src/main.c ****   {
 1056              		.loc 1 334 3 is_stmt 1 view .LVU242
 334:Core/Src/main.c ****   {
 1057              		.loc 1 334 7 is_stmt 0 view .LVU243
 1058 00a4 01A9     		add	r1, sp, #4
 1059 00a6 0A48     		ldr	r0, .L57
 1060 00a8 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1061              	.LVL84:
 334:Core/Src/main.c ****   {
 1062              		.loc 1 334 6 view .LVU244
 1063 00ac 70B9     		cbnz	r0, .L56
 341:Core/Src/main.c **** 
 1064              		.loc 1 341 3 is_stmt 1 view .LVU245
ARM GAS  /tmp/ccqasgHV.s 			page 33


 1065 00ae 0848     		ldr	r0, .L57
 1066 00b0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1067              	.LVL85:
 343:Core/Src/main.c **** 
 1068              		.loc 1 343 1 is_stmt 0 view .LVU246
 1069 00b4 16B0     		add	sp, sp, #88
 1070              	.LCFI11:
 1071              		.cfi_remember_state
 1072              		.cfi_def_cfa_offset 8
 1073              		@ sp needed
 1074 00b6 10BD     		pop	{r4, pc}
 1075              	.L51:
 1076              	.LCFI12:
 1077              		.cfi_restore_state
 299:Core/Src/main.c ****   }
 1078              		.loc 1 299 5 is_stmt 1 view .LVU247
 1079 00b8 FFF7FEFF 		bl	Error_Handler
 1080              	.LVL86:
 1081              	.L52:
 304:Core/Src/main.c ****   }
 1082              		.loc 1 304 5 view .LVU248
 1083 00bc FFF7FEFF 		bl	Error_Handler
 1084              	.LVL87:
 1085              	.L53:
 308:Core/Src/main.c ****   }
 1086              		.loc 1 308 5 view .LVU249
 1087 00c0 FFF7FEFF 		bl	Error_Handler
 1088              	.LVL88:
 1089              	.L54:
 314:Core/Src/main.c ****   }
 1090              		.loc 1 314 5 view .LVU250
 1091 00c4 FFF7FEFF 		bl	Error_Handler
 1092              	.LVL89:
 1093              	.L55:
 325:Core/Src/main.c ****   }
 1094              		.loc 1 325 5 view .LVU251
 1095 00c8 FFF7FEFF 		bl	Error_Handler
 1096              	.LVL90:
 1097              	.L56:
 336:Core/Src/main.c ****   }
 1098              		.loc 1 336 5 view .LVU252
 1099 00cc FFF7FEFF 		bl	Error_Handler
 1100              	.LVL91:
 1101              	.L58:
 1102              		.align	2
 1103              	.L57:
 1104 00d0 00000000 		.word	htim1
 1105 00d4 002C0140 		.word	1073818624
 1106              		.cfi_endproc
 1107              	.LFE72:
 1109              		.section	.text.SystemClock_Config,"ax",%progbits
 1110              		.align	1
 1111              		.global	SystemClock_Config
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1116              	SystemClock_Config:
ARM GAS  /tmp/ccqasgHV.s 			page 34


 1117              	.LFB71:
 236:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1118              		.loc 1 236 1 view -0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 64
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122 0000 00B5     		push	{lr}
 1123              	.LCFI13:
 1124              		.cfi_def_cfa_offset 4
 1125              		.cfi_offset 14, -4
 1126 0002 91B0     		sub	sp, sp, #68
 1127              	.LCFI14:
 1128              		.cfi_def_cfa_offset 72
 237:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1129              		.loc 1 237 3 view .LVU254
 237:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1130              		.loc 1 237 22 is_stmt 0 view .LVU255
 1131 0004 2822     		movs	r2, #40
 1132 0006 0021     		movs	r1, #0
 1133 0008 06A8     		add	r0, sp, #24
 1134 000a FFF7FEFF 		bl	memset
 1135              	.LVL92:
 238:Core/Src/main.c **** 
 1136              		.loc 1 238 3 is_stmt 1 view .LVU256
 238:Core/Src/main.c **** 
 1137              		.loc 1 238 22 is_stmt 0 view .LVU257
 1138 000e 0023     		movs	r3, #0
 1139 0010 0193     		str	r3, [sp, #4]
 1140 0012 0293     		str	r3, [sp, #8]
 1141 0014 0393     		str	r3, [sp, #12]
 1142 0016 0493     		str	r3, [sp, #16]
 1143 0018 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1144              		.loc 1 243 3 is_stmt 1 view .LVU258
 243:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1145              		.loc 1 243 36 is_stmt 0 view .LVU259
 1146 001a 0122     		movs	r2, #1
 1147 001c 0692     		str	r2, [sp, #24]
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1148              		.loc 1 244 3 is_stmt 1 view .LVU260
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1149              		.loc 1 244 30 is_stmt 0 view .LVU261
 1150 001e 4FF48033 		mov	r3, #65536
 1151 0022 0793     		str	r3, [sp, #28]
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1152              		.loc 1 245 3 is_stmt 1 view .LVU262
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1153              		.loc 1 246 3 view .LVU263
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1154              		.loc 1 246 30 is_stmt 0 view .LVU264
 1155 0024 0A92     		str	r2, [sp, #40]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1156              		.loc 1 247 3 is_stmt 1 view .LVU265
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1157              		.loc 1 247 34 is_stmt 0 view .LVU266
 1158 0026 0222     		movs	r2, #2
 1159 0028 0D92     		str	r2, [sp, #52]
ARM GAS  /tmp/ccqasgHV.s 			page 35


 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1160              		.loc 1 248 3 is_stmt 1 view .LVU267
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1161              		.loc 1 248 35 is_stmt 0 view .LVU268
 1162 002a 0E93     		str	r3, [sp, #56]
 249:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1163              		.loc 1 249 3 is_stmt 1 view .LVU269
 249:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1164              		.loc 1 249 32 is_stmt 0 view .LVU270
 1165 002c 4FF4E013 		mov	r3, #1835008
 1166 0030 0F93     		str	r3, [sp, #60]
 250:Core/Src/main.c ****   {
 1167              		.loc 1 250 3 is_stmt 1 view .LVU271
 250:Core/Src/main.c ****   {
 1168              		.loc 1 250 7 is_stmt 0 view .LVU272
 1169 0032 06A8     		add	r0, sp, #24
 1170 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1171              	.LVL93:
 250:Core/Src/main.c ****   {
 1172              		.loc 1 250 6 view .LVU273
 1173 0038 80B9     		cbnz	r0, .L63
 257:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1174              		.loc 1 257 3 is_stmt 1 view .LVU274
 257:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1175              		.loc 1 257 31 is_stmt 0 view .LVU275
 1176 003a 0F23     		movs	r3, #15
 1177 003c 0193     		str	r3, [sp, #4]
 259:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1178              		.loc 1 259 3 is_stmt 1 view .LVU276
 259:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1179              		.loc 1 259 34 is_stmt 0 view .LVU277
 1180 003e 0221     		movs	r1, #2
 1181 0040 0291     		str	r1, [sp, #8]
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1182              		.loc 1 260 3 is_stmt 1 view .LVU278
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1183              		.loc 1 260 35 is_stmt 0 view .LVU279
 1184 0042 0023     		movs	r3, #0
 1185 0044 0393     		str	r3, [sp, #12]
 261:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1186              		.loc 1 261 3 is_stmt 1 view .LVU280
 261:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1187              		.loc 1 261 36 is_stmt 0 view .LVU281
 1188 0046 4FF48062 		mov	r2, #1024
 1189 004a 0492     		str	r2, [sp, #16]
 262:Core/Src/main.c **** 
 1190              		.loc 1 262 3 is_stmt 1 view .LVU282
 262:Core/Src/main.c **** 
 1191              		.loc 1 262 36 is_stmt 0 view .LVU283
 1192 004c 0593     		str	r3, [sp, #20]
 264:Core/Src/main.c ****   {
 1193              		.loc 1 264 3 is_stmt 1 view .LVU284
 264:Core/Src/main.c ****   {
 1194              		.loc 1 264 7 is_stmt 0 view .LVU285
 1195 004e 01A8     		add	r0, sp, #4
 1196 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1197              	.LVL94:
ARM GAS  /tmp/ccqasgHV.s 			page 36


 264:Core/Src/main.c ****   {
 1198              		.loc 1 264 6 view .LVU286
 1199 0054 20B9     		cbnz	r0, .L64
 268:Core/Src/main.c **** 
 1200              		.loc 1 268 1 view .LVU287
 1201 0056 11B0     		add	sp, sp, #68
 1202              	.LCFI15:
 1203              		.cfi_remember_state
 1204              		.cfi_def_cfa_offset 4
 1205              		@ sp needed
 1206 0058 5DF804FB 		ldr	pc, [sp], #4
 1207              	.L63:
 1208              	.LCFI16:
 1209              		.cfi_restore_state
 252:Core/Src/main.c ****   }
 1210              		.loc 1 252 5 is_stmt 1 view .LVU288
 1211 005c FFF7FEFF 		bl	Error_Handler
 1212              	.LVL95:
 1213              	.L64:
 266:Core/Src/main.c ****   }
 1214              		.loc 1 266 5 view .LVU289
 1215 0060 FFF7FEFF 		bl	Error_Handler
 1216              	.LVL96:
 1217              		.cfi_endproc
 1218              	.LFE71:
 1220              		.section	.text.main,"ax",%progbits
 1221              		.align	1
 1222              		.global	main
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1227              	main:
 1228              	.LFB70:
 184:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1229              		.loc 1 184 1 view -0
 1230              		.cfi_startproc
 1231              		@ Volatile: function does not return.
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
 1234 0000 08B5     		push	{r3, lr}
 1235              	.LCFI17:
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 3, -8
 1238              		.cfi_offset 14, -4
 192:Core/Src/main.c **** 
 1239              		.loc 1 192 3 view .LVU291
 1240 0002 FFF7FEFF 		bl	HAL_Init
 1241              	.LVL97:
 199:Core/Src/main.c **** 
 1242              		.loc 1 199 3 view .LVU292
 1243 0006 FFF7FEFF 		bl	SystemClock_Config
 1244              	.LVL98:
 206:Core/Src/main.c ****   MX_DMA_Init();
 1245              		.loc 1 206 3 view .LVU293
 1246 000a FFF7FEFF 		bl	MX_GPIO_Init
 1247              	.LVL99:
 207:Core/Src/main.c ****   MX_USART1_UART_Init();
ARM GAS  /tmp/ccqasgHV.s 			page 37


 1248              		.loc 1 207 3 view .LVU294
 1249 000e FFF7FEFF 		bl	MX_DMA_Init
 1250              	.LVL100:
 208:Core/Src/main.c ****   MX_TIM1_Init();
 1251              		.loc 1 208 3 view .LVU295
 1252 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1253              	.LVL101:
 209:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1254              		.loc 1 209 3 view .LVU296
 1255 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1256              	.LVL102:
 211:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 1257              		.loc 1 211 4 view .LVU297
 211:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 1258              		.loc 1 211 15 is_stmt 0 view .LVU298
 1259 001a 094B     		ldr	r3, .L68
 1260 001c 6422     		movs	r2, #100
 1261 001e 5A63     		str	r2, [r3, #52]
 212:Core/Src/main.c **** 
 1262              		.loc 1 212 4 is_stmt 1 view .LVU299
 1263 0020 0021     		movs	r1, #0
 1264 0022 0848     		ldr	r0, .L68+4
 1265 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1266              	.LVL103:
 1267              	.L66:
 218:Core/Src/main.c ****   {
 1268              		.loc 1 218 3 discriminator 1 view .LVU300
 221:Core/Src/main.c **** 	
 1269              		.loc 1 221 2 discriminator 1 view .LVU301
 1270 0028 074C     		ldr	r4, .L68+8
 1271 002a 6423     		movs	r3, #100
 1272 002c 0122     		movs	r2, #1
 1273 002e 2146     		mov	r1, r4
 1274 0030 0648     		ldr	r0, .L68+12
 1275 0032 FFF7FEFF 		bl	HAL_UART_Receive
 1276              	.LVL104:
 223:Core/Src/main.c **** 	/* USER CODE BEGIN 3 */
 1277              		.loc 1 223 2 discriminator 1 view .LVU302
 1278 0036 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1279 0038 3038     		subs	r0, r0, #48
 1280 003a FFF7FEFF 		bl	seg
 1281              	.LVL105:
 218:Core/Src/main.c ****   {
 1282              		.loc 1 218 9 discriminator 1 view .LVU303
 1283 003e F3E7     		b	.L66
 1284              	.L69:
 1285              		.align	2
 1286              	.L68:
 1287 0040 002C0140 		.word	1073818624
 1288 0044 00000000 		.word	htim1
 1289 0048 00000000 		.word	receive
 1290 004c 00000000 		.word	huart1
 1291              		.cfi_endproc
 1292              	.LFE70:
 1294              		.global	huart1
 1295              		.section	.bss.huart1,"aw",%nobits
 1296              		.align	2
ARM GAS  /tmp/ccqasgHV.s 			page 38


 1299              	huart1:
 1300 0000 00000000 		.space	68
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1301              		.global	hdma_tim1_ch1
 1302              		.section	.bss.hdma_tim1_ch1,"aw",%nobits
 1303              		.align	2
 1306              	hdma_tim1_ch1:
 1307 0000 00000000 		.space	68
 1307      00000000 
 1307      00000000 
 1307      00000000 
 1307      00000000 
 1308              		.global	htim1
 1309              		.section	.bss.htim1,"aw",%nobits
 1310              		.align	2
 1313              	htim1:
 1314 0000 00000000 		.space	72
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1315              		.global	receive
 1316              		.section	.bss.receive,"aw",%nobits
 1319              	receive:
 1320 0000 00       		.space	1
 1321              		.text
 1322              	.Letext0:
 1323              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1324              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1325              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1326              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1327              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1328              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1329              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1330              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1331              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1332              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1333              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1334              		.file 14 "Core/Inc/main.h"
 1335              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1336              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1337              		.file 17 "<built-in>"
ARM GAS  /tmp/ccqasgHV.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccqasgHV.s:19     .text.reset:0000000000000000 $t
     /tmp/ccqasgHV.s:24     .text.reset:0000000000000000 reset
     /tmp/ccqasgHV.s:97     .text.reset:0000000000000064 $d
     /tmp/ccqasgHV.s:1319   .bss.receive:0000000000000000 receive
     /tmp/ccqasgHV.s:104    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccqasgHV.s:109    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccqasgHV.s:241    .text.MX_GPIO_Init:0000000000000094 $d
     /tmp/ccqasgHV.s:248    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccqasgHV.s:253    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccqasgHV.s:301    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccqasgHV.s:306    .text.seg:0000000000000000 $t
     /tmp/ccqasgHV.s:311    .text.seg:0000000000000000 seg
     /tmp/ccqasgHV.s:334    .text.seg:000000000000000e $d
     /tmp/ccqasgHV.s:403    .text.seg:0000000000000098 $t
     /tmp/ccqasgHV.s:779    .text.seg:00000000000002e8 $d
     /tmp/ccqasgHV.s:785    .text.Error_Handler:0000000000000000 $t
     /tmp/ccqasgHV.s:791    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccqasgHV.s:823    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccqasgHV.s:828    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccqasgHV.s:883    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccqasgHV.s:1299   .bss.huart1:0000000000000000 huart1
     /tmp/ccqasgHV.s:889    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccqasgHV.s:894    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccqasgHV.s:1104   .text.MX_TIM1_Init:00000000000000d0 $d
     /tmp/ccqasgHV.s:1313   .bss.htim1:0000000000000000 htim1
     /tmp/ccqasgHV.s:1110   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccqasgHV.s:1116   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccqasgHV.s:1221   .text.main:0000000000000000 $t
     /tmp/ccqasgHV.s:1227   .text.main:0000000000000000 main
     /tmp/ccqasgHV.s:1287   .text.main:0000000000000040 $d
     /tmp/ccqasgHV.s:1296   .bss.huart1:0000000000000000 $d
     /tmp/ccqasgHV.s:1306   .bss.hdma_tim1_ch1:0000000000000000 hdma_tim1_ch1
     /tmp/ccqasgHV.s:1303   .bss.hdma_tim1_ch1:0000000000000000 $d
     /tmp/ccqasgHV.s:1310   .bss.htim1:0000000000000000 $d
     /tmp/ccqasgHV.s:1320   .bss.receive:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
ARM GAS  /tmp/ccqasgHV.s 			page 40


HAL_UART_Receive
