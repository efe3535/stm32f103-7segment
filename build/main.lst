ARM GAS  /tmp/ccRpxq1X.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.reset,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	reset:
  25              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stdio.h"
  22:Core/Src/main.c **** #include "stdlib.h"
  23:Core/Src/main.c **** uint8_t receive;
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccRpxq1X.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim1_ch1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_DMA_Init(void);
  58:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  59:Core/Src/main.c **** static void MX_TIM1_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** static void reset() {
  26              		.loc 1 66 21 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  67:Core/Src/main.c **** 	receive = '\0'; // do not repeat.
  37              		.loc 1 67 2 view .LVU1
  38              		.loc 1 67 10 is_stmt 0 view .LVU2
  39 0002 0024     		movs	r4, #0
  40 0004 184B     		ldr	r3, .L3
  41 0006 1C70     		strb	r4, [r3]
  68:Core/Src/main.c **** 	__HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
  42              		.loc 1 68 2 is_stmt 1 view .LVU3
  43 0008 184B     		ldr	r3, .L3+4
  44 000a 1B68     		ldr	r3, [r3]
  45 000c 5C63     		str	r4, [r3, #52]
  69:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_RESET);
  46              		.loc 1 69 2 view .LVU4
ARM GAS  /tmp/ccRpxq1X.s 			page 3


  47 000e 184E     		ldr	r6, .L3+8
  48 0010 2246     		mov	r2, r4
  49 0012 4FF48071 		mov	r1, #256
  50 0016 3046     		mov	r0, r6
  51 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
  52              	.LVL0:
  70:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_RESET);
  53              		.loc 1 70 2 view .LVU5
  54 001c 2246     		mov	r2, r4
  55 001e 4021     		movs	r1, #64
  56 0020 3046     		mov	r0, r6
  57 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
  58              	.LVL1:
  71:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_RESET);
  59              		.loc 1 71 2 view .LVU6
  60 0026 134D     		ldr	r5, .L3+12
  61 0028 2246     		mov	r2, r4
  62 002a 1021     		movs	r1, #16
  63 002c 2846     		mov	r0, r5
  64 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  65              	.LVL2:
  72:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_RESET);
  66              		.loc 1 72 2 view .LVU7
  67 0032 2246     		mov	r2, r4
  68 0034 0421     		movs	r1, #4
  69 0036 2846     		mov	r0, r5
  70 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL3:
  73:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_RESET);
  72              		.loc 1 73 2 view .LVU8
  73 003c 2246     		mov	r2, r4
  74 003e 0221     		movs	r1, #2
  75 0040 2846     		mov	r0, r5
  76 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  77              	.LVL4:
  74:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_RESET);
  78              		.loc 1 74 2 view .LVU9
  79 0046 2246     		mov	r2, r4
  80 0048 4FF48061 		mov	r1, #1024
  81 004c 3046     		mov	r0, r6
  82 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL5:
  75:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_RESET);
  84              		.loc 1 75 2 view .LVU10
  85 0052 2246     		mov	r2, r4
  86 0054 0221     		movs	r1, #2
  87 0056 3046     		mov	r0, r6
  88 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL6:
  76:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_RESET);
  90              		.loc 1 76 2 view .LVU11
  91 005c 2246     		mov	r2, r4
  92 005e 2021     		movs	r1, #32
  93 0060 2846     		mov	r0, r5
  94 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  95              	.LVL7:
  77:Core/Src/main.c **** }
ARM GAS  /tmp/ccRpxq1X.s 			page 4


  96              		.loc 1 77 1 is_stmt 0 view .LVU12
  97 0066 70BD     		pop	{r4, r5, r6, pc}
  98              	.L4:
  99              		.align	2
 100              	.L3:
 101 0068 00000000 		.word	receive
 102 006c 00000000 		.word	htim1
 103 0070 000C0140 		.word	1073810432
 104 0074 00080140 		.word	1073809408
 105              		.cfi_endproc
 106              	.LFE68:
 108              		.section	.text.MX_GPIO_Init,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	MX_GPIO_Init:
 115              	.LFB75:
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** static void seg(int pin) {
  80:Core/Src/main.c **** 	switch(pin) {
  81:Core/Src/main.c **** 		case 0:
  82:Core/Src/main.c **** 			reset();
  83:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
  84:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
  85:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
  86:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
  87:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
  88:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
  89:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  90:Core/Src/main.c **** 			break;
  91:Core/Src/main.c **** 		case 1:
  92:Core/Src/main.c **** 			reset();
  93:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
  94:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  95:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
  96:Core/Src/main.c **** 			break;
  97:Core/Src/main.c **** 		case 2:
  98:Core/Src/main.c **** 			reset();
  99:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 101:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 102:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 103:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 104:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 			break;
 107:Core/Src/main.c **** 		case 3:
 108:Core/Src/main.c **** 			reset();		
 109:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 110:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 111:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 112:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 113:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 114:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 115:Core/Src/main.c **** 			break;
 116:Core/Src/main.c **** 
ARM GAS  /tmp/ccRpxq1X.s 			page 5


 117:Core/Src/main.c **** 		case 4:
 118:Core/Src/main.c **** 			reset();
 119:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 120:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 121:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 122:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 123:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 124:Core/Src/main.c **** 			break;
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 		case 5:
 127:Core/Src/main.c **** 			reset();
 128:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 129:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 130:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 131:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 132:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 133:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 			break;
 136:Core/Src/main.c **** 		case 6:
 137:Core/Src/main.c **** 			reset();
 138:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 139:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 141:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 142:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 143:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 144:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 145:Core/Src/main.c **** 			break;
 146:Core/Src/main.c **** 		case 7:
 147:Core/Src/main.c **** 			reset();
 148:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,pin*100);
 149:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 150:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 151:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 152:Core/Src/main.c **** 			break;
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 		case 8:
 155:Core/Src/main.c **** 			reset();
 156:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,pin*100);
 157:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 158:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 159:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 160:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 161:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 162:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 163:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 164:Core/Src/main.c **** 			break;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 		case 9:
 167:Core/Src/main.c **** 			reset();	
 168:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,pin*100);
 169:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 170:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 171:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 172:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 173:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccRpxq1X.s 			page 6


 174:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 175:Core/Src/main.c **** 			break;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 		case 'l' - '0':
 178:Core/Src/main.c **** 			for(int i=0; i<10; i++) {
 179:Core/Src/main.c **** 				seg(i);
 180:Core/Src/main.c **** 				HAL_Delay(1000);
 181:Core/Src/main.c **** 			}
 182:Core/Src/main.c **** 			reset();
 183:Core/Src/main.c **** 		case 'r' - '0':
 184:Core/Src/main.c **** 			reset();
 185:Core/Src/main.c **** 			break;
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 		case '.' - '0':
 188:Core/Src/main.c **** 			reset();
 189:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_SET);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 		default:
 192:Core/Src/main.c **** 			break;
 193:Core/Src/main.c **** 	}
 194:Core/Src/main.c **** }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /* USER CODE END 0 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief  The application entry poinstm32 uart input poll to integert.
 200:Core/Src/main.c ****   * @retval int
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** int main(void)
 203:Core/Src/main.c **** {
 204:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 211:Core/Src/main.c ****   HAL_Init();
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END Init */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* Configure the system clock */
 218:Core/Src/main.c ****   SystemClock_Config();
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END SysInit */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* Initialize all configured peripherals */
 225:Core/Src/main.c ****   MX_GPIO_Init();
 226:Core/Src/main.c ****   MX_DMA_Init();
 227:Core/Src/main.c ****   MX_USART1_UART_Init();
 228:Core/Src/main.c ****   MX_TIM1_Init();
 229:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 230:Core/Src/main.c ****   	//TIM1->CCR1 = 100;
ARM GAS  /tmp/ccRpxq1X.s 			page 7


 231:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END 2 */
 234:Core/Src/main.c **** //	seg(2);
 235:Core/Src/main.c ****   /* Infinite loop */
 236:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 237:Core/Src/main.c ****   while (1)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     /* USER CODE END WHILE */
 240:Core/Src/main.c **** 	HAL_UART_Receive(&huart1, &receive, 1,100);
 241:Core/Src/main.c **** 	dprintf(receive, "%d", atoi(&receive));
 242:Core/Src/main.c **** 	seg(receive - '0');
 243:Core/Src/main.c **** 	/* USER CODE BEGIN 3 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   /* USER CODE END 3 */
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief System Clock Configuration
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** void SystemClock_Config(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 257:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 260:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 269:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 277:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 278:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 279:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c **** }
ARM GAS  /tmp/ccRpxq1X.s 			page 8


 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 291:Core/Src/main.c ****   * @param None
 292:Core/Src/main.c ****   * @retval None
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c **** static void MX_TIM1_Init(void)
 295:Core/Src/main.c **** {
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 302:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 303:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 304:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 309:Core/Src/main.c ****   htim1.Instance = TIM1;
 310:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 311:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 312:Core/Src/main.c ****   htim1.Init.Period = 1023;
 313:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 314:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 315:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 316:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 317:Core/Src/main.c ****   {
 318:Core/Src/main.c ****     Error_Handler();
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 321:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     Error_Handler();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 330:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 331:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 336:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 337:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 338:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 339:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 340:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 341:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 342:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccRpxq1X.s 			page 9


 345:Core/Src/main.c ****   }
 346:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 347:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 348:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 353:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 360:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** }
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** /**
 365:Core/Src/main.c ****   * @brief USART1 Initialization Function
 366:Core/Src/main.c ****   * @param None
 367:Core/Src/main.c ****   * @retval None
 368:Core/Src/main.c ****   */
 369:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 370:Core/Src/main.c **** {
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 379:Core/Src/main.c ****   huart1.Instance = USART1;
 380:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 381:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 382:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 383:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 384:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 385:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 386:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 387:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 388:Core/Src/main.c ****   {
 389:Core/Src/main.c ****     Error_Handler();
 390:Core/Src/main.c ****   }
 391:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** }
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * Enable DMA controller clock
 399:Core/Src/main.c ****   */
 400:Core/Src/main.c **** static void MX_DMA_Init(void)
 401:Core/Src/main.c **** {
ARM GAS  /tmp/ccRpxq1X.s 			page 10


 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* DMA controller clock enable */
 404:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* DMA interrupt init */
 407:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 408:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 409:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****   * @brief GPIO Initialization Function
 415:Core/Src/main.c ****   * @param None
 416:Core/Src/main.c ****   * @retval None
 417:Core/Src/main.c ****   */
 418:Core/Src/main.c **** static void MX_GPIO_Init(void)
 419:Core/Src/main.c **** {
 116              		.loc 1 419 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 32
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 24
 123              		.cfi_offset 4, -24
 124              		.cfi_offset 5, -20
 125              		.cfi_offset 6, -16
 126              		.cfi_offset 7, -12
 127              		.cfi_offset 8, -8
 128              		.cfi_offset 14, -4
 129 0004 88B0     		sub	sp, sp, #32
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 56
 420:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 132              		.loc 1 420 3 view .LVU14
 133              		.loc 1 420 20 is_stmt 0 view .LVU15
 134 0006 0024     		movs	r4, #0
 135 0008 0494     		str	r4, [sp, #16]
 136 000a 0594     		str	r4, [sp, #20]
 137 000c 0694     		str	r4, [sp, #24]
 138 000e 0794     		str	r4, [sp, #28]
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 423:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 139              		.loc 1 423 3 is_stmt 1 view .LVU16
 140              	.LBB4:
 141              		.loc 1 423 3 view .LVU17
 142              		.loc 1 423 3 view .LVU18
 143 0010 204B     		ldr	r3, .L7
 144 0012 9A69     		ldr	r2, [r3, #24]
 145 0014 42F02002 		orr	r2, r2, #32
 146 0018 9A61     		str	r2, [r3, #24]
 147              		.loc 1 423 3 view .LVU19
 148 001a 9A69     		ldr	r2, [r3, #24]
 149 001c 02F02002 		and	r2, r2, #32
 150 0020 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccRpxq1X.s 			page 11


 151              		.loc 1 423 3 view .LVU20
 152 0022 019A     		ldr	r2, [sp, #4]
 153              	.LBE4:
 154              		.loc 1 423 3 view .LVU21
 424:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 155              		.loc 1 424 3 view .LVU22
 156              	.LBB5:
 157              		.loc 1 424 3 view .LVU23
 158              		.loc 1 424 3 view .LVU24
 159 0024 9A69     		ldr	r2, [r3, #24]
 160 0026 42F00402 		orr	r2, r2, #4
 161 002a 9A61     		str	r2, [r3, #24]
 162              		.loc 1 424 3 view .LVU25
 163 002c 9A69     		ldr	r2, [r3, #24]
 164 002e 02F00402 		and	r2, r2, #4
 165 0032 0292     		str	r2, [sp, #8]
 166              		.loc 1 424 3 view .LVU26
 167 0034 029A     		ldr	r2, [sp, #8]
 168              	.LBE5:
 169              		.loc 1 424 3 view .LVU27
 425:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 170              		.loc 1 425 3 view .LVU28
 171              	.LBB6:
 172              		.loc 1 425 3 view .LVU29
 173              		.loc 1 425 3 view .LVU30
 174 0036 9A69     		ldr	r2, [r3, #24]
 175 0038 42F00802 		orr	r2, r2, #8
 176 003c 9A61     		str	r2, [r3, #24]
 177              		.loc 1 425 3 view .LVU31
 178 003e 9B69     		ldr	r3, [r3, #24]
 179 0040 03F00803 		and	r3, r3, #8
 180 0044 0393     		str	r3, [sp, #12]
 181              		.loc 1 425 3 view .LVU32
 182 0046 039B     		ldr	r3, [sp, #12]
 183              	.LBE6:
 184              		.loc 1 425 3 view .LVU33
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 428:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, seg_e_Pin|seg_d_Pin|seg_c_Pin|seg_dp_Pin, GPIO_PIN_RESET);
 185              		.loc 1 428 3 view .LVU34
 186 0048 DFF84C80 		ldr	r8, .L7+4
 187 004c 2246     		mov	r2, r4
 188 004e 3621     		movs	r1, #54
 189 0050 4046     		mov	r0, r8
 190 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191              	.LVL8:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 431:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, seg_g_Pin|seg_f_Pin|seg_b_Pin|seg_a_Pin, GPIO_PIN_RESET);
 192              		.loc 1 431 3 view .LVU35
 193 0056 114D     		ldr	r5, .L7+8
 194 0058 2246     		mov	r2, r4
 195 005a 40F24251 		movw	r1, #1346
 196 005e 2846     		mov	r0, r5
 197 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 198              	.LVL9:
 432:Core/Src/main.c **** 
ARM GAS  /tmp/ccRpxq1X.s 			page 12


 433:Core/Src/main.c ****   /*Configure GPIO pins : seg_e_Pin seg_d_Pin seg_c_Pin seg_dp_Pin */
 434:Core/Src/main.c ****   GPIO_InitStruct.Pin = seg_e_Pin|seg_d_Pin|seg_c_Pin|seg_dp_Pin;
 199              		.loc 1 434 3 view .LVU36
 200              		.loc 1 434 23 is_stmt 0 view .LVU37
 201 0064 3623     		movs	r3, #54
 202 0066 0493     		str	r3, [sp, #16]
 435:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 203              		.loc 1 435 3 is_stmt 1 view .LVU38
 204              		.loc 1 435 24 is_stmt 0 view .LVU39
 205 0068 0127     		movs	r7, #1
 206 006a 0597     		str	r7, [sp, #20]
 436:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 207              		.loc 1 436 3 is_stmt 1 view .LVU40
 208              		.loc 1 436 24 is_stmt 0 view .LVU41
 209 006c 0694     		str	r4, [sp, #24]
 437:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 210              		.loc 1 437 3 is_stmt 1 view .LVU42
 211              		.loc 1 437 25 is_stmt 0 view .LVU43
 212 006e 0226     		movs	r6, #2
 213 0070 0796     		str	r6, [sp, #28]
 438:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 214              		.loc 1 438 3 is_stmt 1 view .LVU44
 215 0072 04A9     		add	r1, sp, #16
 216 0074 4046     		mov	r0, r8
 217 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 218              	.LVL10:
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /*Configure GPIO pins : seg_g_Pin seg_f_Pin seg_b_Pin seg_a_Pin */
 441:Core/Src/main.c ****   GPIO_InitStruct.Pin = seg_g_Pin|seg_f_Pin|seg_b_Pin|seg_a_Pin;
 219              		.loc 1 441 3 view .LVU45
 220              		.loc 1 441 23 is_stmt 0 view .LVU46
 221 007a 40F24253 		movw	r3, #1346
 222 007e 0493     		str	r3, [sp, #16]
 442:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 223              		.loc 1 442 3 is_stmt 1 view .LVU47
 224              		.loc 1 442 24 is_stmt 0 view .LVU48
 225 0080 0597     		str	r7, [sp, #20]
 443:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 443 3 is_stmt 1 view .LVU49
 227              		.loc 1 443 24 is_stmt 0 view .LVU50
 228 0082 0694     		str	r4, [sp, #24]
 444:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 229              		.loc 1 444 3 is_stmt 1 view .LVU51
 230              		.loc 1 444 25 is_stmt 0 view .LVU52
 231 0084 0796     		str	r6, [sp, #28]
 445:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 232              		.loc 1 445 3 is_stmt 1 view .LVU53
 233 0086 04A9     		add	r1, sp, #16
 234 0088 2846     		mov	r0, r5
 235 008a FFF7FEFF 		bl	HAL_GPIO_Init
 236              	.LVL11:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** }
 237              		.loc 1 447 1 is_stmt 0 view .LVU54
 238 008e 08B0     		add	sp, sp, #32
 239              	.LCFI3:
 240              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccRpxq1X.s 			page 13


 241              		@ sp needed
 242 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 243              	.L8:
 244              		.align	2
 245              	.L7:
 246 0094 00100240 		.word	1073876992
 247 0098 00080140 		.word	1073809408
 248 009c 000C0140 		.word	1073810432
 249              		.cfi_endproc
 250              	.LFE75:
 252              		.section	.text.MX_DMA_Init,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	MX_DMA_Init:
 259              	.LFB74:
 401:Core/Src/main.c **** 
 260              		.loc 1 401 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 00B5     		push	{lr}
 265              	.LCFI4:
 266              		.cfi_def_cfa_offset 4
 267              		.cfi_offset 14, -4
 268 0002 83B0     		sub	sp, sp, #12
 269              	.LCFI5:
 270              		.cfi_def_cfa_offset 16
 404:Core/Src/main.c **** 
 271              		.loc 1 404 3 view .LVU56
 272              	.LBB7:
 404:Core/Src/main.c **** 
 273              		.loc 1 404 3 view .LVU57
 404:Core/Src/main.c **** 
 274              		.loc 1 404 3 view .LVU58
 275 0004 0A4B     		ldr	r3, .L11
 276 0006 5A69     		ldr	r2, [r3, #20]
 277 0008 42F00102 		orr	r2, r2, #1
 278 000c 5A61     		str	r2, [r3, #20]
 404:Core/Src/main.c **** 
 279              		.loc 1 404 3 view .LVU59
 280 000e 5B69     		ldr	r3, [r3, #20]
 281 0010 03F00103 		and	r3, r3, #1
 282 0014 0193     		str	r3, [sp, #4]
 404:Core/Src/main.c **** 
 283              		.loc 1 404 3 view .LVU60
 284 0016 019B     		ldr	r3, [sp, #4]
 285              	.LBE7:
 404:Core/Src/main.c **** 
 286              		.loc 1 404 3 view .LVU61
 408:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 287              		.loc 1 408 3 view .LVU62
 288 0018 0022     		movs	r2, #0
 289 001a 1146     		mov	r1, r2
 290 001c 0C20     		movs	r0, #12
 291 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccRpxq1X.s 			page 14


 292              	.LVL12:
 409:Core/Src/main.c **** 
 293              		.loc 1 409 3 view .LVU63
 294 0022 0C20     		movs	r0, #12
 295 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 296              	.LVL13:
 411:Core/Src/main.c **** 
 297              		.loc 1 411 1 is_stmt 0 view .LVU64
 298 0028 03B0     		add	sp, sp, #12
 299              	.LCFI6:
 300              		.cfi_def_cfa_offset 4
 301              		@ sp needed
 302 002a 5DF804FB 		ldr	pc, [sp], #4
 303              	.L12:
 304 002e 00BF     		.align	2
 305              	.L11:
 306 0030 00100240 		.word	1073876992
 307              		.cfi_endproc
 308              	.LFE74:
 310              		.section	.text.seg,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	seg:
 317              	.LVL14:
 318              	.LFB69:
  79:Core/Src/main.c **** 	switch(pin) {
 319              		.loc 1 79 26 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
  79:Core/Src/main.c **** 	switch(pin) {
 323              		.loc 1 79 26 is_stmt 0 view .LVU66
 324 0000 38B5     		push	{r3, r4, r5, lr}
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 3, -16
 328              		.cfi_offset 4, -12
 329              		.cfi_offset 5, -8
 330              		.cfi_offset 14, -4
 331 0002 0446     		mov	r4, r0
  80:Core/Src/main.c **** 		case 0:
 332              		.loc 1 80 2 is_stmt 1 view .LVU67
 333 0004 831C     		adds	r3, r0, #2
 334 0006 442B     		cmp	r3, #68
 335 0008 00F2C481 		bhi	.L13
 336 000c DFE813F0 		tbh	[pc, r3, lsl #1]
 337              	.L16:
 338 0010 C501     		.2byte	(.L28-.L16)/2
 339 0012 C201     		.2byte	(.L13-.L16)/2
 340 0014 4500     		.2byte	(.L27-.L16)/2
 341 0016 7000     		.2byte	(.L26-.L16)/2
 342 0018 8300     		.2byte	(.L25-.L16)/2
 343 001a A900     		.2byte	(.L24-.L16)/2
 344 001c CF00     		.2byte	(.L23-.L16)/2
 345 001e EE00     		.2byte	(.L22-.L16)/2
ARM GAS  /tmp/ccRpxq1X.s 			page 15


 346 0020 1401     		.2byte	(.L21-.L16)/2
 347 0022 3F01     		.2byte	(.L20-.L16)/2
 348 0024 5901     		.2byte	(.L19-.L16)/2
 349 0026 8901     		.2byte	(.L18-.L16)/2
 350 0028 C201     		.2byte	(.L13-.L16)/2
 351 002a C201     		.2byte	(.L13-.L16)/2
 352 002c C201     		.2byte	(.L13-.L16)/2
 353 002e C201     		.2byte	(.L13-.L16)/2
 354 0030 C201     		.2byte	(.L13-.L16)/2
 355 0032 C201     		.2byte	(.L13-.L16)/2
 356 0034 C201     		.2byte	(.L13-.L16)/2
 357 0036 C201     		.2byte	(.L13-.L16)/2
 358 0038 C201     		.2byte	(.L13-.L16)/2
 359 003a C201     		.2byte	(.L13-.L16)/2
 360 003c C201     		.2byte	(.L13-.L16)/2
 361 003e C201     		.2byte	(.L13-.L16)/2
 362 0040 C201     		.2byte	(.L13-.L16)/2
 363 0042 C201     		.2byte	(.L13-.L16)/2
 364 0044 C201     		.2byte	(.L13-.L16)/2
 365 0046 C201     		.2byte	(.L13-.L16)/2
 366 0048 C201     		.2byte	(.L13-.L16)/2
 367 004a C201     		.2byte	(.L13-.L16)/2
 368 004c C201     		.2byte	(.L13-.L16)/2
 369 004e C201     		.2byte	(.L13-.L16)/2
 370 0050 C201     		.2byte	(.L13-.L16)/2
 371 0052 C201     		.2byte	(.L13-.L16)/2
 372 0054 C201     		.2byte	(.L13-.L16)/2
 373 0056 C201     		.2byte	(.L13-.L16)/2
 374 0058 C201     		.2byte	(.L13-.L16)/2
 375 005a C201     		.2byte	(.L13-.L16)/2
 376 005c C201     		.2byte	(.L13-.L16)/2
 377 005e C201     		.2byte	(.L13-.L16)/2
 378 0060 C201     		.2byte	(.L13-.L16)/2
 379 0062 C201     		.2byte	(.L13-.L16)/2
 380 0064 C201     		.2byte	(.L13-.L16)/2
 381 0066 C201     		.2byte	(.L13-.L16)/2
 382 0068 C201     		.2byte	(.L13-.L16)/2
 383 006a C201     		.2byte	(.L13-.L16)/2
 384 006c C201     		.2byte	(.L13-.L16)/2
 385 006e C201     		.2byte	(.L13-.L16)/2
 386 0070 C201     		.2byte	(.L13-.L16)/2
 387 0072 C201     		.2byte	(.L13-.L16)/2
 388 0074 C201     		.2byte	(.L13-.L16)/2
 389 0076 C201     		.2byte	(.L13-.L16)/2
 390 0078 C201     		.2byte	(.L13-.L16)/2
 391 007a C201     		.2byte	(.L13-.L16)/2
 392 007c C201     		.2byte	(.L13-.L16)/2
 393 007e C201     		.2byte	(.L13-.L16)/2
 394 0080 C201     		.2byte	(.L13-.L16)/2
 395 0082 C201     		.2byte	(.L13-.L16)/2
 396 0084 C201     		.2byte	(.L13-.L16)/2
 397 0086 C201     		.2byte	(.L13-.L16)/2
 398 0088 C201     		.2byte	(.L13-.L16)/2
 399 008a C201     		.2byte	(.L13-.L16)/2
 400 008c C301     		.2byte	(.L30-.L16)/2
 401 008e C201     		.2byte	(.L13-.L16)/2
 402 0090 C201     		.2byte	(.L13-.L16)/2
ARM GAS  /tmp/ccRpxq1X.s 			page 16


 403 0092 C201     		.2byte	(.L13-.L16)/2
 404 0094 C201     		.2byte	(.L13-.L16)/2
 405 0096 C201     		.2byte	(.L13-.L16)/2
 406 0098 C001     		.2byte	(.L15-.L16)/2
 407              		.p2align 1
 408              	.L27:
  82:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 409              		.loc 1 82 4 view .LVU68
 410 009a FFF7FEFF 		bl	reset
 411              	.LVL15:
  83:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 412              		.loc 1 83 4 view .LVU69
 413 009e C34B     		ldr	r3, .L34
 414 00a0 1A68     		ldr	r2, [r3]
 415 00a2 6423     		movs	r3, #100
 416 00a4 04FB03F3 		mul	r3, r4, r3
 417 00a8 5363     		str	r3, [r2, #52]
  84:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 418              		.loc 1 84 4 view .LVU70
 419 00aa C14C     		ldr	r4, .L34+4
 420              	.LVL16:
  84:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 421              		.loc 1 84 4 is_stmt 0 view .LVU71
 422 00ac 0122     		movs	r2, #1
 423 00ae 4FF48071 		mov	r1, #256
 424 00b2 2046     		mov	r0, r4
 425 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 426              	.LVL17:
  85:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 427              		.loc 1 85 4 is_stmt 1 view .LVU72
 428 00b8 0122     		movs	r2, #1
 429 00ba 4FF48061 		mov	r1, #1024
 430 00be 2046     		mov	r0, r4
 431 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 432              	.LVL18:
  86:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 433              		.loc 1 86 4 view .LVU73
 434 00c4 BB4D     		ldr	r5, .L34+8
 435 00c6 0122     		movs	r2, #1
 436 00c8 0221     		movs	r1, #2
 437 00ca 2846     		mov	r0, r5
 438 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 439              	.LVL19:
  87:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 440              		.loc 1 87 4 view .LVU74
 441 00d0 0122     		movs	r2, #1
 442 00d2 0421     		movs	r1, #4
 443 00d4 2846     		mov	r0, r5
 444 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 445              	.LVL20:
  88:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 446              		.loc 1 88 4 view .LVU75
 447 00da 0122     		movs	r2, #1
 448 00dc 1021     		movs	r1, #16
 449 00de 2846     		mov	r0, r5
 450 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 451              	.LVL21:
ARM GAS  /tmp/ccRpxq1X.s 			page 17


  89:Core/Src/main.c **** 			break;
 452              		.loc 1 89 4 view .LVU76
 453 00e4 0122     		movs	r2, #1
 454 00e6 4021     		movs	r1, #64
 455 00e8 2046     		mov	r0, r4
 456 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 457              	.LVL22:
  90:Core/Src/main.c **** 		case 1:
 458              		.loc 1 90 4 view .LVU77
 459 00ee 51E1     		b	.L13
 460              	.LVL23:
 461              	.L26:
  92:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 462              		.loc 1 92 4 view .LVU78
 463 00f0 FFF7FEFF 		bl	reset
 464              	.LVL24:
  93:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 465              		.loc 1 93 4 view .LVU79
 466 00f4 AD4B     		ldr	r3, .L34
 467 00f6 1A68     		ldr	r2, [r3]
 468 00f8 6423     		movs	r3, #100
 469 00fa 04FB03F3 		mul	r3, r4, r3
 470 00fe 5363     		str	r3, [r2, #52]
  94:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 471              		.loc 1 94 4 view .LVU80
 472 0100 0122     		movs	r2, #1
 473 0102 4021     		movs	r1, #64
 474 0104 AA48     		ldr	r0, .L34+4
 475 0106 FFF7FEFF 		bl	HAL_GPIO_WritePin
 476              	.LVL25:
  95:Core/Src/main.c **** 			break;
 477              		.loc 1 95 4 view .LVU81
 478 010a 0122     		movs	r2, #1
 479 010c 1021     		movs	r1, #16
 480 010e A948     		ldr	r0, .L34+8
 481 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
 482              	.LVL26:
  96:Core/Src/main.c **** 		case 2:
 483              		.loc 1 96 4 view .LVU82
 484 0114 3EE1     		b	.L13
 485              	.LVL27:
 486              	.L25:
  98:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 487              		.loc 1 98 4 view .LVU83
 488 0116 FFF7FEFF 		bl	reset
 489              	.LVL28:
  99:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 490              		.loc 1 99 4 view .LVU84
 491 011a A44B     		ldr	r3, .L34
 492 011c 1A68     		ldr	r2, [r3]
 493 011e 6423     		movs	r3, #100
 494 0120 04FB03F3 		mul	r3, r4, r3
 495 0124 5363     		str	r3, [r2, #52]
 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 496              		.loc 1 100 4 view .LVU85
 497 0126 A24C     		ldr	r4, .L34+4
 498              	.LVL29:
ARM GAS  /tmp/ccRpxq1X.s 			page 18


 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 499              		.loc 1 100 4 is_stmt 0 view .LVU86
 500 0128 0122     		movs	r2, #1
 501 012a 4FF48071 		mov	r1, #256
 502 012e 2046     		mov	r0, r4
 503 0130 FFF7FEFF 		bl	HAL_GPIO_WritePin
 504              	.LVL30:
 101:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 505              		.loc 1 101 4 is_stmt 1 view .LVU87
 506 0134 0122     		movs	r2, #1
 507 0136 4021     		movs	r1, #64
 508 0138 2046     		mov	r0, r4
 509 013a FFF7FEFF 		bl	HAL_GPIO_WritePin
 510              	.LVL31:
 102:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 511              		.loc 1 102 4 view .LVU88
 512 013e 0122     		movs	r2, #1
 513 0140 0221     		movs	r1, #2
 514 0142 2046     		mov	r0, r4
 515 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 516              	.LVL32:
 103:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 517              		.loc 1 103 4 view .LVU89
 518 0148 A4F58064 		sub	r4, r4, #1024
 519 014c 0122     		movs	r2, #1
 520 014e 0221     		movs	r1, #2
 521 0150 2046     		mov	r0, r4
 522 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 523              	.LVL33:
 104:Core/Src/main.c **** 
 524              		.loc 1 104 4 view .LVU90
 525 0156 0122     		movs	r2, #1
 526 0158 0421     		movs	r1, #4
 527 015a 2046     		mov	r0, r4
 528 015c FFF7FEFF 		bl	HAL_GPIO_WritePin
 529              	.LVL34:
 106:Core/Src/main.c **** 		case 3:
 530              		.loc 1 106 4 view .LVU91
 531 0160 18E1     		b	.L13
 532              	.LVL35:
 533              	.L24:
 108:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 534              		.loc 1 108 4 view .LVU92
 535 0162 FFF7FEFF 		bl	reset
 536              	.LVL36:
 109:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 537              		.loc 1 109 4 view .LVU93
 538 0166 914B     		ldr	r3, .L34
 539 0168 1A68     		ldr	r2, [r3]
 540 016a 6423     		movs	r3, #100
 541 016c 04FB03F3 		mul	r3, r4, r3
 542 0170 5363     		str	r3, [r2, #52]
 110:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 543              		.loc 1 110 4 view .LVU94
 544 0172 8F4C     		ldr	r4, .L34+4
 545              	.LVL37:
 110:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccRpxq1X.s 			page 19


 546              		.loc 1 110 4 is_stmt 0 view .LVU95
 547 0174 0122     		movs	r2, #1
 548 0176 4FF48071 		mov	r1, #256
 549 017a 2046     		mov	r0, r4
 550 017c FFF7FEFF 		bl	HAL_GPIO_WritePin
 551              	.LVL38:
 111:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 552              		.loc 1 111 4 is_stmt 1 view .LVU96
 553 0180 0122     		movs	r2, #1
 554 0182 4021     		movs	r1, #64
 555 0184 2046     		mov	r0, r4
 556 0186 FFF7FEFF 		bl	HAL_GPIO_WritePin
 557              	.LVL39:
 112:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 558              		.loc 1 112 4 view .LVU97
 559 018a 0122     		movs	r2, #1
 560 018c 0221     		movs	r1, #2
 561 018e 2046     		mov	r0, r4
 562 0190 FFF7FEFF 		bl	HAL_GPIO_WritePin
 563              	.LVL40:
 113:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 564              		.loc 1 113 4 view .LVU98
 565 0194 A4F58064 		sub	r4, r4, #1024
 566 0198 0122     		movs	r2, #1
 567 019a 1021     		movs	r1, #16
 568 019c 2046     		mov	r0, r4
 569 019e FFF7FEFF 		bl	HAL_GPIO_WritePin
 570              	.LVL41:
 114:Core/Src/main.c **** 			break;
 571              		.loc 1 114 4 view .LVU99
 572 01a2 0122     		movs	r2, #1
 573 01a4 0421     		movs	r1, #4
 574 01a6 2046     		mov	r0, r4
 575 01a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 576              	.LVL42:
 115:Core/Src/main.c **** 
 577              		.loc 1 115 4 view .LVU100
 578 01ac F2E0     		b	.L13
 579              	.LVL43:
 580              	.L23:
 118:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 581              		.loc 1 118 4 view .LVU101
 582 01ae FFF7FEFF 		bl	reset
 583              	.LVL44:
 119:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 584              		.loc 1 119 4 view .LVU102
 585 01b2 7E4B     		ldr	r3, .L34
 586 01b4 1A68     		ldr	r2, [r3]
 587 01b6 6423     		movs	r3, #100
 588 01b8 04FB03F3 		mul	r3, r4, r3
 589 01bc 5363     		str	r3, [r2, #52]
 120:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 590              		.loc 1 120 4 view .LVU103
 591 01be 0122     		movs	r2, #1
 592 01c0 1021     		movs	r1, #16
 593 01c2 7C48     		ldr	r0, .L34+8
 594 01c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccRpxq1X.s 			page 20


 595              	.LVL45:
 121:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 596              		.loc 1 121 4 view .LVU104
 597 01c8 794C     		ldr	r4, .L34+4
 598              	.LVL46:
 121:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 599              		.loc 1 121 4 is_stmt 0 view .LVU105
 600 01ca 0122     		movs	r2, #1
 601 01cc 4021     		movs	r1, #64
 602 01ce 2046     		mov	r0, r4
 603 01d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 604              	.LVL47:
 122:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 605              		.loc 1 122 4 is_stmt 1 view .LVU106
 606 01d4 0122     		movs	r2, #1
 607 01d6 0221     		movs	r1, #2
 608 01d8 2046     		mov	r0, r4
 609 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 610              	.LVL48:
 123:Core/Src/main.c **** 			break;
 611              		.loc 1 123 4 view .LVU107
 612 01de 0122     		movs	r2, #1
 613 01e0 4FF48061 		mov	r1, #1024
 614 01e4 2046     		mov	r0, r4
 615 01e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 616              	.LVL49:
 124:Core/Src/main.c **** 
 617              		.loc 1 124 4 view .LVU108
 618 01ea D3E0     		b	.L13
 619              	.LVL50:
 620              	.L22:
 127:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 621              		.loc 1 127 4 view .LVU109
 622 01ec FFF7FEFF 		bl	reset
 623              	.LVL51:
 128:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 624              		.loc 1 128 4 view .LVU110
 625 01f0 6E4B     		ldr	r3, .L34
 626 01f2 1A68     		ldr	r2, [r3]
 627 01f4 6423     		movs	r3, #100
 628 01f6 04FB03F3 		mul	r3, r4, r3
 629 01fa 5363     		str	r3, [r2, #52]
 129:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 630              		.loc 1 129 4 view .LVU111
 631 01fc 6C4C     		ldr	r4, .L34+4
 632              	.LVL52:
 129:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 633              		.loc 1 129 4 is_stmt 0 view .LVU112
 634 01fe 0122     		movs	r2, #1
 635 0200 4FF48071 		mov	r1, #256
 636 0204 2046     		mov	r0, r4
 637 0206 FFF7FEFF 		bl	HAL_GPIO_WritePin
 638              	.LVL53:
 130:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 639              		.loc 1 130 4 is_stmt 1 view .LVU113
 640 020a 6A4D     		ldr	r5, .L34+8
 641 020c 0122     		movs	r2, #1
ARM GAS  /tmp/ccRpxq1X.s 			page 21


 642 020e 1021     		movs	r1, #16
 643 0210 2846     		mov	r0, r5
 644 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 645              	.LVL54:
 131:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 646              		.loc 1 131 4 view .LVU114
 647 0216 0122     		movs	r2, #1
 648 0218 0221     		movs	r1, #2
 649 021a 2046     		mov	r0, r4
 650 021c FFF7FEFF 		bl	HAL_GPIO_WritePin
 651              	.LVL55:
 132:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 652              		.loc 1 132 4 view .LVU115
 653 0220 0122     		movs	r2, #1
 654 0222 4FF48061 		mov	r1, #1024
 655 0226 2046     		mov	r0, r4
 656 0228 FFF7FEFF 		bl	HAL_GPIO_WritePin
 657              	.LVL56:
 133:Core/Src/main.c **** 
 658              		.loc 1 133 4 view .LVU116
 659 022c 0122     		movs	r2, #1
 660 022e 0421     		movs	r1, #4
 661 0230 2846     		mov	r0, r5
 662 0232 FFF7FEFF 		bl	HAL_GPIO_WritePin
 663              	.LVL57:
 135:Core/Src/main.c **** 		case 6:
 664              		.loc 1 135 4 view .LVU117
 665 0236 ADE0     		b	.L13
 666              	.LVL58:
 667              	.L21:
 137:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1, pin*100);
 668              		.loc 1 137 4 view .LVU118
 669 0238 FFF7FEFF 		bl	reset
 670              	.LVL59:
 138:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 671              		.loc 1 138 4 view .LVU119
 672 023c 5B4B     		ldr	r3, .L34
 673 023e 1A68     		ldr	r2, [r3]
 674 0240 6423     		movs	r3, #100
 675 0242 04FB03F3 		mul	r3, r4, r3
 676 0246 5363     		str	r3, [r2, #52]
 139:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 677              		.loc 1 139 4 view .LVU120
 678 0248 594D     		ldr	r5, .L34+4
 679 024a 0122     		movs	r2, #1
 680 024c 4FF48071 		mov	r1, #256
 681 0250 2846     		mov	r0, r5
 682 0252 FFF7FEFF 		bl	HAL_GPIO_WritePin
 683              	.LVL60:
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 684              		.loc 1 140 4 view .LVU121
 685 0256 574C     		ldr	r4, .L34+8
 686              	.LVL61:
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 687              		.loc 1 140 4 is_stmt 0 view .LVU122
 688 0258 0122     		movs	r2, #1
 689 025a 1021     		movs	r1, #16
ARM GAS  /tmp/ccRpxq1X.s 			page 22


 690 025c 2046     		mov	r0, r4
 691 025e FFF7FEFF 		bl	HAL_GPIO_WritePin
 692              	.LVL62:
 141:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 693              		.loc 1 141 4 is_stmt 1 view .LVU123
 694 0262 0122     		movs	r2, #1
 695 0264 0221     		movs	r1, #2
 696 0266 2846     		mov	r0, r5
 697 0268 FFF7FEFF 		bl	HAL_GPIO_WritePin
 698              	.LVL63:
 142:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 699              		.loc 1 142 4 view .LVU124
 700 026c 0122     		movs	r2, #1
 701 026e 4FF48061 		mov	r1, #1024
 702 0272 2846     		mov	r0, r5
 703 0274 FFF7FEFF 		bl	HAL_GPIO_WritePin
 704              	.LVL64:
 143:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 705              		.loc 1 143 4 view .LVU125
 706 0278 0122     		movs	r2, #1
 707 027a 0421     		movs	r1, #4
 708 027c 2046     		mov	r0, r4
 709 027e FFF7FEFF 		bl	HAL_GPIO_WritePin
 710              	.LVL65:
 144:Core/Src/main.c **** 			break;
 711              		.loc 1 144 4 view .LVU126
 712 0282 0122     		movs	r2, #1
 713 0284 0221     		movs	r1, #2
 714 0286 2046     		mov	r0, r4
 715 0288 FFF7FEFF 		bl	HAL_GPIO_WritePin
 716              	.LVL66:
 145:Core/Src/main.c **** 		case 7:
 717              		.loc 1 145 4 view .LVU127
 718 028c 82E0     		b	.L13
 719              	.LVL67:
 720              	.L20:
 147:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,pin*100);
 721              		.loc 1 147 4 view .LVU128
 722 028e FFF7FEFF 		bl	reset
 723              	.LVL68:
 148:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 724              		.loc 1 148 4 view .LVU129
 725 0292 464B     		ldr	r3, .L34
 726 0294 1A68     		ldr	r2, [r3]
 727 0296 6423     		movs	r3, #100
 728 0298 04FB03F3 		mul	r3, r4, r3
 729 029c 5363     		str	r3, [r2, #52]
 149:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 730              		.loc 1 149 4 view .LVU130
 731 029e 444C     		ldr	r4, .L34+4
 732              	.LVL69:
 149:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 733              		.loc 1 149 4 is_stmt 0 view .LVU131
 734 02a0 0122     		movs	r2, #1
 735 02a2 4FF48071 		mov	r1, #256
 736 02a6 2046     		mov	r0, r4
 737 02a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccRpxq1X.s 			page 23


 738              	.LVL70:
 150:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 739              		.loc 1 150 4 is_stmt 1 view .LVU132
 740 02ac 0122     		movs	r2, #1
 741 02ae 1021     		movs	r1, #16
 742 02b0 4048     		ldr	r0, .L34+8
 743 02b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 744              	.LVL71:
 151:Core/Src/main.c **** 			break;
 745              		.loc 1 151 4 view .LVU133
 746 02b6 0122     		movs	r2, #1
 747 02b8 4021     		movs	r1, #64
 748 02ba 2046     		mov	r0, r4
 749 02bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 750              	.LVL72:
 152:Core/Src/main.c **** 
 751              		.loc 1 152 4 view .LVU134
 752 02c0 68E0     		b	.L13
 753              	.LVL73:
 754              	.L19:
 155:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,pin*100);
 755              		.loc 1 155 4 view .LVU135
 756 02c2 FFF7FEFF 		bl	reset
 757              	.LVL74:
 156:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 758              		.loc 1 156 4 view .LVU136
 759 02c6 394B     		ldr	r3, .L34
 760 02c8 1A68     		ldr	r2, [r3]
 761 02ca 6423     		movs	r3, #100
 762 02cc 04FB03F3 		mul	r3, r4, r3
 763 02d0 5363     		str	r3, [r2, #52]
 157:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 764              		.loc 1 157 4 view .LVU137
 765 02d2 374C     		ldr	r4, .L34+4
 766              	.LVL75:
 157:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 767              		.loc 1 157 4 is_stmt 0 view .LVU138
 768 02d4 0122     		movs	r2, #1
 769 02d6 4FF48071 		mov	r1, #256
 770 02da 2046     		mov	r0, r4
 771 02dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 772              	.LVL76:
 158:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 773              		.loc 1 158 4 is_stmt 1 view .LVU139
 774 02e0 344D     		ldr	r5, .L34+8
 775 02e2 0122     		movs	r2, #1
 776 02e4 1021     		movs	r1, #16
 777 02e6 2846     		mov	r0, r5
 778 02e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 779              	.LVL77:
 159:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 780              		.loc 1 159 4 view .LVU140
 781 02ec 0122     		movs	r2, #1
 782 02ee 0221     		movs	r1, #2
 783 02f0 2046     		mov	r0, r4
 784 02f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 785              	.LVL78:
ARM GAS  /tmp/ccRpxq1X.s 			page 24


 160:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 786              		.loc 1 160 4 view .LVU141
 787 02f6 0122     		movs	r2, #1
 788 02f8 4FF48061 		mov	r1, #1024
 789 02fc 2046     		mov	r0, r4
 790 02fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 791              	.LVL79:
 161:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 792              		.loc 1 161 4 view .LVU142
 793 0302 0122     		movs	r2, #1
 794 0304 0421     		movs	r1, #4
 795 0306 2846     		mov	r0, r5
 796 0308 FFF7FEFF 		bl	HAL_GPIO_WritePin
 797              	.LVL80:
 162:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 798              		.loc 1 162 4 view .LVU143
 799 030c 0122     		movs	r2, #1
 800 030e 0221     		movs	r1, #2
 801 0310 2846     		mov	r0, r5
 802 0312 FFF7FEFF 		bl	HAL_GPIO_WritePin
 803              	.LVL81:
 163:Core/Src/main.c **** 			break;
 804              		.loc 1 163 4 view .LVU144
 805 0316 0122     		movs	r2, #1
 806 0318 4021     		movs	r1, #64
 807 031a 2046     		mov	r0, r4
 808 031c FFF7FEFF 		bl	HAL_GPIO_WritePin
 809              	.LVL82:
 164:Core/Src/main.c **** 
 810              		.loc 1 164 4 view .LVU145
 811 0320 38E0     		b	.L13
 812              	.LVL83:
 813              	.L18:
 167:Core/Src/main.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,pin*100);
 814              		.loc 1 167 4 view .LVU146
 815 0322 FFF7FEFF 		bl	reset
 816              	.LVL84:
 168:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 817              		.loc 1 168 4 view .LVU147
 818 0326 214B     		ldr	r3, .L34
 819 0328 1B68     		ldr	r3, [r3]
 820 032a 6422     		movs	r2, #100
 821 032c 02FB04F4 		mul	r4, r2, r4
 822              	.LVL85:
 168:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 823              		.loc 1 168 4 is_stmt 0 view .LVU148
 824 0330 5C63     		str	r4, [r3, #52]
 169:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 825              		.loc 1 169 4 is_stmt 1 view .LVU149
 826 0332 1F4C     		ldr	r4, .L34+4
 827 0334 0122     		movs	r2, #1
 828 0336 4FF48071 		mov	r1, #256
 829 033a 2046     		mov	r0, r4
 830 033c FFF7FEFF 		bl	HAL_GPIO_WritePin
 831              	.LVL86:
 170:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 832              		.loc 1 170 4 view .LVU150
ARM GAS  /tmp/ccRpxq1X.s 			page 25


 833 0340 1C4D     		ldr	r5, .L34+8
 834 0342 0122     		movs	r2, #1
 835 0344 1021     		movs	r1, #16
 836 0346 2846     		mov	r0, r5
 837 0348 FFF7FEFF 		bl	HAL_GPIO_WritePin
 838              	.LVL87:
 171:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 839              		.loc 1 171 4 view .LVU151
 840 034c 0122     		movs	r2, #1
 841 034e 0221     		movs	r1, #2
 842 0350 2046     		mov	r0, r4
 843 0352 FFF7FEFF 		bl	HAL_GPIO_WritePin
 844              	.LVL88:
 172:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 845              		.loc 1 172 4 view .LVU152
 846 0356 0122     		movs	r2, #1
 847 0358 4FF48061 		mov	r1, #1024
 848 035c 2046     		mov	r0, r4
 849 035e FFF7FEFF 		bl	HAL_GPIO_WritePin
 850              	.LVL89:
 173:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 851              		.loc 1 173 4 view .LVU153
 852 0362 0122     		movs	r2, #1
 853 0364 0421     		movs	r1, #4
 854 0366 2846     		mov	r0, r5
 855 0368 FFF7FEFF 		bl	HAL_GPIO_WritePin
 856              	.LVL90:
 174:Core/Src/main.c **** 			break;
 857              		.loc 1 174 4 view .LVU154
 858 036c 0122     		movs	r2, #1
 859 036e 4021     		movs	r1, #64
 860 0370 2046     		mov	r0, r4
 861 0372 FFF7FEFF 		bl	HAL_GPIO_WritePin
 862              	.LVL91:
 175:Core/Src/main.c **** 
 863              		.loc 1 175 4 view .LVU155
 864 0376 0DE0     		b	.L13
 865              	.LVL92:
 866              	.L29:
 867              	.LBB8:
 179:Core/Src/main.c **** 				HAL_Delay(1000);
 868              		.loc 1 179 5 discriminator 3 view .LVU156
 869 0378 2046     		mov	r0, r4
 870 037a FFF741FE 		bl	seg
 871              	.LVL93:
 180:Core/Src/main.c **** 			}
 872              		.loc 1 180 5 discriminator 3 view .LVU157
 873 037e 4FF47A70 		mov	r0, #1000
 874 0382 FFF7FEFF 		bl	HAL_Delay
 875              	.LVL94:
 178:Core/Src/main.c **** 				seg(i);
 876              		.loc 1 178 24 discriminator 3 view .LVU158
 877 0386 0134     		adds	r4, r4, #1
 878              	.LVL95:
 879              	.L17:
 178:Core/Src/main.c **** 				seg(i);
 880              		.loc 1 178 18 discriminator 1 view .LVU159
ARM GAS  /tmp/ccRpxq1X.s 			page 26


 881 0388 092C     		cmp	r4, #9
 882 038a F5DD     		ble	.L29
 883              	.LBE8:
 182:Core/Src/main.c **** 		case 'r' - '0':
 884              		.loc 1 182 4 view .LVU160
 885 038c FFF7FEFF 		bl	reset
 886              	.LVL96:
 887              	.L15:
 184:Core/Src/main.c **** 			break;
 888              		.loc 1 184 4 view .LVU161
 889 0390 FFF7FEFF 		bl	reset
 890              	.LVL97:
 185:Core/Src/main.c **** 
 891              		.loc 1 185 4 view .LVU162
 892              	.L13:
 194:Core/Src/main.c **** 
 893              		.loc 1 194 1 is_stmt 0 view .LVU163
 894 0394 38BD     		pop	{r3, r4, r5, pc}
 895              	.LVL98:
 896              	.L30:
  80:Core/Src/main.c **** 		case 0:
 897              		.loc 1 80 2 view .LVU164
 898 0396 0024     		movs	r4, #0
 899 0398 F6E7     		b	.L17
 900              	.L28:
 188:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_SET);
 901              		.loc 1 188 4 is_stmt 1 view .LVU165
 902 039a FFF7FEFF 		bl	reset
 903              	.LVL99:
 189:Core/Src/main.c **** 
 904              		.loc 1 189 4 view .LVU166
 905 039e 0122     		movs	r2, #1
 906 03a0 2021     		movs	r1, #32
 907 03a2 0448     		ldr	r0, .L34+8
 908 03a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 909              	.LVL100:
 194:Core/Src/main.c **** 
 910              		.loc 1 194 1 is_stmt 0 view .LVU167
 911 03a8 F4E7     		b	.L13
 912              	.L35:
 913 03aa 00BF     		.align	2
 914              	.L34:
 915 03ac 00000000 		.word	htim1
 916 03b0 000C0140 		.word	1073810432
 917 03b4 00080140 		.word	1073809408
 918              		.cfi_endproc
 919              	.LFE69:
 921              		.section	.text.Error_Handler,"ax",%progbits
 922              		.align	1
 923              		.global	Error_Handler
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 928              	Error_Handler:
 929              	.LFB76:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccRpxq1X.s 			page 27


 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** /* USER CODE END 4 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 455:Core/Src/main.c ****   * @retval None
 456:Core/Src/main.c ****   */
 457:Core/Src/main.c **** void Error_Handler(void)
 458:Core/Src/main.c **** {
 930              		.loc 1 458 1 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ Volatile: function does not return.
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 459:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 460:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 461:Core/Src/main.c ****   __disable_irq();
 936              		.loc 1 461 3 view .LVU169
 937              	.LBB9:
 938              	.LBI9:
 939              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /tmp/ccRpxq1X.s 			page 28


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /tmp/ccRpxq1X.s 			page 29


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 940              		.loc 2 140 27 view .LVU170
 941              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 942              		.loc 2 142 3 view .LVU171
 943              		.syntax unified
 944              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 945 0000 72B6     		cpsid i
 946              	@ 0 "" 2
ARM GAS  /tmp/ccRpxq1X.s 			page 30


 947              		.thumb
 948              		.syntax unified
 949              	.L37:
 950              	.LBE10:
 951              	.LBE9:
 462:Core/Src/main.c ****   while (1)
 952              		.loc 1 462 3 discriminator 1 view .LVU172
 463:Core/Src/main.c ****   {
 464:Core/Src/main.c ****   }
 953              		.loc 1 464 3 discriminator 1 view .LVU173
 462:Core/Src/main.c ****   while (1)
 954              		.loc 1 462 9 discriminator 1 view .LVU174
 955 0002 FEE7     		b	.L37
 956              		.cfi_endproc
 957              	.LFE76:
 959              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 960              		.align	1
 961              		.syntax unified
 962              		.thumb
 963              		.thumb_func
 965              	MX_USART1_UART_Init:
 966              	.LFB73:
 370:Core/Src/main.c **** 
 967              		.loc 1 370 1 view -0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 08B5     		push	{r3, lr}
 972              	.LCFI8:
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 3, -8
 975              		.cfi_offset 14, -4
 379:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 976              		.loc 1 379 3 view .LVU176
 379:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 977              		.loc 1 379 19 is_stmt 0 view .LVU177
 978 0002 0A48     		ldr	r0, .L42
 979 0004 0A4B     		ldr	r3, .L42+4
 980 0006 0360     		str	r3, [r0]
 380:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 981              		.loc 1 380 3 is_stmt 1 view .LVU178
 380:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 982              		.loc 1 380 24 is_stmt 0 view .LVU179
 983 0008 4FF4E133 		mov	r3, #115200
 984 000c 4360     		str	r3, [r0, #4]
 381:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 985              		.loc 1 381 3 is_stmt 1 view .LVU180
 381:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 986              		.loc 1 381 26 is_stmt 0 view .LVU181
 987 000e 0023     		movs	r3, #0
 988 0010 8360     		str	r3, [r0, #8]
 382:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 989              		.loc 1 382 3 is_stmt 1 view .LVU182
 382:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 990              		.loc 1 382 24 is_stmt 0 view .LVU183
 991 0012 C360     		str	r3, [r0, #12]
 383:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccRpxq1X.s 			page 31


 992              		.loc 1 383 3 is_stmt 1 view .LVU184
 383:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 993              		.loc 1 383 22 is_stmt 0 view .LVU185
 994 0014 0361     		str	r3, [r0, #16]
 384:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 995              		.loc 1 384 3 is_stmt 1 view .LVU186
 384:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 996              		.loc 1 384 20 is_stmt 0 view .LVU187
 997 0016 0C22     		movs	r2, #12
 998 0018 4261     		str	r2, [r0, #20]
 385:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 999              		.loc 1 385 3 is_stmt 1 view .LVU188
 385:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1000              		.loc 1 385 25 is_stmt 0 view .LVU189
 1001 001a 8361     		str	r3, [r0, #24]
 386:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1002              		.loc 1 386 3 is_stmt 1 view .LVU190
 386:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1003              		.loc 1 386 28 is_stmt 0 view .LVU191
 1004 001c C361     		str	r3, [r0, #28]
 387:Core/Src/main.c ****   {
 1005              		.loc 1 387 3 is_stmt 1 view .LVU192
 387:Core/Src/main.c ****   {
 1006              		.loc 1 387 7 is_stmt 0 view .LVU193
 1007 001e FFF7FEFF 		bl	HAL_UART_Init
 1008              	.LVL101:
 387:Core/Src/main.c ****   {
 1009              		.loc 1 387 6 view .LVU194
 1010 0022 00B9     		cbnz	r0, .L41
 395:Core/Src/main.c **** 
 1011              		.loc 1 395 1 view .LVU195
 1012 0024 08BD     		pop	{r3, pc}
 1013              	.L41:
 389:Core/Src/main.c ****   }
 1014              		.loc 1 389 5 is_stmt 1 view .LVU196
 1015 0026 FFF7FEFF 		bl	Error_Handler
 1016              	.LVL102:
 1017              	.L43:
 1018 002a 00BF     		.align	2
 1019              	.L42:
 1020 002c 00000000 		.word	huart1
 1021 0030 00380140 		.word	1073821696
 1022              		.cfi_endproc
 1023              	.LFE73:
 1025              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1026              		.align	1
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1031              	MX_TIM1_Init:
 1032              	.LFB72:
 295:Core/Src/main.c **** 
 1033              		.loc 1 295 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 88
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccRpxq1X.s 			page 32


 1038              	.LCFI9:
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 4, -8
 1041              		.cfi_offset 14, -4
 1042 0002 96B0     		sub	sp, sp, #88
 1043              	.LCFI10:
 1044              		.cfi_def_cfa_offset 96
 301:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1045              		.loc 1 301 3 view .LVU198
 301:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1046              		.loc 1 301 26 is_stmt 0 view .LVU199
 1047 0004 0024     		movs	r4, #0
 1048 0006 1294     		str	r4, [sp, #72]
 1049 0008 1394     		str	r4, [sp, #76]
 1050 000a 1494     		str	r4, [sp, #80]
 1051 000c 1594     		str	r4, [sp, #84]
 302:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1052              		.loc 1 302 3 is_stmt 1 view .LVU200
 302:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1053              		.loc 1 302 27 is_stmt 0 view .LVU201
 1054 000e 1094     		str	r4, [sp, #64]
 1055 0010 1194     		str	r4, [sp, #68]
 303:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1056              		.loc 1 303 3 is_stmt 1 view .LVU202
 303:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1057              		.loc 1 303 22 is_stmt 0 view .LVU203
 1058 0012 0994     		str	r4, [sp, #36]
 1059 0014 0A94     		str	r4, [sp, #40]
 1060 0016 0B94     		str	r4, [sp, #44]
 1061 0018 0C94     		str	r4, [sp, #48]
 1062 001a 0D94     		str	r4, [sp, #52]
 1063 001c 0E94     		str	r4, [sp, #56]
 1064 001e 0F94     		str	r4, [sp, #60]
 304:Core/Src/main.c **** 
 1065              		.loc 1 304 3 is_stmt 1 view .LVU204
 304:Core/Src/main.c **** 
 1066              		.loc 1 304 34 is_stmt 0 view .LVU205
 1067 0020 2022     		movs	r2, #32
 1068 0022 2146     		mov	r1, r4
 1069 0024 01A8     		add	r0, sp, #4
 1070 0026 FFF7FEFF 		bl	memset
 1071              	.LVL103:
 309:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1072              		.loc 1 309 3 is_stmt 1 view .LVU206
 309:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1073              		.loc 1 309 18 is_stmt 0 view .LVU207
 1074 002a 2948     		ldr	r0, .L58
 1075 002c 294B     		ldr	r3, .L58+4
 1076 002e 0360     		str	r3, [r0]
 310:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1077              		.loc 1 310 3 is_stmt 1 view .LVU208
 310:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1078              		.loc 1 310 24 is_stmt 0 view .LVU209
 1079 0030 4460     		str	r4, [r0, #4]
 311:Core/Src/main.c ****   htim1.Init.Period = 1023;
 1080              		.loc 1 311 3 is_stmt 1 view .LVU210
 311:Core/Src/main.c ****   htim1.Init.Period = 1023;
ARM GAS  /tmp/ccRpxq1X.s 			page 33


 1081              		.loc 1 311 26 is_stmt 0 view .LVU211
 1082 0032 8460     		str	r4, [r0, #8]
 312:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1083              		.loc 1 312 3 is_stmt 1 view .LVU212
 312:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1084              		.loc 1 312 21 is_stmt 0 view .LVU213
 1085 0034 40F2FF33 		movw	r3, #1023
 1086 0038 C360     		str	r3, [r0, #12]
 313:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1087              		.loc 1 313 3 is_stmt 1 view .LVU214
 313:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1088              		.loc 1 313 28 is_stmt 0 view .LVU215
 1089 003a 0461     		str	r4, [r0, #16]
 314:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1090              		.loc 1 314 3 is_stmt 1 view .LVU216
 314:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1091              		.loc 1 314 32 is_stmt 0 view .LVU217
 1092 003c 4461     		str	r4, [r0, #20]
 315:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1093              		.loc 1 315 3 is_stmt 1 view .LVU218
 315:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1094              		.loc 1 315 32 is_stmt 0 view .LVU219
 1095 003e 8461     		str	r4, [r0, #24]
 316:Core/Src/main.c ****   {
 1096              		.loc 1 316 3 is_stmt 1 view .LVU220
 316:Core/Src/main.c ****   {
 1097              		.loc 1 316 7 is_stmt 0 view .LVU221
 1098 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1099              	.LVL104:
 316:Core/Src/main.c ****   {
 1100              		.loc 1 316 6 view .LVU222
 1101 0044 0028     		cmp	r0, #0
 1102 0046 37D1     		bne	.L52
 320:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1103              		.loc 1 320 3 is_stmt 1 view .LVU223
 320:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1104              		.loc 1 320 34 is_stmt 0 view .LVU224
 1105 0048 4FF48053 		mov	r3, #4096
 1106 004c 1293     		str	r3, [sp, #72]
 321:Core/Src/main.c ****   {
 1107              		.loc 1 321 3 is_stmt 1 view .LVU225
 321:Core/Src/main.c ****   {
 1108              		.loc 1 321 7 is_stmt 0 view .LVU226
 1109 004e 12A9     		add	r1, sp, #72
 1110 0050 1F48     		ldr	r0, .L58
 1111 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1112              	.LVL105:
 321:Core/Src/main.c ****   {
 1113              		.loc 1 321 6 view .LVU227
 1114 0056 0028     		cmp	r0, #0
 1115 0058 30D1     		bne	.L53
 325:Core/Src/main.c ****   {
 1116              		.loc 1 325 3 is_stmt 1 view .LVU228
 325:Core/Src/main.c ****   {
 1117              		.loc 1 325 7 is_stmt 0 view .LVU229
 1118 005a 1D48     		ldr	r0, .L58
 1119 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
ARM GAS  /tmp/ccRpxq1X.s 			page 34


 1120              	.LVL106:
 325:Core/Src/main.c ****   {
 1121              		.loc 1 325 6 view .LVU230
 1122 0060 0028     		cmp	r0, #0
 1123 0062 2DD1     		bne	.L54
 329:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1124              		.loc 1 329 3 is_stmt 1 view .LVU231
 329:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1125              		.loc 1 329 37 is_stmt 0 view .LVU232
 1126 0064 0023     		movs	r3, #0
 1127 0066 1093     		str	r3, [sp, #64]
 330:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1128              		.loc 1 330 3 is_stmt 1 view .LVU233
 330:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1129              		.loc 1 330 33 is_stmt 0 view .LVU234
 1130 0068 1193     		str	r3, [sp, #68]
 331:Core/Src/main.c ****   {
 1131              		.loc 1 331 3 is_stmt 1 view .LVU235
 331:Core/Src/main.c ****   {
 1132              		.loc 1 331 7 is_stmt 0 view .LVU236
 1133 006a 10A9     		add	r1, sp, #64
 1134 006c 1848     		ldr	r0, .L58
 1135 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1136              	.LVL107:
 331:Core/Src/main.c ****   {
 1137              		.loc 1 331 6 view .LVU237
 1138 0072 38BB     		cbnz	r0, .L55
 335:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1139              		.loc 1 335 3 is_stmt 1 view .LVU238
 335:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1140              		.loc 1 335 20 is_stmt 0 view .LVU239
 1141 0074 6023     		movs	r3, #96
 1142 0076 0993     		str	r3, [sp, #36]
 336:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1143              		.loc 1 336 3 is_stmt 1 view .LVU240
 336:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1144              		.loc 1 336 19 is_stmt 0 view .LVU241
 1145 0078 0022     		movs	r2, #0
 1146 007a 0A92     		str	r2, [sp, #40]
 337:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1147              		.loc 1 337 3 is_stmt 1 view .LVU242
 337:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1148              		.loc 1 337 24 is_stmt 0 view .LVU243
 1149 007c 0B92     		str	r2, [sp, #44]
 338:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1150              		.loc 1 338 3 is_stmt 1 view .LVU244
 338:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1151              		.loc 1 338 25 is_stmt 0 view .LVU245
 1152 007e 0C92     		str	r2, [sp, #48]
 339:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1153              		.loc 1 339 3 is_stmt 1 view .LVU246
 339:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1154              		.loc 1 339 24 is_stmt 0 view .LVU247
 1155 0080 0D92     		str	r2, [sp, #52]
 340:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1156              		.loc 1 340 3 is_stmt 1 view .LVU248
 340:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
ARM GAS  /tmp/ccRpxq1X.s 			page 35


 1157              		.loc 1 340 25 is_stmt 0 view .LVU249
 1158 0082 0E92     		str	r2, [sp, #56]
 341:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1159              		.loc 1 341 3 is_stmt 1 view .LVU250
 341:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1160              		.loc 1 341 26 is_stmt 0 view .LVU251
 1161 0084 0F92     		str	r2, [sp, #60]
 342:Core/Src/main.c ****   {
 1162              		.loc 1 342 3 is_stmt 1 view .LVU252
 342:Core/Src/main.c ****   {
 1163              		.loc 1 342 7 is_stmt 0 view .LVU253
 1164 0086 09A9     		add	r1, sp, #36
 1165 0088 1148     		ldr	r0, .L58
 1166 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1167              	.LVL108:
 342:Core/Src/main.c ****   {
 1168              		.loc 1 342 6 view .LVU254
 1169 008e D8B9     		cbnz	r0, .L56
 346:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1170              		.loc 1 346 3 is_stmt 1 view .LVU255
 346:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1171              		.loc 1 346 40 is_stmt 0 view .LVU256
 1172 0090 0023     		movs	r3, #0
 1173 0092 0193     		str	r3, [sp, #4]
 347:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1174              		.loc 1 347 3 is_stmt 1 view .LVU257
 347:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1175              		.loc 1 347 41 is_stmt 0 view .LVU258
 1176 0094 0293     		str	r3, [sp, #8]
 348:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1177              		.loc 1 348 3 is_stmt 1 view .LVU259
 348:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1178              		.loc 1 348 34 is_stmt 0 view .LVU260
 1179 0096 0393     		str	r3, [sp, #12]
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1180              		.loc 1 349 3 is_stmt 1 view .LVU261
 349:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1181              		.loc 1 349 33 is_stmt 0 view .LVU262
 1182 0098 0493     		str	r3, [sp, #16]
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1183              		.loc 1 350 3 is_stmt 1 view .LVU263
 350:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1184              		.loc 1 350 35 is_stmt 0 view .LVU264
 1185 009a 0593     		str	r3, [sp, #20]
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1186              		.loc 1 351 3 is_stmt 1 view .LVU265
 351:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1187              		.loc 1 351 38 is_stmt 0 view .LVU266
 1188 009c 4FF40052 		mov	r2, #8192
 1189 00a0 0692     		str	r2, [sp, #24]
 352:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1190              		.loc 1 352 3 is_stmt 1 view .LVU267
 352:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1191              		.loc 1 352 40 is_stmt 0 view .LVU268
 1192 00a2 0893     		str	r3, [sp, #32]
 353:Core/Src/main.c ****   {
 1193              		.loc 1 353 3 is_stmt 1 view .LVU269
ARM GAS  /tmp/ccRpxq1X.s 			page 36


 353:Core/Src/main.c ****   {
 1194              		.loc 1 353 7 is_stmt 0 view .LVU270
 1195 00a4 01A9     		add	r1, sp, #4
 1196 00a6 0A48     		ldr	r0, .L58
 1197 00a8 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1198              	.LVL109:
 353:Core/Src/main.c ****   {
 1199              		.loc 1 353 6 view .LVU271
 1200 00ac 70B9     		cbnz	r0, .L57
 360:Core/Src/main.c **** 
 1201              		.loc 1 360 3 is_stmt 1 view .LVU272
 1202 00ae 0848     		ldr	r0, .L58
 1203 00b0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1204              	.LVL110:
 362:Core/Src/main.c **** 
 1205              		.loc 1 362 1 is_stmt 0 view .LVU273
 1206 00b4 16B0     		add	sp, sp, #88
 1207              	.LCFI11:
 1208              		.cfi_remember_state
 1209              		.cfi_def_cfa_offset 8
 1210              		@ sp needed
 1211 00b6 10BD     		pop	{r4, pc}
 1212              	.L52:
 1213              	.LCFI12:
 1214              		.cfi_restore_state
 318:Core/Src/main.c ****   }
 1215              		.loc 1 318 5 is_stmt 1 view .LVU274
 1216 00b8 FFF7FEFF 		bl	Error_Handler
 1217              	.LVL111:
 1218              	.L53:
 323:Core/Src/main.c ****   }
 1219              		.loc 1 323 5 view .LVU275
 1220 00bc FFF7FEFF 		bl	Error_Handler
 1221              	.LVL112:
 1222              	.L54:
 327:Core/Src/main.c ****   }
 1223              		.loc 1 327 5 view .LVU276
 1224 00c0 FFF7FEFF 		bl	Error_Handler
 1225              	.LVL113:
 1226              	.L55:
 333:Core/Src/main.c ****   }
 1227              		.loc 1 333 5 view .LVU277
 1228 00c4 FFF7FEFF 		bl	Error_Handler
 1229              	.LVL114:
 1230              	.L56:
 344:Core/Src/main.c ****   }
 1231              		.loc 1 344 5 view .LVU278
 1232 00c8 FFF7FEFF 		bl	Error_Handler
 1233              	.LVL115:
 1234              	.L57:
 355:Core/Src/main.c ****   }
 1235              		.loc 1 355 5 view .LVU279
 1236 00cc FFF7FEFF 		bl	Error_Handler
 1237              	.LVL116:
 1238              	.L59:
 1239              		.align	2
 1240              	.L58:
ARM GAS  /tmp/ccRpxq1X.s 			page 37


 1241 00d0 00000000 		.word	htim1
 1242 00d4 002C0140 		.word	1073818624
 1243              		.cfi_endproc
 1244              	.LFE72:
 1246              		.section	.text.SystemClock_Config,"ax",%progbits
 1247              		.align	1
 1248              		.global	SystemClock_Config
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1253              	SystemClock_Config:
 1254              	.LFB71:
 255:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1255              		.loc 1 255 1 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 64
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259 0000 00B5     		push	{lr}
 1260              	.LCFI13:
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 14, -4
 1263 0002 91B0     		sub	sp, sp, #68
 1264              	.LCFI14:
 1265              		.cfi_def_cfa_offset 72
 256:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1266              		.loc 1 256 3 view .LVU281
 256:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1267              		.loc 1 256 22 is_stmt 0 view .LVU282
 1268 0004 2822     		movs	r2, #40
 1269 0006 0021     		movs	r1, #0
 1270 0008 06A8     		add	r0, sp, #24
 1271 000a FFF7FEFF 		bl	memset
 1272              	.LVL117:
 257:Core/Src/main.c **** 
 1273              		.loc 1 257 3 is_stmt 1 view .LVU283
 257:Core/Src/main.c **** 
 1274              		.loc 1 257 22 is_stmt 0 view .LVU284
 1275 000e 0023     		movs	r3, #0
 1276 0010 0193     		str	r3, [sp, #4]
 1277 0012 0293     		str	r3, [sp, #8]
 1278 0014 0393     		str	r3, [sp, #12]
 1279 0016 0493     		str	r3, [sp, #16]
 1280 0018 0593     		str	r3, [sp, #20]
 262:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1281              		.loc 1 262 3 is_stmt 1 view .LVU285
 262:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1282              		.loc 1 262 36 is_stmt 0 view .LVU286
 1283 001a 0122     		movs	r2, #1
 1284 001c 0692     		str	r2, [sp, #24]
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1285              		.loc 1 263 3 is_stmt 1 view .LVU287
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1286              		.loc 1 263 30 is_stmt 0 view .LVU288
 1287 001e 4FF48033 		mov	r3, #65536
 1288 0022 0793     		str	r3, [sp, #28]
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1289              		.loc 1 264 3 is_stmt 1 view .LVU289
ARM GAS  /tmp/ccRpxq1X.s 			page 38


 265:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1290              		.loc 1 265 3 view .LVU290
 265:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1291              		.loc 1 265 30 is_stmt 0 view .LVU291
 1292 0024 0A92     		str	r2, [sp, #40]
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1293              		.loc 1 266 3 is_stmt 1 view .LVU292
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1294              		.loc 1 266 34 is_stmt 0 view .LVU293
 1295 0026 0222     		movs	r2, #2
 1296 0028 0D92     		str	r2, [sp, #52]
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1297              		.loc 1 267 3 is_stmt 1 view .LVU294
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1298              		.loc 1 267 35 is_stmt 0 view .LVU295
 1299 002a 0E93     		str	r3, [sp, #56]
 268:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1300              		.loc 1 268 3 is_stmt 1 view .LVU296
 268:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1301              		.loc 1 268 32 is_stmt 0 view .LVU297
 1302 002c 4FF4E013 		mov	r3, #1835008
 1303 0030 0F93     		str	r3, [sp, #60]
 269:Core/Src/main.c ****   {
 1304              		.loc 1 269 3 is_stmt 1 view .LVU298
 269:Core/Src/main.c ****   {
 1305              		.loc 1 269 7 is_stmt 0 view .LVU299
 1306 0032 06A8     		add	r0, sp, #24
 1307 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1308              	.LVL118:
 269:Core/Src/main.c ****   {
 1309              		.loc 1 269 6 view .LVU300
 1310 0038 80B9     		cbnz	r0, .L64
 276:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1311              		.loc 1 276 3 is_stmt 1 view .LVU301
 276:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1312              		.loc 1 276 31 is_stmt 0 view .LVU302
 1313 003a 0F23     		movs	r3, #15
 1314 003c 0193     		str	r3, [sp, #4]
 278:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1315              		.loc 1 278 3 is_stmt 1 view .LVU303
 278:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1316              		.loc 1 278 34 is_stmt 0 view .LVU304
 1317 003e 0221     		movs	r1, #2
 1318 0040 0291     		str	r1, [sp, #8]
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1319              		.loc 1 279 3 is_stmt 1 view .LVU305
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1320              		.loc 1 279 35 is_stmt 0 view .LVU306
 1321 0042 0023     		movs	r3, #0
 1322 0044 0393     		str	r3, [sp, #12]
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1323              		.loc 1 280 3 is_stmt 1 view .LVU307
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1324              		.loc 1 280 36 is_stmt 0 view .LVU308
 1325 0046 4FF48062 		mov	r2, #1024
 1326 004a 0492     		str	r2, [sp, #16]
 281:Core/Src/main.c **** 
ARM GAS  /tmp/ccRpxq1X.s 			page 39


 1327              		.loc 1 281 3 is_stmt 1 view .LVU309
 281:Core/Src/main.c **** 
 1328              		.loc 1 281 36 is_stmt 0 view .LVU310
 1329 004c 0593     		str	r3, [sp, #20]
 283:Core/Src/main.c ****   {
 1330              		.loc 1 283 3 is_stmt 1 view .LVU311
 283:Core/Src/main.c ****   {
 1331              		.loc 1 283 7 is_stmt 0 view .LVU312
 1332 004e 01A8     		add	r0, sp, #4
 1333 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1334              	.LVL119:
 283:Core/Src/main.c ****   {
 1335              		.loc 1 283 6 view .LVU313
 1336 0054 20B9     		cbnz	r0, .L65
 287:Core/Src/main.c **** 
 1337              		.loc 1 287 1 view .LVU314
 1338 0056 11B0     		add	sp, sp, #68
 1339              	.LCFI15:
 1340              		.cfi_remember_state
 1341              		.cfi_def_cfa_offset 4
 1342              		@ sp needed
 1343 0058 5DF804FB 		ldr	pc, [sp], #4
 1344              	.L64:
 1345              	.LCFI16:
 1346              		.cfi_restore_state
 271:Core/Src/main.c ****   }
 1347              		.loc 1 271 5 is_stmt 1 view .LVU315
 1348 005c FFF7FEFF 		bl	Error_Handler
 1349              	.LVL120:
 1350              	.L65:
 285:Core/Src/main.c ****   }
 1351              		.loc 1 285 5 view .LVU316
 1352 0060 FFF7FEFF 		bl	Error_Handler
 1353              	.LVL121:
 1354              		.cfi_endproc
 1355              	.LFE71:
 1357              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1358              		.align	2
 1359              	.LC0:
 1360 0000 256400   		.ascii	"%d\000"
 1361              		.section	.text.main,"ax",%progbits
 1362              		.align	1
 1363              		.global	main
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1368              	main:
 1369              	.LFB70:
 203:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1370              		.loc 1 203 1 view -0
 1371              		.cfi_startproc
 1372              		@ Volatile: function does not return.
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375 0000 08B5     		push	{r3, lr}
 1376              	.LCFI17:
 1377              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccRpxq1X.s 			page 40


 1378              		.cfi_offset 3, -8
 1379              		.cfi_offset 14, -4
 211:Core/Src/main.c **** 
 1380              		.loc 1 211 3 view .LVU318
 1381 0002 FFF7FEFF 		bl	HAL_Init
 1382              	.LVL122:
 218:Core/Src/main.c **** 
 1383              		.loc 1 218 3 view .LVU319
 1384 0006 FFF7FEFF 		bl	SystemClock_Config
 1385              	.LVL123:
 225:Core/Src/main.c ****   MX_DMA_Init();
 1386              		.loc 1 225 3 view .LVU320
 1387 000a FFF7FEFF 		bl	MX_GPIO_Init
 1388              	.LVL124:
 226:Core/Src/main.c ****   MX_USART1_UART_Init();
 1389              		.loc 1 226 3 view .LVU321
 1390 000e FFF7FEFF 		bl	MX_DMA_Init
 1391              	.LVL125:
 227:Core/Src/main.c ****   MX_TIM1_Init();
 1392              		.loc 1 227 3 view .LVU322
 1393 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1394              	.LVL126:
 228:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1395              		.loc 1 228 3 view .LVU323
 1396 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1397              	.LVL127:
 231:Core/Src/main.c **** 
 1398              		.loc 1 231 4 view .LVU324
 1399 001a 0021     		movs	r1, #0
 1400 001c 0B48     		ldr	r0, .L69
 1401 001e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1402              	.LVL128:
 1403              	.L67:
 237:Core/Src/main.c ****   {
 1404              		.loc 1 237 3 discriminator 1 view .LVU325
 240:Core/Src/main.c **** 	dprintf(receive, "%d", atoi(&receive));
 1405              		.loc 1 240 2 discriminator 1 view .LVU326
 1406 0022 0B4C     		ldr	r4, .L69+4
 1407 0024 6423     		movs	r3, #100
 1408 0026 0122     		movs	r2, #1
 1409 0028 2146     		mov	r1, r4
 1410 002a 0A48     		ldr	r0, .L69+8
 1411 002c FFF7FEFF 		bl	HAL_UART_Receive
 1412              	.LVL129:
 241:Core/Src/main.c **** 	seg(receive - '0');
 1413              		.loc 1 241 2 discriminator 1 view .LVU327
 1414 0030 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 1415 0032 2046     		mov	r0, r4
 1416 0034 FFF7FEFF 		bl	atoi
 1417              	.LVL130:
 1418 0038 0246     		mov	r2, r0
 1419 003a 0749     		ldr	r1, .L69+12
 1420 003c 2846     		mov	r0, r5
 1421 003e FFF7FEFF 		bl	dprintf
 1422              	.LVL131:
 242:Core/Src/main.c **** 	/* USER CODE BEGIN 3 */
 1423              		.loc 1 242 2 discriminator 1 view .LVU328
ARM GAS  /tmp/ccRpxq1X.s 			page 41


 1424 0042 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1425 0044 3038     		subs	r0, r0, #48
 1426 0046 FFF7FEFF 		bl	seg
 1427              	.LVL132:
 237:Core/Src/main.c ****   {
 1428              		.loc 1 237 9 discriminator 1 view .LVU329
 1429 004a EAE7     		b	.L67
 1430              	.L70:
 1431              		.align	2
 1432              	.L69:
 1433 004c 00000000 		.word	htim1
 1434 0050 00000000 		.word	receive
 1435 0054 00000000 		.word	huart1
 1436 0058 00000000 		.word	.LC0
 1437              		.cfi_endproc
 1438              	.LFE70:
 1440              		.global	huart1
 1441              		.section	.bss.huart1,"aw",%nobits
 1442              		.align	2
 1445              	huart1:
 1446 0000 00000000 		.space	68
 1446      00000000 
 1446      00000000 
 1446      00000000 
 1446      00000000 
 1447              		.global	hdma_tim1_ch1
 1448              		.section	.bss.hdma_tim1_ch1,"aw",%nobits
 1449              		.align	2
 1452              	hdma_tim1_ch1:
 1453 0000 00000000 		.space	68
 1453      00000000 
 1453      00000000 
 1453      00000000 
 1453      00000000 
 1454              		.global	htim1
 1455              		.section	.bss.htim1,"aw",%nobits
 1456              		.align	2
 1459              	htim1:
 1460 0000 00000000 		.space	72
 1460      00000000 
 1460      00000000 
 1460      00000000 
 1460      00000000 
 1461              		.global	receive
 1462              		.section	.bss.receive,"aw",%nobits
 1465              	receive:
 1466 0000 00       		.space	1
 1467              		.text
 1468              	.Letext0:
 1469              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1470              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1471              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1472              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1473              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1474              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1475              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1476              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  /tmp/ccRpxq1X.s 			page 42


 1477              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1478              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1479              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1480              		.file 14 "Core/Inc/main.h"
 1481              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1482              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1483              		.file 17 "/usr/arm-none-eabi/include/stdio.h"
 1484              		.file 18 "/usr/arm-none-eabi/include/stdlib.h"
 1485              		.file 19 "<built-in>"
ARM GAS  /tmp/ccRpxq1X.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccRpxq1X.s:19     .text.reset:0000000000000000 $t
     /tmp/ccRpxq1X.s:24     .text.reset:0000000000000000 reset
     /tmp/ccRpxq1X.s:101    .text.reset:0000000000000068 $d
     /tmp/ccRpxq1X.s:1465   .bss.receive:0000000000000000 receive
     /tmp/ccRpxq1X.s:1459   .bss.htim1:0000000000000000 htim1
     /tmp/ccRpxq1X.s:109    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccRpxq1X.s:114    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccRpxq1X.s:246    .text.MX_GPIO_Init:0000000000000094 $d
     /tmp/ccRpxq1X.s:253    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccRpxq1X.s:258    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccRpxq1X.s:306    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccRpxq1X.s:311    .text.seg:0000000000000000 $t
     /tmp/ccRpxq1X.s:316    .text.seg:0000000000000000 seg
     /tmp/ccRpxq1X.s:338    .text.seg:0000000000000010 $d
     /tmp/ccRpxq1X.s:407    .text.seg:000000000000009a $t
     /tmp/ccRpxq1X.s:915    .text.seg:00000000000003ac $d
     /tmp/ccRpxq1X.s:922    .text.Error_Handler:0000000000000000 $t
     /tmp/ccRpxq1X.s:928    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccRpxq1X.s:960    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccRpxq1X.s:965    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccRpxq1X.s:1020   .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccRpxq1X.s:1445   .bss.huart1:0000000000000000 huart1
     /tmp/ccRpxq1X.s:1026   .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccRpxq1X.s:1031   .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccRpxq1X.s:1241   .text.MX_TIM1_Init:00000000000000d0 $d
     /tmp/ccRpxq1X.s:1247   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccRpxq1X.s:1253   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccRpxq1X.s:1358   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccRpxq1X.s:1362   .text.main:0000000000000000 $t
     /tmp/ccRpxq1X.s:1368   .text.main:0000000000000000 main
     /tmp/ccRpxq1X.s:1433   .text.main:000000000000004c $d
     /tmp/ccRpxq1X.s:1442   .bss.huart1:0000000000000000 $d
     /tmp/ccRpxq1X.s:1452   .bss.hdma_tim1_ch1:0000000000000000 hdma_tim1_ch1
     /tmp/ccRpxq1X.s:1449   .bss.hdma_tim1_ch1:0000000000000000 $d
     /tmp/ccRpxq1X.s:1456   .bss.htim1:0000000000000000 $d
     /tmp/ccRpxq1X.s:1466   .bss.receive:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ARM GAS  /tmp/ccRpxq1X.s 			page 44


HAL_TIM_PWM_Start
HAL_UART_Receive
atoi
dprintf
