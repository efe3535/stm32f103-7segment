ARM GAS  /tmp/cc3HNvEk.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.reset,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	reset:
  25              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stdio.h"
  22:Core/Src/main.c **** #include "stdlib.h"
  23:Core/Src/main.c **** uint8_t receive;
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/cc3HNvEk.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim1_ch1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_DMA_Init(void);
  58:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  59:Core/Src/main.c **** static void MX_TIM1_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** static void reset() {
  26              		.loc 1 66 21 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 38B5     		push	{r3, r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 3, -16
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  67:Core/Src/main.c **** 	
  68:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_RESET);
  37              		.loc 1 68 2 view .LVU1
  38 0002 164D     		ldr	r5, .L3
  39 0004 0022     		movs	r2, #0
  40 0006 4FF48071 		mov	r1, #256
  41 000a 2846     		mov	r0, r5
  42 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  43              	.LVL0:
  69:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_RESET);
  44              		.loc 1 69 2 view .LVU2
  45 0010 0022     		movs	r2, #0
  46 0012 4021     		movs	r1, #64
ARM GAS  /tmp/cc3HNvEk.s 			page 3


  47 0014 2846     		mov	r0, r5
  48 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  49              	.LVL1:
  70:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_RESET);
  50              		.loc 1 70 2 view .LVU3
  51 001a 114C     		ldr	r4, .L3+4
  52 001c 0022     		movs	r2, #0
  53 001e 1021     		movs	r1, #16
  54 0020 2046     		mov	r0, r4
  55 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL2:
  71:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_RESET);
  57              		.loc 1 71 2 view .LVU4
  58 0026 0022     		movs	r2, #0
  59 0028 0421     		movs	r1, #4
  60 002a 2046     		mov	r0, r4
  61 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
  62              	.LVL3:
  72:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_RESET);
  63              		.loc 1 72 2 view .LVU5
  64 0030 0022     		movs	r2, #0
  65 0032 0221     		movs	r1, #2
  66 0034 2046     		mov	r0, r4
  67 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL4:
  73:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_RESET);
  69              		.loc 1 73 2 view .LVU6
  70 003a 0022     		movs	r2, #0
  71 003c 4FF48061 		mov	r1, #1024
  72 0040 2846     		mov	r0, r5
  73 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  74              	.LVL5:
  74:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_RESET);
  75              		.loc 1 74 2 view .LVU7
  76 0046 0022     		movs	r2, #0
  77 0048 0221     		movs	r1, #2
  78 004a 2846     		mov	r0, r5
  79 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  80              	.LVL6:
  75:Core/Src/main.c **** 	HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_RESET);
  81              		.loc 1 75 2 view .LVU8
  82 0050 0022     		movs	r2, #0
  83 0052 2021     		movs	r1, #32
  84 0054 2046     		mov	r0, r4
  85 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL7:
  76:Core/Src/main.c **** }
  87              		.loc 1 76 1 is_stmt 0 view .LVU9
  88 005a 38BD     		pop	{r3, r4, r5, pc}
  89              	.L4:
  90              		.align	2
  91              	.L3:
  92 005c 000C0140 		.word	1073810432
  93 0060 00080140 		.word	1073809408
  94              		.cfi_endproc
  95              	.LFE68:
  97              		.section	.text.seg,"ax",%progbits
ARM GAS  /tmp/cc3HNvEk.s 			page 4


  98              		.align	1
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	seg:
 104              	.LVL8:
 105              	.LFB69:
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** static void seg(int pin) {
 106              		.loc 1 78 26 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		.loc 1 78 26 is_stmt 0 view .LVU11
 111 0000 38B5     		push	{r3, r4, r5, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 3, -16
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 	switch(pin) {
 118              		.loc 1 79 2 is_stmt 1 view .LVU12
 119 0002 0230     		adds	r0, r0, #2
 120              	.LVL9:
 121              		.loc 1 79 2 is_stmt 0 view .LVU13
 122 0004 0B28     		cmp	r0, #11
 123 0006 19D8     		bhi	.L5
 124 0008 DFE810F0 		tbh	[pc, r0, lsl #1]
 125              	.L8:
 126 000c 1A01     		.2byte	(.L17-.L8)/2
 127 000e 1800     		.2byte	(.L5-.L8)/2
 128 0010 1800     		.2byte	(.L5-.L8)/2
 129 0012 0C00     		.2byte	(.L16-.L8)/2
 130 0014 1900     		.2byte	(.L15-.L8)/2
 131 0016 3900     		.2byte	(.L14-.L8)/2
 132 0018 5900     		.2byte	(.L13-.L8)/2
 133 001a 7200     		.2byte	(.L12-.L8)/2
 134 001c 9200     		.2byte	(.L11-.L8)/2
 135 001e B700     		.2byte	(.L10-.L8)/2
 136 0020 CB00     		.2byte	(.L9-.L8)/2
 137 0022 F500     		.2byte	(.L7-.L8)/2
 138              		.p2align 1
 139              	.L16:
  80:Core/Src/main.c **** 		case 1:
  81:Core/Src/main.c **** 			reset();
 140              		.loc 1 81 4 is_stmt 1 view .LVU14
 141 0024 FFF7FEFF 		bl	reset
 142              	.LVL10:
  82:Core/Src/main.c **** //			HAL_UART_Transmit(&huart1, (uint8_t)'q', 1,100);
  83:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 143              		.loc 1 83 4 view .LVU15
 144 0028 0122     		movs	r2, #1
 145 002a 4021     		movs	r1, #64
 146 002c 8848     		ldr	r0, .L20
 147 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL11:
ARM GAS  /tmp/cc3HNvEk.s 			page 5


  84:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 149              		.loc 1 84 4 view .LVU16
 150 0032 0122     		movs	r2, #1
 151 0034 1021     		movs	r1, #16
 152 0036 8748     		ldr	r0, .L20+4
 153 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL12:
  85:Core/Src/main.c **** 			break;
 155              		.loc 1 85 4 view .LVU17
 156              	.L5:
  86:Core/Src/main.c **** 		case 2:
  87:Core/Src/main.c **** 			reset();
  88:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
  89:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  90:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
  91:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
  92:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 			break;
  95:Core/Src/main.c **** 		case 3:
  96:Core/Src/main.c **** 			reset();		
  97:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
  98:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
  99:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 101:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 102:Core/Src/main.c **** 			break;
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** 		case 4:
 105:Core/Src/main.c **** 			reset();
 106:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 107:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 108:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 109:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 110:Core/Src/main.c **** 			break;
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 		case 5:
 113:Core/Src/main.c **** 			reset();
 114:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 115:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 116:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 117:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 118:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 			break;
 121:Core/Src/main.c **** 		case 6:
 122:Core/Src/main.c **** 			reset();
 123:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 124:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 125:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 126:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 127:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 128:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 129:Core/Src/main.c **** 			break;
 130:Core/Src/main.c **** 		case 7:
 131:Core/Src/main.c **** 			reset();
 132:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/cc3HNvEk.s 			page 6


 133:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 134:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 135:Core/Src/main.c **** 			break;
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 		case 8:
 138:Core/Src/main.c **** 			reset();
 139:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 141:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 142:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 143:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 144:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 145:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 146:Core/Src/main.c **** 			break;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 		case 9:
 149:Core/Src/main.c **** 			reset();	
 150:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 151:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 152:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 153:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 154:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 155:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 156:Core/Src/main.c **** 			break;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 		case '.' - '0':
 159:Core/Src/main.c **** 			reset();
 160:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_SET);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 		default:
 163:Core/Src/main.c **** 			break;
 164:Core/Src/main.c **** 	}
 165:Core/Src/main.c **** }
 157              		.loc 1 165 1 is_stmt 0 view .LVU18
 158 003c 38BD     		pop	{r3, r4, r5, pc}
 159              	.L15:
  87:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 160              		.loc 1 87 4 is_stmt 1 view .LVU19
 161 003e FFF7FEFF 		bl	reset
 162              	.LVL13:
  88:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 163              		.loc 1 88 4 view .LVU20
 164 0042 834C     		ldr	r4, .L20
 165 0044 0122     		movs	r2, #1
 166 0046 4FF48071 		mov	r1, #256
 167 004a 2046     		mov	r0, r4
 168 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL14:
  89:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 170              		.loc 1 89 4 view .LVU21
 171 0050 0122     		movs	r2, #1
 172 0052 4021     		movs	r1, #64
 173 0054 2046     		mov	r0, r4
 174 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL15:
  90:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 176              		.loc 1 90 4 view .LVU22
ARM GAS  /tmp/cc3HNvEk.s 			page 7


 177 005a 0122     		movs	r2, #1
 178 005c 0221     		movs	r1, #2
 179 005e 2046     		mov	r0, r4
 180 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 181              	.LVL16:
  91:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 182              		.loc 1 91 4 view .LVU23
 183 0064 A4F58064 		sub	r4, r4, #1024
 184 0068 0122     		movs	r2, #1
 185 006a 0221     		movs	r1, #2
 186 006c 2046     		mov	r0, r4
 187 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL17:
  92:Core/Src/main.c **** 
 189              		.loc 1 92 4 view .LVU24
 190 0072 0122     		movs	r2, #1
 191 0074 0421     		movs	r1, #4
 192 0076 2046     		mov	r0, r4
 193 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 194              	.LVL18:
  94:Core/Src/main.c **** 		case 3:
 195              		.loc 1 94 4 view .LVU25
 196 007c DEE7     		b	.L5
 197              	.L14:
  96:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 198              		.loc 1 96 4 view .LVU26
 199 007e FFF7FEFF 		bl	reset
 200              	.LVL19:
  97:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 201              		.loc 1 97 4 view .LVU27
 202 0082 734C     		ldr	r4, .L20
 203 0084 0122     		movs	r2, #1
 204 0086 4FF48071 		mov	r1, #256
 205 008a 2046     		mov	r0, r4
 206 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 207              	.LVL20:
  98:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 208              		.loc 1 98 4 view .LVU28
 209 0090 0122     		movs	r2, #1
 210 0092 4021     		movs	r1, #64
 211 0094 2046     		mov	r0, r4
 212 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL21:
  99:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 214              		.loc 1 99 4 view .LVU29
 215 009a 0122     		movs	r2, #1
 216 009c 0221     		movs	r1, #2
 217 009e 2046     		mov	r0, r4
 218 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 219              	.LVL22:
 100:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 220              		.loc 1 100 4 view .LVU30
 221 00a4 A4F58064 		sub	r4, r4, #1024
 222 00a8 0122     		movs	r2, #1
 223 00aa 1021     		movs	r1, #16
 224 00ac 2046     		mov	r0, r4
 225 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc3HNvEk.s 			page 8


 226              	.LVL23:
 101:Core/Src/main.c **** 			break;
 227              		.loc 1 101 4 view .LVU31
 228 00b2 0122     		movs	r2, #1
 229 00b4 0421     		movs	r1, #4
 230 00b6 2046     		mov	r0, r4
 231 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 232              	.LVL24:
 102:Core/Src/main.c **** 
 233              		.loc 1 102 4 view .LVU32
 234 00bc BEE7     		b	.L5
 235              	.L13:
 105:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 236              		.loc 1 105 4 view .LVU33
 237 00be FFF7FEFF 		bl	reset
 238              	.LVL25:
 106:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 239              		.loc 1 106 4 view .LVU34
 240 00c2 0122     		movs	r2, #1
 241 00c4 1021     		movs	r1, #16
 242 00c6 6348     		ldr	r0, .L20+4
 243 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL26:
 107:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 245              		.loc 1 107 4 view .LVU35
 246 00cc 604C     		ldr	r4, .L20
 247 00ce 0122     		movs	r2, #1
 248 00d0 4021     		movs	r1, #64
 249 00d2 2046     		mov	r0, r4
 250 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 251              	.LVL27:
 108:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 252              		.loc 1 108 4 view .LVU36
 253 00d8 0122     		movs	r2, #1
 254 00da 0221     		movs	r1, #2
 255 00dc 2046     		mov	r0, r4
 256 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 257              	.LVL28:
 109:Core/Src/main.c **** 			break;
 258              		.loc 1 109 4 view .LVU37
 259 00e2 0122     		movs	r2, #1
 260 00e4 4FF48061 		mov	r1, #1024
 261 00e8 2046     		mov	r0, r4
 262 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 263              	.LVL29:
 110:Core/Src/main.c **** 
 264              		.loc 1 110 4 view .LVU38
 265 00ee A5E7     		b	.L5
 266              	.L12:
 113:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 267              		.loc 1 113 4 view .LVU39
 268 00f0 FFF7FEFF 		bl	reset
 269              	.LVL30:
 114:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 270              		.loc 1 114 4 view .LVU40
 271 00f4 564C     		ldr	r4, .L20
 272 00f6 0122     		movs	r2, #1
ARM GAS  /tmp/cc3HNvEk.s 			page 9


 273 00f8 4FF48071 		mov	r1, #256
 274 00fc 2046     		mov	r0, r4
 275 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 276              	.LVL31:
 115:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 277              		.loc 1 115 4 view .LVU41
 278 0102 544D     		ldr	r5, .L20+4
 279 0104 0122     		movs	r2, #1
 280 0106 1021     		movs	r1, #16
 281 0108 2846     		mov	r0, r5
 282 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 283              	.LVL32:
 116:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 284              		.loc 1 116 4 view .LVU42
 285 010e 0122     		movs	r2, #1
 286 0110 0221     		movs	r1, #2
 287 0112 2046     		mov	r0, r4
 288 0114 FFF7FEFF 		bl	HAL_GPIO_WritePin
 289              	.LVL33:
 117:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 290              		.loc 1 117 4 view .LVU43
 291 0118 0122     		movs	r2, #1
 292 011a 4FF48061 		mov	r1, #1024
 293 011e 2046     		mov	r0, r4
 294 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 295              	.LVL34:
 118:Core/Src/main.c **** 
 296              		.loc 1 118 4 view .LVU44
 297 0124 0122     		movs	r2, #1
 298 0126 0421     		movs	r1, #4
 299 0128 2846     		mov	r0, r5
 300 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 301              	.LVL35:
 120:Core/Src/main.c **** 		case 6:
 302              		.loc 1 120 4 view .LVU45
 303 012e 85E7     		b	.L5
 304              	.L11:
 122:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 305              		.loc 1 122 4 view .LVU46
 306 0130 FFF7FEFF 		bl	reset
 307              	.LVL36:
 123:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 308              		.loc 1 123 4 view .LVU47
 309 0134 464D     		ldr	r5, .L20
 310 0136 0122     		movs	r2, #1
 311 0138 4FF48071 		mov	r1, #256
 312 013c 2846     		mov	r0, r5
 313 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
 314              	.LVL37:
 124:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 315              		.loc 1 124 4 view .LVU48
 316 0142 444C     		ldr	r4, .L20+4
 317 0144 0122     		movs	r2, #1
 318 0146 1021     		movs	r1, #16
 319 0148 2046     		mov	r0, r4
 320 014a FFF7FEFF 		bl	HAL_GPIO_WritePin
 321              	.LVL38:
ARM GAS  /tmp/cc3HNvEk.s 			page 10


 125:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 322              		.loc 1 125 4 view .LVU49
 323 014e 0122     		movs	r2, #1
 324 0150 0221     		movs	r1, #2
 325 0152 2846     		mov	r0, r5
 326 0154 FFF7FEFF 		bl	HAL_GPIO_WritePin
 327              	.LVL39:
 126:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 328              		.loc 1 126 4 view .LVU50
 329 0158 0122     		movs	r2, #1
 330 015a 4FF48061 		mov	r1, #1024
 331 015e 2846     		mov	r0, r5
 332 0160 FFF7FEFF 		bl	HAL_GPIO_WritePin
 333              	.LVL40:
 127:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 334              		.loc 1 127 4 view .LVU51
 335 0164 0122     		movs	r2, #1
 336 0166 0421     		movs	r1, #4
 337 0168 2046     		mov	r0, r4
 338 016a FFF7FEFF 		bl	HAL_GPIO_WritePin
 339              	.LVL41:
 128:Core/Src/main.c **** 			break;
 340              		.loc 1 128 4 view .LVU52
 341 016e 0122     		movs	r2, #1
 342 0170 0221     		movs	r1, #2
 343 0172 2046     		mov	r0, r4
 344 0174 FFF7FEFF 		bl	HAL_GPIO_WritePin
 345              	.LVL42:
 129:Core/Src/main.c **** 		case 7:
 346              		.loc 1 129 4 view .LVU53
 347 0178 60E7     		b	.L5
 348              	.L10:
 131:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 349              		.loc 1 131 4 view .LVU54
 350 017a FFF7FEFF 		bl	reset
 351              	.LVL43:
 132:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 352              		.loc 1 132 4 view .LVU55
 353 017e 344C     		ldr	r4, .L20
 354 0180 0122     		movs	r2, #1
 355 0182 4FF48071 		mov	r1, #256
 356 0186 2046     		mov	r0, r4
 357 0188 FFF7FEFF 		bl	HAL_GPIO_WritePin
 358              	.LVL44:
 133:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 359              		.loc 1 133 4 view .LVU56
 360 018c 0122     		movs	r2, #1
 361 018e 1021     		movs	r1, #16
 362 0190 3048     		ldr	r0, .L20+4
 363 0192 FFF7FEFF 		bl	HAL_GPIO_WritePin
 364              	.LVL45:
 134:Core/Src/main.c **** 			break;
 365              		.loc 1 134 4 view .LVU57
 366 0196 0122     		movs	r2, #1
 367 0198 4021     		movs	r1, #64
 368 019a 2046     		mov	r0, r4
 369 019c FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc3HNvEk.s 			page 11


 370              	.LVL46:
 135:Core/Src/main.c **** 
 371              		.loc 1 135 4 view .LVU58
 372 01a0 4CE7     		b	.L5
 373              	.L9:
 138:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 374              		.loc 1 138 4 view .LVU59
 375 01a2 FFF7FEFF 		bl	reset
 376              	.LVL47:
 139:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 377              		.loc 1 139 4 view .LVU60
 378 01a6 2A4C     		ldr	r4, .L20
 379 01a8 0122     		movs	r2, #1
 380 01aa 4FF48071 		mov	r1, #256
 381 01ae 2046     		mov	r0, r4
 382 01b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 383              	.LVL48:
 140:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 384              		.loc 1 140 4 view .LVU61
 385 01b4 274D     		ldr	r5, .L20+4
 386 01b6 0122     		movs	r2, #1
 387 01b8 1021     		movs	r1, #16
 388 01ba 2846     		mov	r0, r5
 389 01bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 390              	.LVL49:
 141:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 391              		.loc 1 141 4 view .LVU62
 392 01c0 0122     		movs	r2, #1
 393 01c2 0221     		movs	r1, #2
 394 01c4 2046     		mov	r0, r4
 395 01c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 396              	.LVL50:
 142:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 397              		.loc 1 142 4 view .LVU63
 398 01ca 0122     		movs	r2, #1
 399 01cc 4FF48061 		mov	r1, #1024
 400 01d0 2046     		mov	r0, r4
 401 01d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 402              	.LVL51:
 143:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_e_GPIO_Port, seg_e_Pin, GPIO_PIN_SET);
 403              		.loc 1 143 4 view .LVU64
 404 01d6 0122     		movs	r2, #1
 405 01d8 0421     		movs	r1, #4
 406 01da 2846     		mov	r0, r5
 407 01dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 408              	.LVL52:
 144:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 409              		.loc 1 144 4 view .LVU65
 410 01e0 0122     		movs	r2, #1
 411 01e2 0221     		movs	r1, #2
 412 01e4 2846     		mov	r0, r5
 413 01e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 414              	.LVL53:
 145:Core/Src/main.c **** 			break;
 415              		.loc 1 145 4 view .LVU66
 416 01ea 0122     		movs	r2, #1
 417 01ec 4021     		movs	r1, #64
ARM GAS  /tmp/cc3HNvEk.s 			page 12


 418 01ee 2046     		mov	r0, r4
 419 01f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 420              	.LVL54:
 146:Core/Src/main.c **** 
 421              		.loc 1 146 4 view .LVU67
 422 01f4 22E7     		b	.L5
 423              	.L7:
 149:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_a_GPIO_Port, seg_a_Pin, GPIO_PIN_SET);
 424              		.loc 1 149 4 view .LVU68
 425 01f6 FFF7FEFF 		bl	reset
 426              	.LVL55:
 150:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_c_GPIO_Port, seg_c_Pin, GPIO_PIN_SET);
 427              		.loc 1 150 4 view .LVU69
 428 01fa 154C     		ldr	r4, .L20
 429 01fc 0122     		movs	r2, #1
 430 01fe 4FF48071 		mov	r1, #256
 431 0202 2046     		mov	r0, r4
 432 0204 FFF7FEFF 		bl	HAL_GPIO_WritePin
 433              	.LVL56:
 151:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_g_GPIO_Port, seg_g_Pin, GPIO_PIN_SET);
 434              		.loc 1 151 4 view .LVU70
 435 0208 124D     		ldr	r5, .L20+4
 436 020a 0122     		movs	r2, #1
 437 020c 1021     		movs	r1, #16
 438 020e 2846     		mov	r0, r5
 439 0210 FFF7FEFF 		bl	HAL_GPIO_WritePin
 440              	.LVL57:
 152:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_f_GPIO_Port, seg_f_Pin, GPIO_PIN_SET);
 441              		.loc 1 152 4 view .LVU71
 442 0214 0122     		movs	r2, #1
 443 0216 0221     		movs	r1, #2
 444 0218 2046     		mov	r0, r4
 445 021a FFF7FEFF 		bl	HAL_GPIO_WritePin
 446              	.LVL58:
 153:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_d_GPIO_Port, seg_d_Pin, GPIO_PIN_SET);
 447              		.loc 1 153 4 view .LVU72
 448 021e 0122     		movs	r2, #1
 449 0220 4FF48061 		mov	r1, #1024
 450 0224 2046     		mov	r0, r4
 451 0226 FFF7FEFF 		bl	HAL_GPIO_WritePin
 452              	.LVL59:
 154:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_b_GPIO_Port, seg_b_Pin, GPIO_PIN_SET);
 453              		.loc 1 154 4 view .LVU73
 454 022a 0122     		movs	r2, #1
 455 022c 0421     		movs	r1, #4
 456 022e 2846     		mov	r0, r5
 457 0230 FFF7FEFF 		bl	HAL_GPIO_WritePin
 458              	.LVL60:
 155:Core/Src/main.c **** 			break;
 459              		.loc 1 155 4 view .LVU74
 460 0234 0122     		movs	r2, #1
 461 0236 4021     		movs	r1, #64
 462 0238 2046     		mov	r0, r4
 463 023a FFF7FEFF 		bl	HAL_GPIO_WritePin
 464              	.LVL61:
 156:Core/Src/main.c **** 
 465              		.loc 1 156 4 view .LVU75
ARM GAS  /tmp/cc3HNvEk.s 			page 13


 466 023e FDE6     		b	.L5
 467              	.L17:
 159:Core/Src/main.c **** 			HAL_GPIO_WritePin(seg_dp_GPIO_Port, seg_dp_Pin, GPIO_PIN_SET);
 468              		.loc 1 159 4 view .LVU76
 469 0240 FFF7FEFF 		bl	reset
 470              	.LVL62:
 160:Core/Src/main.c **** 
 471              		.loc 1 160 4 view .LVU77
 472 0244 0122     		movs	r2, #1
 473 0246 2021     		movs	r1, #32
 474 0248 0248     		ldr	r0, .L20+4
 475 024a FFF7FEFF 		bl	HAL_GPIO_WritePin
 476              	.LVL63:
 477              		.loc 1 165 1 is_stmt 0 view .LVU78
 478 024e F5E6     		b	.L5
 479              	.L21:
 480              		.align	2
 481              	.L20:
 482 0250 000C0140 		.word	1073810432
 483 0254 00080140 		.word	1073809408
 484              		.cfi_endproc
 485              	.LFE69:
 487              		.section	.text.MX_GPIO_Init,"ax",%progbits
 488              		.align	1
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 493              	MX_GPIO_Init:
 494              	.LFB75:
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE END 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /**
 170:Core/Src/main.c ****   * @brief  The application entry poinstm32 uart input poll to integert.
 171:Core/Src/main.c ****   * @retval int
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** int main(void)
 174:Core/Src/main.c **** {
 175:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END 1 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 182:Core/Src/main.c ****   HAL_Init();
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END Init */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* Configure the system clock */
 189:Core/Src/main.c ****   SystemClock_Config();
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/cc3HNvEk.s 			page 14


 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* Initialize all configured peripherals */
 196:Core/Src/main.c ****   MX_GPIO_Init();
 197:Core/Src/main.c ****   MX_DMA_Init();
 198:Core/Src/main.c ****   MX_USART1_UART_Init();
 199:Core/Src/main.c ****   MX_TIM1_Init();
 200:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 201:Core/Src/main.c ****   	TIM1->CCR1 = 100;
 202:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END 2 */
 205:Core/Src/main.c **** //	seg(2);
 206:Core/Src/main.c ****   /* Infinite loop */
 207:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 208:Core/Src/main.c ****   while (1)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     /* USER CODE END WHILE */
 211:Core/Src/main.c **** 	HAL_UART_Receive(&huart1, &receive, 1,100);
 212:Core/Src/main.c **** 	
 213:Core/Src/main.c **** 	seg(receive - '0');
 214:Core/Src/main.c **** 	/* USER CODE BEGIN 3 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   /* USER CODE END 3 */
 219:Core/Src/main.c **** }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief System Clock Configuration
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void SystemClock_Config(void)
 226:Core/Src/main.c **** {
 227:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 231:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 234:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 235:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 236:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 240:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 248:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/cc3HNvEk.s 			page 15


 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c **** }
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /**
 261:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 262:Core/Src/main.c ****   * @param None
 263:Core/Src/main.c ****   * @retval None
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c **** static void MX_TIM1_Init(void)
 266:Core/Src/main.c **** {
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 273:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 274:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 275:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 280:Core/Src/main.c ****   htim1.Instance = TIM1;
 281:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 282:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 283:Core/Src/main.c ****   htim1.Init.Period = 1023;
 284:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 285:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 286:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 287:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 292:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 297:Core/Src/main.c ****   {
 298:Core/Src/main.c ****     Error_Handler();
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 301:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 302:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 307:Core/Src/main.c ****   sConfigOC.Pulse = 0;
ARM GAS  /tmp/cc3HNvEk.s 			page 16


 308:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 310:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 311:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 312:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 313:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
 317:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 318:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 319:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 320:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 321:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 322:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 323:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 324:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 331:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /**
 336:Core/Src/main.c ****   * @brief USART1 Initialization Function
 337:Core/Src/main.c ****   * @param None
 338:Core/Src/main.c ****   * @retval None
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 341:Core/Src/main.c **** {
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 350:Core/Src/main.c ****   huart1.Instance = USART1;
 351:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 352:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 353:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 354:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 355:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 356:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 357:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 358:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
ARM GAS  /tmp/cc3HNvEk.s 			page 17


 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****   * Enable DMA controller clock
 370:Core/Src/main.c ****   */
 371:Core/Src/main.c **** static void MX_DMA_Init(void)
 372:Core/Src/main.c **** {
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* DMA controller clock enable */
 375:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* DMA interrupt init */
 378:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 379:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 380:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /**
 385:Core/Src/main.c ****   * @brief GPIO Initialization Function
 386:Core/Src/main.c ****   * @param None
 387:Core/Src/main.c ****   * @retval None
 388:Core/Src/main.c ****   */
 389:Core/Src/main.c **** static void MX_GPIO_Init(void)
 390:Core/Src/main.c **** {
 495              		.loc 1 390 1 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 32
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 500              	.LCFI2:
 501              		.cfi_def_cfa_offset 24
 502              		.cfi_offset 4, -24
 503              		.cfi_offset 5, -20
 504              		.cfi_offset 6, -16
 505              		.cfi_offset 7, -12
 506              		.cfi_offset 8, -8
 507              		.cfi_offset 14, -4
 508 0004 88B0     		sub	sp, sp, #32
 509              	.LCFI3:
 510              		.cfi_def_cfa_offset 56
 391:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 511              		.loc 1 391 3 view .LVU80
 512              		.loc 1 391 20 is_stmt 0 view .LVU81
 513 0006 0024     		movs	r4, #0
 514 0008 0494     		str	r4, [sp, #16]
 515 000a 0594     		str	r4, [sp, #20]
 516 000c 0694     		str	r4, [sp, #24]
 517 000e 0794     		str	r4, [sp, #28]
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 394:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 518              		.loc 1 394 3 is_stmt 1 view .LVU82
 519              	.LBB4:
 520              		.loc 1 394 3 view .LVU83
 521              		.loc 1 394 3 view .LVU84
ARM GAS  /tmp/cc3HNvEk.s 			page 18


 522 0010 204B     		ldr	r3, .L24
 523 0012 9A69     		ldr	r2, [r3, #24]
 524 0014 42F02002 		orr	r2, r2, #32
 525 0018 9A61     		str	r2, [r3, #24]
 526              		.loc 1 394 3 view .LVU85
 527 001a 9A69     		ldr	r2, [r3, #24]
 528 001c 02F02002 		and	r2, r2, #32
 529 0020 0192     		str	r2, [sp, #4]
 530              		.loc 1 394 3 view .LVU86
 531 0022 019A     		ldr	r2, [sp, #4]
 532              	.LBE4:
 533              		.loc 1 394 3 view .LVU87
 395:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 534              		.loc 1 395 3 view .LVU88
 535              	.LBB5:
 536              		.loc 1 395 3 view .LVU89
 537              		.loc 1 395 3 view .LVU90
 538 0024 9A69     		ldr	r2, [r3, #24]
 539 0026 42F00402 		orr	r2, r2, #4
 540 002a 9A61     		str	r2, [r3, #24]
 541              		.loc 1 395 3 view .LVU91
 542 002c 9A69     		ldr	r2, [r3, #24]
 543 002e 02F00402 		and	r2, r2, #4
 544 0032 0292     		str	r2, [sp, #8]
 545              		.loc 1 395 3 view .LVU92
 546 0034 029A     		ldr	r2, [sp, #8]
 547              	.LBE5:
 548              		.loc 1 395 3 view .LVU93
 396:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 549              		.loc 1 396 3 view .LVU94
 550              	.LBB6:
 551              		.loc 1 396 3 view .LVU95
 552              		.loc 1 396 3 view .LVU96
 553 0036 9A69     		ldr	r2, [r3, #24]
 554 0038 42F00802 		orr	r2, r2, #8
 555 003c 9A61     		str	r2, [r3, #24]
 556              		.loc 1 396 3 view .LVU97
 557 003e 9B69     		ldr	r3, [r3, #24]
 558 0040 03F00803 		and	r3, r3, #8
 559 0044 0393     		str	r3, [sp, #12]
 560              		.loc 1 396 3 view .LVU98
 561 0046 039B     		ldr	r3, [sp, #12]
 562              	.LBE6:
 563              		.loc 1 396 3 view .LVU99
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 399:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, seg_e_Pin|seg_d_Pin|seg_c_Pin|seg_dp_Pin, GPIO_PIN_RESET);
 564              		.loc 1 399 3 view .LVU100
 565 0048 DFF84C80 		ldr	r8, .L24+4
 566 004c 2246     		mov	r2, r4
 567 004e 3621     		movs	r1, #54
 568 0050 4046     		mov	r0, r8
 569 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 570              	.LVL64:
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 402:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, seg_g_Pin|seg_f_Pin|seg_b_Pin|seg_a_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/cc3HNvEk.s 			page 19


 571              		.loc 1 402 3 view .LVU101
 572 0056 114D     		ldr	r5, .L24+8
 573 0058 2246     		mov	r2, r4
 574 005a 40F24251 		movw	r1, #1346
 575 005e 2846     		mov	r0, r5
 576 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 577              	.LVL65:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /*Configure GPIO pins : seg_e_Pin seg_d_Pin seg_c_Pin seg_dp_Pin */
 405:Core/Src/main.c ****   GPIO_InitStruct.Pin = seg_e_Pin|seg_d_Pin|seg_c_Pin|seg_dp_Pin;
 578              		.loc 1 405 3 view .LVU102
 579              		.loc 1 405 23 is_stmt 0 view .LVU103
 580 0064 3623     		movs	r3, #54
 581 0066 0493     		str	r3, [sp, #16]
 406:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 582              		.loc 1 406 3 is_stmt 1 view .LVU104
 583              		.loc 1 406 24 is_stmt 0 view .LVU105
 584 0068 0127     		movs	r7, #1
 585 006a 0597     		str	r7, [sp, #20]
 407:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 586              		.loc 1 407 3 is_stmt 1 view .LVU106
 587              		.loc 1 407 24 is_stmt 0 view .LVU107
 588 006c 0694     		str	r4, [sp, #24]
 408:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 589              		.loc 1 408 3 is_stmt 1 view .LVU108
 590              		.loc 1 408 25 is_stmt 0 view .LVU109
 591 006e 0226     		movs	r6, #2
 592 0070 0796     		str	r6, [sp, #28]
 409:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 593              		.loc 1 409 3 is_stmt 1 view .LVU110
 594 0072 04A9     		add	r1, sp, #16
 595 0074 4046     		mov	r0, r8
 596 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 597              	.LVL66:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /*Configure GPIO pins : seg_g_Pin seg_f_Pin seg_b_Pin seg_a_Pin */
 412:Core/Src/main.c ****   GPIO_InitStruct.Pin = seg_g_Pin|seg_f_Pin|seg_b_Pin|seg_a_Pin;
 598              		.loc 1 412 3 view .LVU111
 599              		.loc 1 412 23 is_stmt 0 view .LVU112
 600 007a 40F24253 		movw	r3, #1346
 601 007e 0493     		str	r3, [sp, #16]
 413:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 602              		.loc 1 413 3 is_stmt 1 view .LVU113
 603              		.loc 1 413 24 is_stmt 0 view .LVU114
 604 0080 0597     		str	r7, [sp, #20]
 414:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 605              		.loc 1 414 3 is_stmt 1 view .LVU115
 606              		.loc 1 414 24 is_stmt 0 view .LVU116
 607 0082 0694     		str	r4, [sp, #24]
 415:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 608              		.loc 1 415 3 is_stmt 1 view .LVU117
 609              		.loc 1 415 25 is_stmt 0 view .LVU118
 610 0084 0796     		str	r6, [sp, #28]
 416:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 611              		.loc 1 416 3 is_stmt 1 view .LVU119
 612 0086 04A9     		add	r1, sp, #16
 613 0088 2846     		mov	r0, r5
ARM GAS  /tmp/cc3HNvEk.s 			page 20


 614 008a FFF7FEFF 		bl	HAL_GPIO_Init
 615              	.LVL67:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** }
 616              		.loc 1 418 1 is_stmt 0 view .LVU120
 617 008e 08B0     		add	sp, sp, #32
 618              	.LCFI4:
 619              		.cfi_def_cfa_offset 24
 620              		@ sp needed
 621 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 622              	.L25:
 623              		.align	2
 624              	.L24:
 625 0094 00100240 		.word	1073876992
 626 0098 00080140 		.word	1073809408
 627 009c 000C0140 		.word	1073810432
 628              		.cfi_endproc
 629              	.LFE75:
 631              		.section	.text.MX_DMA_Init,"ax",%progbits
 632              		.align	1
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	MX_DMA_Init:
 638              	.LFB74:
 372:Core/Src/main.c **** 
 639              		.loc 1 372 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 00B5     		push	{lr}
 644              	.LCFI5:
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 14, -4
 647 0002 83B0     		sub	sp, sp, #12
 648              	.LCFI6:
 649              		.cfi_def_cfa_offset 16
 375:Core/Src/main.c **** 
 650              		.loc 1 375 3 view .LVU122
 651              	.LBB7:
 375:Core/Src/main.c **** 
 652              		.loc 1 375 3 view .LVU123
 375:Core/Src/main.c **** 
 653              		.loc 1 375 3 view .LVU124
 654 0004 0A4B     		ldr	r3, .L28
 655 0006 5A69     		ldr	r2, [r3, #20]
 656 0008 42F00102 		orr	r2, r2, #1
 657 000c 5A61     		str	r2, [r3, #20]
 375:Core/Src/main.c **** 
 658              		.loc 1 375 3 view .LVU125
 659 000e 5B69     		ldr	r3, [r3, #20]
 660 0010 03F00103 		and	r3, r3, #1
 661 0014 0193     		str	r3, [sp, #4]
 375:Core/Src/main.c **** 
 662              		.loc 1 375 3 view .LVU126
 663 0016 019B     		ldr	r3, [sp, #4]
 664              	.LBE7:
ARM GAS  /tmp/cc3HNvEk.s 			page 21


 375:Core/Src/main.c **** 
 665              		.loc 1 375 3 view .LVU127
 379:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 666              		.loc 1 379 3 view .LVU128
 667 0018 0022     		movs	r2, #0
 668 001a 1146     		mov	r1, r2
 669 001c 0C20     		movs	r0, #12
 670 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 671              	.LVL68:
 380:Core/Src/main.c **** 
 672              		.loc 1 380 3 view .LVU129
 673 0022 0C20     		movs	r0, #12
 674 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 675              	.LVL69:
 382:Core/Src/main.c **** 
 676              		.loc 1 382 1 is_stmt 0 view .LVU130
 677 0028 03B0     		add	sp, sp, #12
 678              	.LCFI7:
 679              		.cfi_def_cfa_offset 4
 680              		@ sp needed
 681 002a 5DF804FB 		ldr	pc, [sp], #4
 682              	.L29:
 683 002e 00BF     		.align	2
 684              	.L28:
 685 0030 00100240 		.word	1073876992
 686              		.cfi_endproc
 687              	.LFE74:
 689              		.section	.text.Error_Handler,"ax",%progbits
 690              		.align	1
 691              		.global	Error_Handler
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 696              	Error_Handler:
 697              	.LFB76:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /* USER CODE END 4 */
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** /**
 425:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 426:Core/Src/main.c ****   * @retval None
 427:Core/Src/main.c ****   */
 428:Core/Src/main.c **** void Error_Handler(void)
 429:Core/Src/main.c **** {
 698              		.loc 1 429 1 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ Volatile: function does not return.
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 430:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 431:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 432:Core/Src/main.c ****   __disable_irq();
 704              		.loc 1 432 3 view .LVU132
 705              	.LBB8:
ARM GAS  /tmp/cc3HNvEk.s 			page 22


 706              	.LBI8:
 707              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/cc3HNvEk.s 			page 23


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc3HNvEk.s 			page 24


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 708              		.loc 2 140 27 view .LVU133
 709              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 710              		.loc 2 142 3 view .LVU134
 711              		.syntax unified
 712              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 713 0000 72B6     		cpsid i
 714              	@ 0 "" 2
 715              		.thumb
 716              		.syntax unified
 717              	.L31:
 718              	.LBE9:
 719              	.LBE8:
 433:Core/Src/main.c ****   while (1)
 720              		.loc 1 433 3 discriminator 1 view .LVU135
 434:Core/Src/main.c ****   {
 435:Core/Src/main.c ****   }
 721              		.loc 1 435 3 discriminator 1 view .LVU136
 433:Core/Src/main.c ****   while (1)
 722              		.loc 1 433 9 discriminator 1 view .LVU137
 723 0002 FEE7     		b	.L31
 724              		.cfi_endproc
 725              	.LFE76:
 727              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 728              		.align	1
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
ARM GAS  /tmp/cc3HNvEk.s 			page 25


 733              	MX_USART1_UART_Init:
 734              	.LFB73:
 341:Core/Src/main.c **** 
 735              		.loc 1 341 1 view -0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739 0000 08B5     		push	{r3, lr}
 740              	.LCFI8:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 3, -8
 743              		.cfi_offset 14, -4
 350:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 744              		.loc 1 350 3 view .LVU139
 350:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 745              		.loc 1 350 19 is_stmt 0 view .LVU140
 746 0002 0A48     		ldr	r0, .L36
 747 0004 0A4B     		ldr	r3, .L36+4
 748 0006 0360     		str	r3, [r0]
 351:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 749              		.loc 1 351 3 is_stmt 1 view .LVU141
 351:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 750              		.loc 1 351 24 is_stmt 0 view .LVU142
 751 0008 4FF4E133 		mov	r3, #115200
 752 000c 4360     		str	r3, [r0, #4]
 352:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 753              		.loc 1 352 3 is_stmt 1 view .LVU143
 352:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 754              		.loc 1 352 26 is_stmt 0 view .LVU144
 755 000e 0023     		movs	r3, #0
 756 0010 8360     		str	r3, [r0, #8]
 353:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 757              		.loc 1 353 3 is_stmt 1 view .LVU145
 353:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 758              		.loc 1 353 24 is_stmt 0 view .LVU146
 759 0012 C360     		str	r3, [r0, #12]
 354:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 760              		.loc 1 354 3 is_stmt 1 view .LVU147
 354:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 761              		.loc 1 354 22 is_stmt 0 view .LVU148
 762 0014 0361     		str	r3, [r0, #16]
 355:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 763              		.loc 1 355 3 is_stmt 1 view .LVU149
 355:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 764              		.loc 1 355 20 is_stmt 0 view .LVU150
 765 0016 0C22     		movs	r2, #12
 766 0018 4261     		str	r2, [r0, #20]
 356:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 767              		.loc 1 356 3 is_stmt 1 view .LVU151
 356:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 768              		.loc 1 356 25 is_stmt 0 view .LVU152
 769 001a 8361     		str	r3, [r0, #24]
 357:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 770              		.loc 1 357 3 is_stmt 1 view .LVU153
 357:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 771              		.loc 1 357 28 is_stmt 0 view .LVU154
 772 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/cc3HNvEk.s 			page 26


 358:Core/Src/main.c ****   {
 773              		.loc 1 358 3 is_stmt 1 view .LVU155
 358:Core/Src/main.c ****   {
 774              		.loc 1 358 7 is_stmt 0 view .LVU156
 775 001e FFF7FEFF 		bl	HAL_UART_Init
 776              	.LVL70:
 358:Core/Src/main.c ****   {
 777              		.loc 1 358 6 view .LVU157
 778 0022 00B9     		cbnz	r0, .L35
 366:Core/Src/main.c **** 
 779              		.loc 1 366 1 view .LVU158
 780 0024 08BD     		pop	{r3, pc}
 781              	.L35:
 360:Core/Src/main.c ****   }
 782              		.loc 1 360 5 is_stmt 1 view .LVU159
 783 0026 FFF7FEFF 		bl	Error_Handler
 784              	.LVL71:
 785              	.L37:
 786 002a 00BF     		.align	2
 787              	.L36:
 788 002c 00000000 		.word	huart1
 789 0030 00380140 		.word	1073821696
 790              		.cfi_endproc
 791              	.LFE73:
 793              		.section	.text.MX_TIM1_Init,"ax",%progbits
 794              		.align	1
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 799              	MX_TIM1_Init:
 800              	.LFB72:
 266:Core/Src/main.c **** 
 801              		.loc 1 266 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 88
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805 0000 10B5     		push	{r4, lr}
 806              	.LCFI9:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 4, -8
 809              		.cfi_offset 14, -4
 810 0002 96B0     		sub	sp, sp, #88
 811              	.LCFI10:
 812              		.cfi_def_cfa_offset 96
 272:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 813              		.loc 1 272 3 view .LVU161
 272:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 814              		.loc 1 272 26 is_stmt 0 view .LVU162
 815 0004 0024     		movs	r4, #0
 816 0006 1294     		str	r4, [sp, #72]
 817 0008 1394     		str	r4, [sp, #76]
 818 000a 1494     		str	r4, [sp, #80]
 819 000c 1594     		str	r4, [sp, #84]
 273:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 820              		.loc 1 273 3 is_stmt 1 view .LVU163
 273:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 821              		.loc 1 273 27 is_stmt 0 view .LVU164
ARM GAS  /tmp/cc3HNvEk.s 			page 27


 822 000e 1094     		str	r4, [sp, #64]
 823 0010 1194     		str	r4, [sp, #68]
 274:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 824              		.loc 1 274 3 is_stmt 1 view .LVU165
 274:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 825              		.loc 1 274 22 is_stmt 0 view .LVU166
 826 0012 0994     		str	r4, [sp, #36]
 827 0014 0A94     		str	r4, [sp, #40]
 828 0016 0B94     		str	r4, [sp, #44]
 829 0018 0C94     		str	r4, [sp, #48]
 830 001a 0D94     		str	r4, [sp, #52]
 831 001c 0E94     		str	r4, [sp, #56]
 832 001e 0F94     		str	r4, [sp, #60]
 275:Core/Src/main.c **** 
 833              		.loc 1 275 3 is_stmt 1 view .LVU167
 275:Core/Src/main.c **** 
 834              		.loc 1 275 34 is_stmt 0 view .LVU168
 835 0020 2022     		movs	r2, #32
 836 0022 2146     		mov	r1, r4
 837 0024 01A8     		add	r0, sp, #4
 838 0026 FFF7FEFF 		bl	memset
 839              	.LVL72:
 280:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 840              		.loc 1 280 3 is_stmt 1 view .LVU169
 280:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 841              		.loc 1 280 18 is_stmt 0 view .LVU170
 842 002a 2948     		ldr	r0, .L52
 843 002c 294B     		ldr	r3, .L52+4
 844 002e 0360     		str	r3, [r0]
 281:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 845              		.loc 1 281 3 is_stmt 1 view .LVU171
 281:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 846              		.loc 1 281 24 is_stmt 0 view .LVU172
 847 0030 4460     		str	r4, [r0, #4]
 282:Core/Src/main.c ****   htim1.Init.Period = 1023;
 848              		.loc 1 282 3 is_stmt 1 view .LVU173
 282:Core/Src/main.c ****   htim1.Init.Period = 1023;
 849              		.loc 1 282 26 is_stmt 0 view .LVU174
 850 0032 8460     		str	r4, [r0, #8]
 283:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 851              		.loc 1 283 3 is_stmt 1 view .LVU175
 283:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 852              		.loc 1 283 21 is_stmt 0 view .LVU176
 853 0034 40F2FF33 		movw	r3, #1023
 854 0038 C360     		str	r3, [r0, #12]
 284:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 855              		.loc 1 284 3 is_stmt 1 view .LVU177
 284:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 856              		.loc 1 284 28 is_stmt 0 view .LVU178
 857 003a 0461     		str	r4, [r0, #16]
 285:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 858              		.loc 1 285 3 is_stmt 1 view .LVU179
 285:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 859              		.loc 1 285 32 is_stmt 0 view .LVU180
 860 003c 4461     		str	r4, [r0, #20]
 286:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 861              		.loc 1 286 3 is_stmt 1 view .LVU181
ARM GAS  /tmp/cc3HNvEk.s 			page 28


 286:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 862              		.loc 1 286 32 is_stmt 0 view .LVU182
 863 003e 8461     		str	r4, [r0, #24]
 287:Core/Src/main.c ****   {
 864              		.loc 1 287 3 is_stmt 1 view .LVU183
 287:Core/Src/main.c ****   {
 865              		.loc 1 287 7 is_stmt 0 view .LVU184
 866 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 867              	.LVL73:
 287:Core/Src/main.c ****   {
 868              		.loc 1 287 6 view .LVU185
 869 0044 0028     		cmp	r0, #0
 870 0046 37D1     		bne	.L46
 291:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 871              		.loc 1 291 3 is_stmt 1 view .LVU186
 291:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 872              		.loc 1 291 34 is_stmt 0 view .LVU187
 873 0048 4FF48053 		mov	r3, #4096
 874 004c 1293     		str	r3, [sp, #72]
 292:Core/Src/main.c ****   {
 875              		.loc 1 292 3 is_stmt 1 view .LVU188
 292:Core/Src/main.c ****   {
 876              		.loc 1 292 7 is_stmt 0 view .LVU189
 877 004e 12A9     		add	r1, sp, #72
 878 0050 1F48     		ldr	r0, .L52
 879 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 880              	.LVL74:
 292:Core/Src/main.c ****   {
 881              		.loc 1 292 6 view .LVU190
 882 0056 0028     		cmp	r0, #0
 883 0058 30D1     		bne	.L47
 296:Core/Src/main.c ****   {
 884              		.loc 1 296 3 is_stmt 1 view .LVU191
 296:Core/Src/main.c ****   {
 885              		.loc 1 296 7 is_stmt 0 view .LVU192
 886 005a 1D48     		ldr	r0, .L52
 887 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 888              	.LVL75:
 296:Core/Src/main.c ****   {
 889              		.loc 1 296 6 view .LVU193
 890 0060 0028     		cmp	r0, #0
 891 0062 2DD1     		bne	.L48
 300:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 892              		.loc 1 300 3 is_stmt 1 view .LVU194
 300:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 893              		.loc 1 300 37 is_stmt 0 view .LVU195
 894 0064 0023     		movs	r3, #0
 895 0066 1093     		str	r3, [sp, #64]
 301:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 896              		.loc 1 301 3 is_stmt 1 view .LVU196
 301:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 897              		.loc 1 301 33 is_stmt 0 view .LVU197
 898 0068 1193     		str	r3, [sp, #68]
 302:Core/Src/main.c ****   {
 899              		.loc 1 302 3 is_stmt 1 view .LVU198
 302:Core/Src/main.c ****   {
 900              		.loc 1 302 7 is_stmt 0 view .LVU199
ARM GAS  /tmp/cc3HNvEk.s 			page 29


 901 006a 10A9     		add	r1, sp, #64
 902 006c 1848     		ldr	r0, .L52
 903 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 904              	.LVL76:
 302:Core/Src/main.c ****   {
 905              		.loc 1 302 6 view .LVU200
 906 0072 38BB     		cbnz	r0, .L49
 306:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 907              		.loc 1 306 3 is_stmt 1 view .LVU201
 306:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 908              		.loc 1 306 20 is_stmt 0 view .LVU202
 909 0074 6023     		movs	r3, #96
 910 0076 0993     		str	r3, [sp, #36]
 307:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 911              		.loc 1 307 3 is_stmt 1 view .LVU203
 307:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 912              		.loc 1 307 19 is_stmt 0 view .LVU204
 913 0078 0022     		movs	r2, #0
 914 007a 0A92     		str	r2, [sp, #40]
 308:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 915              		.loc 1 308 3 is_stmt 1 view .LVU205
 308:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 916              		.loc 1 308 24 is_stmt 0 view .LVU206
 917 007c 0B92     		str	r2, [sp, #44]
 309:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 918              		.loc 1 309 3 is_stmt 1 view .LVU207
 309:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 919              		.loc 1 309 25 is_stmt 0 view .LVU208
 920 007e 0C92     		str	r2, [sp, #48]
 310:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 921              		.loc 1 310 3 is_stmt 1 view .LVU209
 310:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 922              		.loc 1 310 24 is_stmt 0 view .LVU210
 923 0080 0D92     		str	r2, [sp, #52]
 311:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 924              		.loc 1 311 3 is_stmt 1 view .LVU211
 311:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 925              		.loc 1 311 25 is_stmt 0 view .LVU212
 926 0082 0E92     		str	r2, [sp, #56]
 312:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 927              		.loc 1 312 3 is_stmt 1 view .LVU213
 312:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 928              		.loc 1 312 26 is_stmt 0 view .LVU214
 929 0084 0F92     		str	r2, [sp, #60]
 313:Core/Src/main.c ****   {
 930              		.loc 1 313 3 is_stmt 1 view .LVU215
 313:Core/Src/main.c ****   {
 931              		.loc 1 313 7 is_stmt 0 view .LVU216
 932 0086 09A9     		add	r1, sp, #36
 933 0088 1148     		ldr	r0, .L52
 934 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 935              	.LVL77:
 313:Core/Src/main.c ****   {
 936              		.loc 1 313 6 view .LVU217
 937 008e D8B9     		cbnz	r0, .L50
 317:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 938              		.loc 1 317 3 is_stmt 1 view .LVU218
ARM GAS  /tmp/cc3HNvEk.s 			page 30


 317:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 939              		.loc 1 317 40 is_stmt 0 view .LVU219
 940 0090 0023     		movs	r3, #0
 941 0092 0193     		str	r3, [sp, #4]
 318:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 942              		.loc 1 318 3 is_stmt 1 view .LVU220
 318:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 943              		.loc 1 318 41 is_stmt 0 view .LVU221
 944 0094 0293     		str	r3, [sp, #8]
 319:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 945              		.loc 1 319 3 is_stmt 1 view .LVU222
 319:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 946              		.loc 1 319 34 is_stmt 0 view .LVU223
 947 0096 0393     		str	r3, [sp, #12]
 320:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 948              		.loc 1 320 3 is_stmt 1 view .LVU224
 320:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 949              		.loc 1 320 33 is_stmt 0 view .LVU225
 950 0098 0493     		str	r3, [sp, #16]
 321:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 951              		.loc 1 321 3 is_stmt 1 view .LVU226
 321:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 952              		.loc 1 321 35 is_stmt 0 view .LVU227
 953 009a 0593     		str	r3, [sp, #20]
 322:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 954              		.loc 1 322 3 is_stmt 1 view .LVU228
 322:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 955              		.loc 1 322 38 is_stmt 0 view .LVU229
 956 009c 4FF40052 		mov	r2, #8192
 957 00a0 0692     		str	r2, [sp, #24]
 323:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 958              		.loc 1 323 3 is_stmt 1 view .LVU230
 323:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 959              		.loc 1 323 40 is_stmt 0 view .LVU231
 960 00a2 0893     		str	r3, [sp, #32]
 324:Core/Src/main.c ****   {
 961              		.loc 1 324 3 is_stmt 1 view .LVU232
 324:Core/Src/main.c ****   {
 962              		.loc 1 324 7 is_stmt 0 view .LVU233
 963 00a4 01A9     		add	r1, sp, #4
 964 00a6 0A48     		ldr	r0, .L52
 965 00a8 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 966              	.LVL78:
 324:Core/Src/main.c ****   {
 967              		.loc 1 324 6 view .LVU234
 968 00ac 70B9     		cbnz	r0, .L51
 331:Core/Src/main.c **** 
 969              		.loc 1 331 3 is_stmt 1 view .LVU235
 970 00ae 0848     		ldr	r0, .L52
 971 00b0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 972              	.LVL79:
 333:Core/Src/main.c **** 
 973              		.loc 1 333 1 is_stmt 0 view .LVU236
 974 00b4 16B0     		add	sp, sp, #88
 975              	.LCFI11:
 976              		.cfi_remember_state
 977              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3HNvEk.s 			page 31


 978              		@ sp needed
 979 00b6 10BD     		pop	{r4, pc}
 980              	.L46:
 981              	.LCFI12:
 982              		.cfi_restore_state
 289:Core/Src/main.c ****   }
 983              		.loc 1 289 5 is_stmt 1 view .LVU237
 984 00b8 FFF7FEFF 		bl	Error_Handler
 985              	.LVL80:
 986              	.L47:
 294:Core/Src/main.c ****   }
 987              		.loc 1 294 5 view .LVU238
 988 00bc FFF7FEFF 		bl	Error_Handler
 989              	.LVL81:
 990              	.L48:
 298:Core/Src/main.c ****   }
 991              		.loc 1 298 5 view .LVU239
 992 00c0 FFF7FEFF 		bl	Error_Handler
 993              	.LVL82:
 994              	.L49:
 304:Core/Src/main.c ****   }
 995              		.loc 1 304 5 view .LVU240
 996 00c4 FFF7FEFF 		bl	Error_Handler
 997              	.LVL83:
 998              	.L50:
 315:Core/Src/main.c ****   }
 999              		.loc 1 315 5 view .LVU241
 1000 00c8 FFF7FEFF 		bl	Error_Handler
 1001              	.LVL84:
 1002              	.L51:
 326:Core/Src/main.c ****   }
 1003              		.loc 1 326 5 view .LVU242
 1004 00cc FFF7FEFF 		bl	Error_Handler
 1005              	.LVL85:
 1006              	.L53:
 1007              		.align	2
 1008              	.L52:
 1009 00d0 00000000 		.word	htim1
 1010 00d4 002C0140 		.word	1073818624
 1011              		.cfi_endproc
 1012              	.LFE72:
 1014              		.section	.text.SystemClock_Config,"ax",%progbits
 1015              		.align	1
 1016              		.global	SystemClock_Config
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1021              	SystemClock_Config:
 1022              	.LFB71:
 226:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1023              		.loc 1 226 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 64
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027 0000 00B5     		push	{lr}
 1028              	.LCFI13:
 1029              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc3HNvEk.s 			page 32


 1030              		.cfi_offset 14, -4
 1031 0002 91B0     		sub	sp, sp, #68
 1032              	.LCFI14:
 1033              		.cfi_def_cfa_offset 72
 227:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1034              		.loc 1 227 3 view .LVU244
 227:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1035              		.loc 1 227 22 is_stmt 0 view .LVU245
 1036 0004 2822     		movs	r2, #40
 1037 0006 0021     		movs	r1, #0
 1038 0008 06A8     		add	r0, sp, #24
 1039 000a FFF7FEFF 		bl	memset
 1040              	.LVL86:
 228:Core/Src/main.c **** 
 1041              		.loc 1 228 3 is_stmt 1 view .LVU246
 228:Core/Src/main.c **** 
 1042              		.loc 1 228 22 is_stmt 0 view .LVU247
 1043 000e 0023     		movs	r3, #0
 1044 0010 0193     		str	r3, [sp, #4]
 1045 0012 0293     		str	r3, [sp, #8]
 1046 0014 0393     		str	r3, [sp, #12]
 1047 0016 0493     		str	r3, [sp, #16]
 1048 0018 0593     		str	r3, [sp, #20]
 233:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1049              		.loc 1 233 3 is_stmt 1 view .LVU248
 233:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1050              		.loc 1 233 36 is_stmt 0 view .LVU249
 1051 001a 0122     		movs	r2, #1
 1052 001c 0692     		str	r2, [sp, #24]
 234:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1053              		.loc 1 234 3 is_stmt 1 view .LVU250
 234:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1054              		.loc 1 234 30 is_stmt 0 view .LVU251
 1055 001e 4FF48033 		mov	r3, #65536
 1056 0022 0793     		str	r3, [sp, #28]
 235:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1057              		.loc 1 235 3 is_stmt 1 view .LVU252
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1058              		.loc 1 236 3 view .LVU253
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1059              		.loc 1 236 30 is_stmt 0 view .LVU254
 1060 0024 0A92     		str	r2, [sp, #40]
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1061              		.loc 1 237 3 is_stmt 1 view .LVU255
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1062              		.loc 1 237 34 is_stmt 0 view .LVU256
 1063 0026 0222     		movs	r2, #2
 1064 0028 0D92     		str	r2, [sp, #52]
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1065              		.loc 1 238 3 is_stmt 1 view .LVU257
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1066              		.loc 1 238 35 is_stmt 0 view .LVU258
 1067 002a 0E93     		str	r3, [sp, #56]
 239:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1068              		.loc 1 239 3 is_stmt 1 view .LVU259
 239:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1069              		.loc 1 239 32 is_stmt 0 view .LVU260
ARM GAS  /tmp/cc3HNvEk.s 			page 33


 1070 002c 4FF4E013 		mov	r3, #1835008
 1071 0030 0F93     		str	r3, [sp, #60]
 240:Core/Src/main.c ****   {
 1072              		.loc 1 240 3 is_stmt 1 view .LVU261
 240:Core/Src/main.c ****   {
 1073              		.loc 1 240 7 is_stmt 0 view .LVU262
 1074 0032 06A8     		add	r0, sp, #24
 1075 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1076              	.LVL87:
 240:Core/Src/main.c ****   {
 1077              		.loc 1 240 6 view .LVU263
 1078 0038 80B9     		cbnz	r0, .L58
 247:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1079              		.loc 1 247 3 is_stmt 1 view .LVU264
 247:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1080              		.loc 1 247 31 is_stmt 0 view .LVU265
 1081 003a 0F23     		movs	r3, #15
 1082 003c 0193     		str	r3, [sp, #4]
 249:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1083              		.loc 1 249 3 is_stmt 1 view .LVU266
 249:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1084              		.loc 1 249 34 is_stmt 0 view .LVU267
 1085 003e 0221     		movs	r1, #2
 1086 0040 0291     		str	r1, [sp, #8]
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1087              		.loc 1 250 3 is_stmt 1 view .LVU268
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1088              		.loc 1 250 35 is_stmt 0 view .LVU269
 1089 0042 0023     		movs	r3, #0
 1090 0044 0393     		str	r3, [sp, #12]
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1091              		.loc 1 251 3 is_stmt 1 view .LVU270
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1092              		.loc 1 251 36 is_stmt 0 view .LVU271
 1093 0046 4FF48062 		mov	r2, #1024
 1094 004a 0492     		str	r2, [sp, #16]
 252:Core/Src/main.c **** 
 1095              		.loc 1 252 3 is_stmt 1 view .LVU272
 252:Core/Src/main.c **** 
 1096              		.loc 1 252 36 is_stmt 0 view .LVU273
 1097 004c 0593     		str	r3, [sp, #20]
 254:Core/Src/main.c ****   {
 1098              		.loc 1 254 3 is_stmt 1 view .LVU274
 254:Core/Src/main.c ****   {
 1099              		.loc 1 254 7 is_stmt 0 view .LVU275
 1100 004e 01A8     		add	r0, sp, #4
 1101 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1102              	.LVL88:
 254:Core/Src/main.c ****   {
 1103              		.loc 1 254 6 view .LVU276
 1104 0054 20B9     		cbnz	r0, .L59
 258:Core/Src/main.c **** 
 1105              		.loc 1 258 1 view .LVU277
 1106 0056 11B0     		add	sp, sp, #68
 1107              	.LCFI15:
 1108              		.cfi_remember_state
 1109              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc3HNvEk.s 			page 34


 1110              		@ sp needed
 1111 0058 5DF804FB 		ldr	pc, [sp], #4
 1112              	.L58:
 1113              	.LCFI16:
 1114              		.cfi_restore_state
 242:Core/Src/main.c ****   }
 1115              		.loc 1 242 5 is_stmt 1 view .LVU278
 1116 005c FFF7FEFF 		bl	Error_Handler
 1117              	.LVL89:
 1118              	.L59:
 256:Core/Src/main.c ****   }
 1119              		.loc 1 256 5 view .LVU279
 1120 0060 FFF7FEFF 		bl	Error_Handler
 1121              	.LVL90:
 1122              		.cfi_endproc
 1123              	.LFE71:
 1125              		.section	.text.main,"ax",%progbits
 1126              		.align	1
 1127              		.global	main
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1132              	main:
 1133              	.LFB70:
 174:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1134              		.loc 1 174 1 view -0
 1135              		.cfi_startproc
 1136              		@ Volatile: function does not return.
 1137              		@ args = 0, pretend = 0, frame = 0
 1138              		@ frame_needed = 0, uses_anonymous_args = 0
 1139 0000 08B5     		push	{r3, lr}
 1140              	.LCFI17:
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 3, -8
 1143              		.cfi_offset 14, -4
 182:Core/Src/main.c **** 
 1144              		.loc 1 182 3 view .LVU281
 1145 0002 FFF7FEFF 		bl	HAL_Init
 1146              	.LVL91:
 189:Core/Src/main.c **** 
 1147              		.loc 1 189 3 view .LVU282
 1148 0006 FFF7FEFF 		bl	SystemClock_Config
 1149              	.LVL92:
 196:Core/Src/main.c ****   MX_DMA_Init();
 1150              		.loc 1 196 3 view .LVU283
 1151 000a FFF7FEFF 		bl	MX_GPIO_Init
 1152              	.LVL93:
 197:Core/Src/main.c ****   MX_USART1_UART_Init();
 1153              		.loc 1 197 3 view .LVU284
 1154 000e FFF7FEFF 		bl	MX_DMA_Init
 1155              	.LVL94:
 198:Core/Src/main.c ****   MX_TIM1_Init();
 1156              		.loc 1 198 3 view .LVU285
 1157 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1158              	.LVL95:
 199:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1159              		.loc 1 199 3 view .LVU286
ARM GAS  /tmp/cc3HNvEk.s 			page 35


 1160 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1161              	.LVL96:
 201:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 1162              		.loc 1 201 4 view .LVU287
 201:Core/Src/main.c ****   	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 1163              		.loc 1 201 15 is_stmt 0 view .LVU288
 1164 001a 094B     		ldr	r3, .L63
 1165 001c 6422     		movs	r2, #100
 1166 001e 5A63     		str	r2, [r3, #52]
 202:Core/Src/main.c **** 
 1167              		.loc 1 202 4 is_stmt 1 view .LVU289
 1168 0020 0021     		movs	r1, #0
 1169 0022 0848     		ldr	r0, .L63+4
 1170 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1171              	.LVL97:
 1172              	.L61:
 208:Core/Src/main.c ****   {
 1173              		.loc 1 208 3 discriminator 1 view .LVU290
 211:Core/Src/main.c **** 	
 1174              		.loc 1 211 2 discriminator 1 view .LVU291
 1175 0028 074C     		ldr	r4, .L63+8
 1176 002a 6423     		movs	r3, #100
 1177 002c 0122     		movs	r2, #1
 1178 002e 2146     		mov	r1, r4
 1179 0030 0648     		ldr	r0, .L63+12
 1180 0032 FFF7FEFF 		bl	HAL_UART_Receive
 1181              	.LVL98:
 213:Core/Src/main.c **** 	/* USER CODE BEGIN 3 */
 1182              		.loc 1 213 2 discriminator 1 view .LVU292
 1183 0036 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1184 0038 3038     		subs	r0, r0, #48
 1185 003a FFF7FEFF 		bl	seg
 1186              	.LVL99:
 208:Core/Src/main.c ****   {
 1187              		.loc 1 208 9 discriminator 1 view .LVU293
 1188 003e F3E7     		b	.L61
 1189              	.L64:
 1190              		.align	2
 1191              	.L63:
 1192 0040 002C0140 		.word	1073818624
 1193 0044 00000000 		.word	htim1
 1194 0048 00000000 		.word	receive
 1195 004c 00000000 		.word	huart1
 1196              		.cfi_endproc
 1197              	.LFE70:
 1199              		.global	huart1
 1200              		.section	.bss.huart1,"aw",%nobits
 1201              		.align	2
 1204              	huart1:
 1205 0000 00000000 		.space	68
 1205      00000000 
 1205      00000000 
 1205      00000000 
 1205      00000000 
 1206              		.global	hdma_tim1_ch1
 1207              		.section	.bss.hdma_tim1_ch1,"aw",%nobits
 1208              		.align	2
ARM GAS  /tmp/cc3HNvEk.s 			page 36


 1211              	hdma_tim1_ch1:
 1212 0000 00000000 		.space	68
 1212      00000000 
 1212      00000000 
 1212      00000000 
 1212      00000000 
 1213              		.global	htim1
 1214              		.section	.bss.htim1,"aw",%nobits
 1215              		.align	2
 1218              	htim1:
 1219 0000 00000000 		.space	72
 1219      00000000 
 1219      00000000 
 1219      00000000 
 1219      00000000 
 1220              		.global	receive
 1221              		.section	.bss.receive,"aw",%nobits
 1224              	receive:
 1225 0000 00       		.space	1
 1226              		.text
 1227              	.Letext0:
 1228              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1229              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1230              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1231              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1232              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1233              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1234              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1235              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1236              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1237              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1238              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1239              		.file 14 "Core/Inc/main.h"
 1240              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1241              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1242              		.file 17 "<built-in>"
ARM GAS  /tmp/cc3HNvEk.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc3HNvEk.s:19     .text.reset:0000000000000000 $t
     /tmp/cc3HNvEk.s:24     .text.reset:0000000000000000 reset
     /tmp/cc3HNvEk.s:92     .text.reset:000000000000005c $d
     /tmp/cc3HNvEk.s:98     .text.seg:0000000000000000 $t
     /tmp/cc3HNvEk.s:103    .text.seg:0000000000000000 seg
     /tmp/cc3HNvEk.s:126    .text.seg:000000000000000c $d
     /tmp/cc3HNvEk.s:138    .text.seg:0000000000000024 $t
     /tmp/cc3HNvEk.s:482    .text.seg:0000000000000250 $d
     /tmp/cc3HNvEk.s:488    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc3HNvEk.s:493    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc3HNvEk.s:625    .text.MX_GPIO_Init:0000000000000094 $d
     /tmp/cc3HNvEk.s:632    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc3HNvEk.s:637    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc3HNvEk.s:685    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/cc3HNvEk.s:690    .text.Error_Handler:0000000000000000 $t
     /tmp/cc3HNvEk.s:696    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc3HNvEk.s:728    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc3HNvEk.s:733    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc3HNvEk.s:788    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/cc3HNvEk.s:1204   .bss.huart1:0000000000000000 huart1
     /tmp/cc3HNvEk.s:794    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cc3HNvEk.s:799    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cc3HNvEk.s:1009   .text.MX_TIM1_Init:00000000000000d0 $d
     /tmp/cc3HNvEk.s:1218   .bss.htim1:0000000000000000 htim1
     /tmp/cc3HNvEk.s:1015   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc3HNvEk.s:1021   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc3HNvEk.s:1126   .text.main:0000000000000000 $t
     /tmp/cc3HNvEk.s:1132   .text.main:0000000000000000 main
     /tmp/cc3HNvEk.s:1192   .text.main:0000000000000040 $d
     /tmp/cc3HNvEk.s:1224   .bss.receive:0000000000000000 receive
     /tmp/cc3HNvEk.s:1201   .bss.huart1:0000000000000000 $d
     /tmp/cc3HNvEk.s:1211   .bss.hdma_tim1_ch1:0000000000000000 hdma_tim1_ch1
     /tmp/cc3HNvEk.s:1208   .bss.hdma_tim1_ch1:0000000000000000 $d
     /tmp/cc3HNvEk.s:1215   .bss.htim1:0000000000000000 $d
     /tmp/cc3HNvEk.s:1225   .bss.receive:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_UART_Receive
ARM GAS  /tmp/cc3HNvEk.s 			page 38


